{"version":3,"names":["buttonIosCss","buttonMdCss","Button","constructor","hostRef","this","inItem","inListHeader","inToolbar","inheritedAttributes","buttonType","disabled","routerDirection","strong","type","handleClick","ev","el","openURL","href","routerAnimation","hasShadowDom","formEl","findForm","form","undefined","printIonWarning","closest","preventDefault","fakeButton","document","createElement","style","display","appendChild","click","remove","onFocus","ionFocus","emit","onBlur","ionBlur","componentWillLoad","inheritAriaAttributes","hasIconOnly","querySelector","rippleType","hasClearFill","fill","HTMLFormElement","getElementById","render","mode","getIonMode","rel","target","size","color","expand","shape","finalSize","TagType","attrs","download","h","Host","onClick","class","createColorClasses","hostContext","Object","assign","part","name","buttonsIosCss","buttonsMdCss","Buttons","collapse","pickerColumnInternalIosCss","pickerColumnInternalMdCss","PickerColumnInternal","isScrolling","isColumnVisible","canExitInputMode","isActive","items","numericInput","centerPickerItemInView","smooth","top","offsetTop","clientHeight","scrollTop","scroll","left","behavior","inputModeChange","useInputMode","inputModeColumn","detail","isColumnActive","setInputModeActive","state","scrollEndCallback","initializeScrollListener","timeout","activeEl","activeItem","scrollCallback","raf","clearTimeout","hapticSelectionStart","bbox","getBoundingClientRect","centerX","x","width","centerY","y","height","activeElement","shadowRoot","elementFromPoint","classList","PICKER_COL_ACTIVE","hapticSelectionChanged","exitInputMode","add","setTimeout","hapticSelectionEnd","dataIndex","getAttribute","index","parseInt","selectedItem","value","setValue","addEventListener","destroyScrollListener","removeEventListener","parentEl","valueChange","scrollActiveItemIntoView","visibleCallback","entries","_a","isIntersecting","oldActive","getElementRoot","IntersectionObserver","threshold","observe","componentDidRender","async","findItem","find","item","ionChange","tabindex","map","text","pickerInternalIosCss","pickerInternalMdCss","PickerInternal","isInHighlightBounds","highlightEl","outsideX","clientX","right","outsideY","clientY","bottom","onFocusOut","relatedTarget","tagName","inputEl","onFocusIn","actionOnClick","columnEl","allowInput","enterInputMode","onPointerDown","columns","querySelectorAll","length","focusInput","hasInputColumn","destroyKeypressListener","focus","onKeyPress","emitInputModeChange","parsedValue","key","Number","isNaN","onInputChange","selectSingleColumn","singleColumnSearchTimeout","values","filter","startIndex","newString","substring","findItemFromCompleteValue","parsedText","replace","changedCharacter","searchColumn","colEl","zeroBehavior","selectMultiColumn","numericPickers","Array","from","col","firstColumn","lastColumn","minuteValue","firstCharacter","firstCharacterAgain","firstCharacterAgainAgain","minuteValueAgain","ionInputModeChange","preventTouchStartPropagation","stopPropagation","blur","inputmode","ref","onInput"],"sources":["./node_modules/@ionic/core/dist/collection/components/button/button.ios.css?tag=ion-button&mode=ios&encapsulation=shadow","./node_modules/@ionic/core/dist/collection/components/button/button.md.css?tag=ion-button&mode=md&encapsulation=shadow","./node_modules/@ionic/core/dist/collection/components/button/button.js","./node_modules/@ionic/core/dist/collection/components/buttons/buttons.ios.css?tag=ion-buttons&mode=ios&encapsulation=scoped","./node_modules/@ionic/core/dist/collection/components/buttons/buttons.md.css?tag=ion-buttons&mode=md&encapsulation=scoped","./node_modules/@ionic/core/dist/collection/components/buttons/buttons.js","./node_modules/@ionic/core/dist/collection/components/picker-column-internal/picker-column-internal.ios.css?tag=ion-picker-column-internal&mode=ios&encapsulation=shadow","./node_modules/@ionic/core/dist/collection/components/picker-column-internal/picker-column-internal.md.css?tag=ion-picker-column-internal&mode=md&encapsulation=shadow","./node_modules/@ionic/core/dist/collection/components/picker-column-internal/picker-column-internal.js","./node_modules/@ionic/core/dist/collection/components/picker-internal/picker-internal.ios.css?tag=ion-picker-internal&mode=ios&encapsulation=shadow","./node_modules/@ionic/core/dist/collection/components/picker-internal/picker-internal.md.css?tag=ion-picker-internal&mode=md&encapsulation=shadow","./node_modules/@ionic/core/dist/collection/components/picker-internal/picker-internal.js"],"sourcesContent":[":host {\n  /**\n   * @prop --background: Background of the button\n   * @prop --background-activated: Background of the button when pressed. Note: setting this will interfere with the Material Design ripple.\n   * @prop --background-activated-opacity: Opacity of the button when pressed\n   * @prop --background-focused: Background of the button when focused with the tab key\n   * @prop --background-focused-opacity: Opacity of the button when focused with the tab key\n   * @prop --background-hover: Background of the button on hover\n   * @prop --background-hover-opacity: Opacity of the background on hover\n   *\n   * @prop --color: Text color of the button\n   * @prop --color-activated: Text color of the button when pressed\n   * @prop --color-focused: Text color of the button when focused with the tab key\n   * @prop --color-hover: Text color of the button when hover\n   *\n   * @prop --transition: Transition of the button\n   *\n   * @prop --border-radius: Border radius of the button\n   * @prop --border-width: Border width of the button\n   * @prop --border-style: Border style of the button\n   * @prop --border-color: Border color of the button\n   *\n   * @prop --ripple-color: Color of the button ripple effect\n   *\n   * @prop --box-shadow: Box shadow of the button\n   * @prop --opacity: Opacity of the button\n   *\n   * @prop --padding-top: Top padding of the button\n   * @prop --padding-end: Right padding if direction is left-to-right, and left padding if direction is right-to-left of the button\n   * @prop --padding-bottom: Bottom padding of the button\n   * @prop --padding-start: Left padding if direction is left-to-right, and right padding if direction is right-to-left of the button\n   */\n  --overflow: hidden;\n  --ripple-color: currentColor;\n  --border-width: initial;\n  --border-color: initial;\n  --border-style: initial;\n  --color-activated: var(--color);\n  --color-focused: var(--color);\n  --color-hover: var(--color);\n  --box-shadow: none;\n  display: inline-block;\n  width: auto;\n  color: var(--color);\n  font-family: var(--ion-font-family, inherit);\n  text-align: center;\n  text-decoration: none;\n  text-overflow: ellipsis;\n  white-space: nowrap;\n  user-select: none;\n  vertical-align: top;\n  vertical-align: -webkit-baseline-middle;\n  font-kerning: none;\n}\n\n:host(.button-disabled) {\n  cursor: default;\n  opacity: 0.5;\n  pointer-events: none;\n}\n\n:host(.button-solid) {\n  --background: var(--ion-color-primary, #3880ff);\n  --color: var(--ion-color-primary-contrast, #fff);\n}\n\n:host(.button-outline) {\n  --border-color: var(--ion-color-primary, #3880ff);\n  --background: transparent;\n  --color: var(--ion-color-primary, #3880ff);\n}\n\n:host(.button-clear) {\n  --border-width: 0;\n  --background: transparent;\n  --color: var(--ion-color-primary, #3880ff);\n}\n\n:host(.button-block) {\n  display: block;\n}\n\n:host(.button-block) .button-native {\n  margin-left: 0;\n  margin-right: 0;\n  display: block;\n  width: 100%;\n  clear: both;\n  contain: content;\n}\n\n:host(.button-block) .button-native::after {\n  clear: both;\n}\n\n:host(.button-full) {\n  display: block;\n}\n\n:host(.button-full) .button-native {\n  margin-left: 0;\n  margin-right: 0;\n  display: block;\n  width: 100%;\n  contain: content;\n}\n\n:host(.button-full:not(.button-round)) .button-native {\n  border-radius: 0;\n  border-right-width: 0;\n  border-left-width: 0;\n}\n\n.button-native {\n  border-radius: var(--border-radius);\n  -moz-osx-font-smoothing: grayscale;\n  -webkit-font-smoothing: antialiased;\n  margin-left: 0;\n  margin-right: 0;\n  margin-top: 0;\n  margin-bottom: 0;\n  padding-left: var(--padding-start);\n  padding-right: var(--padding-end);\n  padding-top: var(--padding-top);\n  padding-bottom: var(--padding-bottom);\n  font-family: inherit;\n  font-size: inherit;\n  font-style: inherit;\n  font-weight: inherit;\n  letter-spacing: inherit;\n  text-decoration: inherit;\n  text-indent: inherit;\n  text-overflow: inherit;\n  text-transform: inherit;\n  text-align: inherit;\n  white-space: inherit;\n  color: inherit;\n  display: block;\n  position: relative;\n  width: 100%;\n  height: 100%;\n  transition: var(--transition);\n  border-width: var(--border-width);\n  border-style: var(--border-style);\n  border-color: var(--border-color);\n  outline: none;\n  background: var(--background);\n  line-height: 1;\n  box-shadow: var(--box-shadow);\n  contain: layout style;\n  cursor: pointer;\n  opacity: var(--opacity);\n  overflow: var(--overflow);\n  z-index: 0;\n  box-sizing: border-box;\n  appearance: none;\n}\n@supports (margin-inline-start: 0) or (-webkit-margin-start: 0) {\n  .button-native {\n    padding-left: unset;\n    padding-right: unset;\n    -webkit-padding-start: var(--padding-start);\n    padding-inline-start: var(--padding-start);\n    -webkit-padding-end: var(--padding-end);\n    padding-inline-end: var(--padding-end);\n  }\n}\n\n.button-native::-moz-focus-inner {\n  border: 0;\n}\n\n.button-inner {\n  display: flex;\n  position: relative;\n  flex-flow: row nowrap;\n  flex-shrink: 0;\n  align-items: center;\n  justify-content: center;\n  width: 100%;\n  height: 100%;\n  z-index: 1;\n}\n\n::slotted(ion-icon) {\n  font-size: 1.4em;\n  pointer-events: none;\n}\n\n::slotted(ion-icon[slot=start]) {\n  margin-left: -0.3em;\n  margin-right: 0.3em;\n  margin-top: 0;\n  margin-bottom: 0;\n}\n@supports (margin-inline-start: 0) or (-webkit-margin-start: 0) {\n  ::slotted(ion-icon[slot=start]) {\n    margin-left: unset;\n    margin-right: unset;\n    -webkit-margin-start: -0.3em;\n    margin-inline-start: -0.3em;\n    -webkit-margin-end: 0.3em;\n    margin-inline-end: 0.3em;\n  }\n}\n\n::slotted(ion-icon[slot=end]) {\n  margin-left: 0.3em;\n  margin-right: -0.2em;\n  margin-top: 0;\n  margin-bottom: 0;\n}\n@supports (margin-inline-start: 0) or (-webkit-margin-start: 0) {\n  ::slotted(ion-icon[slot=end]) {\n    margin-left: unset;\n    margin-right: unset;\n    -webkit-margin-start: 0.3em;\n    margin-inline-start: 0.3em;\n    -webkit-margin-end: -0.2em;\n    margin-inline-end: -0.2em;\n  }\n}\n\n::slotted(ion-icon[slot=icon-only]) {\n  font-size: 1.8em;\n}\n\nion-ripple-effect {\n  color: var(--ripple-color);\n}\n\n.button-native::after {\n  left: 0;\n  right: 0;\n  top: 0;\n  bottom: 0;\n  position: absolute;\n  content: \"\";\n  opacity: 0;\n}\n\n:host(.ion-activated) {\n  color: var(--color-activated);\n}\n\n:host(.ion-activated) .button-native::after {\n  background: var(--background-activated);\n  opacity: var(--background-activated-opacity);\n}\n\n:host(.ion-focused) {\n  color: var(--color-focused);\n}\n\n:host(.ion-focused) .button-native::after {\n  background: var(--background-focused);\n  opacity: var(--background-focused-opacity);\n}\n\n@media (any-hover: hover) {\n  :host(:hover) {\n    color: var(--color-hover);\n  }\n\n  :host(:hover) .button-native::after {\n    background: var(--background-hover);\n    opacity: var(--background-hover-opacity);\n  }\n}\n:host(.button-solid.ion-color) .button-native {\n  background: var(--ion-color-base);\n  color: var(--ion-color-contrast);\n}\n\n:host(.button-outline.ion-color) .button-native {\n  border-color: var(--ion-color-base);\n  background: transparent;\n  color: var(--ion-color-base);\n}\n\n:host(.button-clear.ion-color) .button-native {\n  background: transparent;\n  color: var(--ion-color-base);\n}\n\n:host(.in-toolbar:not(.ion-color):not(.in-toolbar-color)) .button-native {\n  color: var(--ion-toolbar-color, var(--color));\n}\n\n:host(.button-outline.in-toolbar:not(.ion-color):not(.in-toolbar-color)) .button-native {\n  border-color: var(--ion-toolbar-color, var(--color, var(--border-color)));\n}\n\n:host(.button-solid.in-toolbar:not(.ion-color):not(.in-toolbar-color)) .button-native {\n  background: var(--ion-toolbar-color, var(--background));\n  color: var(--ion-toolbar-background, var(--color));\n}\n\n:host {\n  --border-radius: 10px;\n  --padding-top: 0;\n  --padding-bottom: 0;\n  --padding-start: 1em;\n  --padding-end: 1em;\n  --transition: background-color, opacity 100ms linear;\n  margin-left: 2px;\n  margin-right: 2px;\n  margin-top: 4px;\n  margin-bottom: 4px;\n  height: 2.8em;\n  font-size: 16px;\n  font-weight: 500;\n  letter-spacing: -0.03em;\n}\n@supports (margin-inline-start: 0) or (-webkit-margin-start: 0) {\n  :host {\n    margin-left: unset;\n    margin-right: unset;\n    -webkit-margin-start: 2px;\n    margin-inline-start: 2px;\n    -webkit-margin-end: 2px;\n    margin-inline-end: 2px;\n  }\n}\n\n/**\n * The default buttons in a toolbar\n * have a different font size/weight\n * than buttons outside of a toolbar on iOS.\n * However, we still want the \"size\"/\"strong\"\n * properties to be usable in a toolbar, so we add\n * the .in-buttons selector such that we\n * can add the different font size/weight in a toolbar\n * but still let \"size\"/\"strong\" override it.\n */\n:host(.in-buttons) {\n  font-size: 17px;\n  font-weight: 400;\n}\n\n:host(.button-solid) {\n  --background-activated: var(--ion-color-primary-shade, #3171e0);\n  --background-focused: var(--ion-color-primary-shade, #3171e0);\n  --background-hover: var(--ion-color-primary-tint, #4c8dff);\n  --background-activated-opacity: 1;\n  --background-focused-opacity: 1;\n  --background-hover-opacity: 1;\n}\n\n:host(.button-outline) {\n  --border-radius: 10px;\n  --border-width: 1px;\n  --border-style: solid;\n  --background-activated: var(--ion-color-primary, #3880ff);\n  --background-focused: var(--ion-color-primary, #3880ff);\n  --background-hover: transparent;\n  --background-focused-opacity: .1;\n  --color-activated: var(--ion-color-primary-contrast, #fff);\n}\n\n:host(.button-clear) {\n  --background-activated: transparent;\n  --background-focused: var(--ion-color-primary, #3880ff);\n  --background-hover: transparent;\n  --background-focused-opacity: .1;\n  font-size: 17px;\n  font-weight: normal;\n  letter-spacing: 0;\n}\n\n:host(.button-large) {\n  --border-radius: 12px;\n  --padding-top: 0;\n  --padding-start: 1em;\n  --padding-end: 1em;\n  --padding-bottom: 0;\n  height: 2.8em;\n  font-size: 20px;\n}\n\n:host(.button-small) {\n  --border-radius: 6px;\n  --padding-top: 0;\n  --padding-start: 0.9em;\n  --padding-end: 0.9em;\n  --padding-bottom: 0;\n  height: 2.1em;\n  font-size: 13px;\n}\n\n:host(.button-round) {\n  --border-radius: 64px;\n  --padding-top: 0;\n  --padding-start: 26px;\n  --padding-end: 26px;\n  --padding-bottom: 0;\n}\n\n:host(.button-strong) {\n  font-weight: 600;\n}\n\n:host(.button-clear.ion-activated) {\n  opacity: 0.4;\n}\n\n:host(.button-outline.ion-activated.ion-color) .button-native {\n  color: var(--ion-color-contrast);\n}\n:host(.button-outline.ion-activated.ion-color) .button-native::after {\n  background: var(--ion-color-base);\n}\n\n:host(.button-solid.ion-color.ion-activated) .button-native::after {\n  background: var(--ion-color-shade);\n}\n\n:host(.button-outline.ion-focused.ion-color) .button-native,\n:host(.button-clear.ion-focused.ion-color) .button-native {\n  color: var(--ion-color-base);\n}\n:host(.button-outline.ion-focused.ion-color) .button-native::after,\n:host(.button-clear.ion-focused.ion-color) .button-native::after {\n  background: var(--ion-color-base);\n}\n\n:host(.button-solid.ion-color.ion-focused) .button-native::after {\n  background: var(--ion-color-shade);\n}\n\n@media (any-hover: hover) {\n  :host(.button-clear:hover),\n:host(.button-outline:hover) {\n    opacity: 0.6;\n  }\n\n  :host(.button-clear.ion-color:hover) .button-native,\n:host(.button-outline.ion-color:hover) .button-native {\n    color: var(--ion-color-base);\n  }\n  :host(.button-clear.ion-color:hover) .button-native::after,\n:host(.button-outline.ion-color:hover) .button-native::after {\n    background: transparent;\n  }\n\n  :host(.button-solid.ion-color:hover) .button-native::after {\n    background: var(--ion-color-tint);\n  }\n\n  :host(:hover.button-solid.in-toolbar:not(.ion-color):not(.in-toolbar-color)) .button-native::after {\n    background: #fff;\n    opacity: 0.1;\n  }\n}",":host {\n  /**\n   * @prop --background: Background of the button\n   * @prop --background-activated: Background of the button when pressed. Note: setting this will interfere with the Material Design ripple.\n   * @prop --background-activated-opacity: Opacity of the button when pressed\n   * @prop --background-focused: Background of the button when focused with the tab key\n   * @prop --background-focused-opacity: Opacity of the button when focused with the tab key\n   * @prop --background-hover: Background of the button on hover\n   * @prop --background-hover-opacity: Opacity of the background on hover\n   *\n   * @prop --color: Text color of the button\n   * @prop --color-activated: Text color of the button when pressed\n   * @prop --color-focused: Text color of the button when focused with the tab key\n   * @prop --color-hover: Text color of the button when hover\n   *\n   * @prop --transition: Transition of the button\n   *\n   * @prop --border-radius: Border radius of the button\n   * @prop --border-width: Border width of the button\n   * @prop --border-style: Border style of the button\n   * @prop --border-color: Border color of the button\n   *\n   * @prop --ripple-color: Color of the button ripple effect\n   *\n   * @prop --box-shadow: Box shadow of the button\n   * @prop --opacity: Opacity of the button\n   *\n   * @prop --padding-top: Top padding of the button\n   * @prop --padding-end: Right padding if direction is left-to-right, and left padding if direction is right-to-left of the button\n   * @prop --padding-bottom: Bottom padding of the button\n   * @prop --padding-start: Left padding if direction is left-to-right, and right padding if direction is right-to-left of the button\n   */\n  --overflow: hidden;\n  --ripple-color: currentColor;\n  --border-width: initial;\n  --border-color: initial;\n  --border-style: initial;\n  --color-activated: var(--color);\n  --color-focused: var(--color);\n  --color-hover: var(--color);\n  --box-shadow: none;\n  display: inline-block;\n  width: auto;\n  color: var(--color);\n  font-family: var(--ion-font-family, inherit);\n  text-align: center;\n  text-decoration: none;\n  text-overflow: ellipsis;\n  white-space: nowrap;\n  user-select: none;\n  vertical-align: top;\n  vertical-align: -webkit-baseline-middle;\n  font-kerning: none;\n}\n\n:host(.button-disabled) {\n  cursor: default;\n  opacity: 0.5;\n  pointer-events: none;\n}\n\n:host(.button-solid) {\n  --background: var(--ion-color-primary, #3880ff);\n  --color: var(--ion-color-primary-contrast, #fff);\n}\n\n:host(.button-outline) {\n  --border-color: var(--ion-color-primary, #3880ff);\n  --background: transparent;\n  --color: var(--ion-color-primary, #3880ff);\n}\n\n:host(.button-clear) {\n  --border-width: 0;\n  --background: transparent;\n  --color: var(--ion-color-primary, #3880ff);\n}\n\n:host(.button-block) {\n  display: block;\n}\n\n:host(.button-block) .button-native {\n  margin-left: 0;\n  margin-right: 0;\n  display: block;\n  width: 100%;\n  clear: both;\n  contain: content;\n}\n\n:host(.button-block) .button-native::after {\n  clear: both;\n}\n\n:host(.button-full) {\n  display: block;\n}\n\n:host(.button-full) .button-native {\n  margin-left: 0;\n  margin-right: 0;\n  display: block;\n  width: 100%;\n  contain: content;\n}\n\n:host(.button-full:not(.button-round)) .button-native {\n  border-radius: 0;\n  border-right-width: 0;\n  border-left-width: 0;\n}\n\n.button-native {\n  border-radius: var(--border-radius);\n  -moz-osx-font-smoothing: grayscale;\n  -webkit-font-smoothing: antialiased;\n  margin-left: 0;\n  margin-right: 0;\n  margin-top: 0;\n  margin-bottom: 0;\n  padding-left: var(--padding-start);\n  padding-right: var(--padding-end);\n  padding-top: var(--padding-top);\n  padding-bottom: var(--padding-bottom);\n  font-family: inherit;\n  font-size: inherit;\n  font-style: inherit;\n  font-weight: inherit;\n  letter-spacing: inherit;\n  text-decoration: inherit;\n  text-indent: inherit;\n  text-overflow: inherit;\n  text-transform: inherit;\n  text-align: inherit;\n  white-space: inherit;\n  color: inherit;\n  display: block;\n  position: relative;\n  width: 100%;\n  height: 100%;\n  transition: var(--transition);\n  border-width: var(--border-width);\n  border-style: var(--border-style);\n  border-color: var(--border-color);\n  outline: none;\n  background: var(--background);\n  line-height: 1;\n  box-shadow: var(--box-shadow);\n  contain: layout style;\n  cursor: pointer;\n  opacity: var(--opacity);\n  overflow: var(--overflow);\n  z-index: 0;\n  box-sizing: border-box;\n  appearance: none;\n}\n@supports (margin-inline-start: 0) or (-webkit-margin-start: 0) {\n  .button-native {\n    padding-left: unset;\n    padding-right: unset;\n    -webkit-padding-start: var(--padding-start);\n    padding-inline-start: var(--padding-start);\n    -webkit-padding-end: var(--padding-end);\n    padding-inline-end: var(--padding-end);\n  }\n}\n\n.button-native::-moz-focus-inner {\n  border: 0;\n}\n\n.button-inner {\n  display: flex;\n  position: relative;\n  flex-flow: row nowrap;\n  flex-shrink: 0;\n  align-items: center;\n  justify-content: center;\n  width: 100%;\n  height: 100%;\n  z-index: 1;\n}\n\n::slotted(ion-icon) {\n  font-size: 1.4em;\n  pointer-events: none;\n}\n\n::slotted(ion-icon[slot=start]) {\n  margin-left: -0.3em;\n  margin-right: 0.3em;\n  margin-top: 0;\n  margin-bottom: 0;\n}\n@supports (margin-inline-start: 0) or (-webkit-margin-start: 0) {\n  ::slotted(ion-icon[slot=start]) {\n    margin-left: unset;\n    margin-right: unset;\n    -webkit-margin-start: -0.3em;\n    margin-inline-start: -0.3em;\n    -webkit-margin-end: 0.3em;\n    margin-inline-end: 0.3em;\n  }\n}\n\n::slotted(ion-icon[slot=end]) {\n  margin-left: 0.3em;\n  margin-right: -0.2em;\n  margin-top: 0;\n  margin-bottom: 0;\n}\n@supports (margin-inline-start: 0) or (-webkit-margin-start: 0) {\n  ::slotted(ion-icon[slot=end]) {\n    margin-left: unset;\n    margin-right: unset;\n    -webkit-margin-start: 0.3em;\n    margin-inline-start: 0.3em;\n    -webkit-margin-end: -0.2em;\n    margin-inline-end: -0.2em;\n  }\n}\n\n::slotted(ion-icon[slot=icon-only]) {\n  font-size: 1.8em;\n}\n\nion-ripple-effect {\n  color: var(--ripple-color);\n}\n\n.button-native::after {\n  left: 0;\n  right: 0;\n  top: 0;\n  bottom: 0;\n  position: absolute;\n  content: \"\";\n  opacity: 0;\n}\n\n:host(.ion-activated) {\n  color: var(--color-activated);\n}\n\n:host(.ion-activated) .button-native::after {\n  background: var(--background-activated);\n  opacity: var(--background-activated-opacity);\n}\n\n:host(.ion-focused) {\n  color: var(--color-focused);\n}\n\n:host(.ion-focused) .button-native::after {\n  background: var(--background-focused);\n  opacity: var(--background-focused-opacity);\n}\n\n@media (any-hover: hover) {\n  :host(:hover) {\n    color: var(--color-hover);\n  }\n\n  :host(:hover) .button-native::after {\n    background: var(--background-hover);\n    opacity: var(--background-hover-opacity);\n  }\n}\n:host(.button-solid.ion-color) .button-native {\n  background: var(--ion-color-base);\n  color: var(--ion-color-contrast);\n}\n\n:host(.button-outline.ion-color) .button-native {\n  border-color: var(--ion-color-base);\n  background: transparent;\n  color: var(--ion-color-base);\n}\n\n:host(.button-clear.ion-color) .button-native {\n  background: transparent;\n  color: var(--ion-color-base);\n}\n\n:host(.in-toolbar:not(.ion-color):not(.in-toolbar-color)) .button-native {\n  color: var(--ion-toolbar-color, var(--color));\n}\n\n:host(.button-outline.in-toolbar:not(.ion-color):not(.in-toolbar-color)) .button-native {\n  border-color: var(--ion-toolbar-color, var(--color, var(--border-color)));\n}\n\n:host(.button-solid.in-toolbar:not(.ion-color):not(.in-toolbar-color)) .button-native {\n  background: var(--ion-toolbar-color, var(--background));\n  color: var(--ion-toolbar-background, var(--color));\n}\n\n:host {\n  --border-radius: 4px;\n  --padding-top: 0;\n  --padding-bottom: 0;\n  --padding-start: 1.1em;\n  --padding-end: 1.1em;\n  --transition: box-shadow 280ms cubic-bezier(.4, 0, .2, 1),\n                background-color 15ms linear,\n                color 15ms linear;\n  margin-left: 2px;\n  margin-right: 2px;\n  margin-top: 4px;\n  margin-bottom: 4px;\n  height: 36px;\n  font-size: 14px;\n  font-weight: 500;\n  letter-spacing: 0.06em;\n  text-transform: uppercase;\n}\n@supports (margin-inline-start: 0) or (-webkit-margin-start: 0) {\n  :host {\n    margin-left: unset;\n    margin-right: unset;\n    -webkit-margin-start: 2px;\n    margin-inline-start: 2px;\n    -webkit-margin-end: 2px;\n    margin-inline-end: 2px;\n  }\n}\n\n:host(.button-solid) {\n  --background-activated: transparent;\n  --background-hover: var(--ion-color-primary-contrast, #fff);\n  --background-focused: var(--ion-color-primary-contrast, #fff);\n  --background-activated-opacity: 0;\n  --background-focused-opacity: .24;\n  --background-hover-opacity: .08;\n  --box-shadow: 0 3px 1px -2px rgba(0, 0, 0, 0.2), 0 2px 2px 0 rgba(0, 0, 0, 0.14), 0 1px 5px 0 rgba(0, 0, 0, 0.12);\n}\n\n:host(.button-solid.ion-activated) {\n  --box-shadow: 0 5px 5px -3px rgba(0, 0, 0, 0.2), 0 8px 10px 1px rgba(0, 0, 0, 0.14), 0 3px 14px 2px rgba(0, 0, 0, 0.12);\n}\n\n:host(.button-outline) {\n  --border-width: 2px;\n  --border-style: solid;\n  --box-shadow: none;\n  --background-activated: transparent;\n  --background-focused: var(--ion-color-primary, #3880ff);\n  --background-hover: var(--ion-color-primary, #3880ff);\n  --background-activated-opacity: 0;\n  --background-focused-opacity: .12;\n  --background-hover-opacity: .04;\n}\n\n:host(.button-outline.ion-activated.ion-color) .button-native {\n  background: transparent;\n}\n\n:host(.button-clear) {\n  --background-activated: transparent;\n  --background-focused: var(--ion-color-primary, #3880ff);\n  --background-hover: var(--ion-color-primary, #3880ff);\n  --background-activated-opacity: 0;\n  --background-focused-opacity: .12;\n  --background-hover-opacity: .04;\n}\n\n:host(.button-round) {\n  --border-radius: 64px;\n  --padding-top: 0;\n  --padding-start: 26px;\n  --padding-end: 26px;\n  --padding-bottom: 0;\n}\n\n:host(.button-large) {\n  --padding-top: 0;\n  --padding-start: 1em;\n  --padding-end: 1em;\n  --padding-bottom: 0;\n  height: 2.8em;\n  font-size: 20px;\n}\n\n:host(.button-small) {\n  --padding-top: 0;\n  --padding-start: 0.9em;\n  --padding-end: 0.9em;\n  --padding-bottom: 0;\n  height: 2.1em;\n  font-size: 13px;\n}\n\n:host(.button-strong) {\n  font-weight: bold;\n}\n\n::slotted(ion-icon[slot=icon-only]) {\n  padding-left: 0;\n  padding-right: 0;\n  padding-top: 0;\n  padding-bottom: 0;\n}\n\n/**\n * Only allow overriding of opacity here\n * as developers should not be overriding\n * colors when using the color prop.\n */\n:host(.button-solid.ion-color.ion-focused) .button-native::after {\n  background: var(--ion-color-contrast);\n}\n\n:host(.button-clear.ion-color.ion-focused) .button-native::after,\n:host(.button-outline.ion-color.ion-focused) .button-native::after {\n  background: var(--ion-color-base);\n}\n\n@media (any-hover: hover) {\n  :host(.button-solid.ion-color:hover) .button-native::after {\n    background: var(--ion-color-contrast);\n  }\n\n  :host(.button-clear.ion-color:hover) .button-native::after,\n:host(.button-outline.ion-color:hover) .button-native::after {\n    background: var(--ion-color-base);\n  }\n}","/*!\n * (C) Ionic http://ionicframework.com - MIT License\n */\nimport { Host, h } from '@stencil/core';\nimport { getIonMode } from '../../global/ionic-global';\nimport { inheritAriaAttributes, hasShadowDom } from '../../utils/helpers';\nimport { printIonWarning } from '../../utils/logging';\nimport { createColorClasses, hostContext, openURL } from '../../utils/theme';\n/**\n * @virtualProp {\"ios\" | \"md\"} mode - The mode determines which platform styles to use.\n *\n * @slot - Content is placed between the named slots if provided without a slot.\n * @slot icon-only - Should be used on an icon in a button that has no text.\n * @slot start - Content is placed to the left of the button text in LTR, and to the right in RTL.\n * @slot end - Content is placed to the right of the button text in LTR, and to the left in RTL.\n *\n * @part native - The native HTML button or anchor element that wraps all child elements.\n */\nexport class Button {\n  constructor() {\n    this.inItem = false;\n    this.inListHeader = false;\n    this.inToolbar = false;\n    this.inheritedAttributes = {};\n    /**\n     * The type of button.\n     */\n    this.buttonType = 'button';\n    /**\n     * If `true`, the user cannot interact with the button.\n     */\n    this.disabled = false;\n    /**\n     * When using a router, it specifies the transition direction when navigating to\n     * another page using `href`.\n     */\n    this.routerDirection = 'forward';\n    /**\n     * If `true`, activates a button with a heavier font weight.\n     */\n    this.strong = false;\n    /**\n     * The type of the button.\n     */\n    this.type = 'button';\n    this.handleClick = (ev) => {\n      const { el } = this;\n      if (this.type === 'button') {\n        openURL(this.href, ev, this.routerDirection, this.routerAnimation);\n      }\n      else if (hasShadowDom(el)) {\n        // this button wants to specifically submit a form\n        // climb up the dom to see if we're in a <form>\n        // and if so, then use JS to submit it\n        let formEl = this.findForm();\n        const { form } = this;\n        if (!formEl && form !== undefined) {\n          /**\n           * The developer specified a form selector for\n           * the button to submit, but it was not found.\n           */\n          if (typeof form === 'string') {\n            printIonWarning(`Form with selector: \"#${form}\" could not be found. Verify that the id is correct and the form is rendered in the DOM.`, el);\n          }\n          else {\n            printIonWarning(`The provided \"form\" element is invalid. Verify that the form is a HTMLFormElement and rendered in the DOM.`, el);\n          }\n          return;\n        }\n        if (!formEl) {\n          /**\n           * If the form element is not set, the button may be inside\n           * of a form element. Query the closest form element to the button.\n           */\n          formEl = el.closest('form');\n        }\n        if (formEl) {\n          ev.preventDefault();\n          const fakeButton = document.createElement('button');\n          fakeButton.type = this.type;\n          fakeButton.style.display = 'none';\n          formEl.appendChild(fakeButton);\n          fakeButton.click();\n          fakeButton.remove();\n        }\n      }\n    };\n    this.onFocus = () => {\n      this.ionFocus.emit();\n    };\n    this.onBlur = () => {\n      this.ionBlur.emit();\n    };\n  }\n  componentWillLoad() {\n    this.inToolbar = !!this.el.closest('ion-buttons');\n    this.inListHeader = !!this.el.closest('ion-list-header');\n    this.inItem = !!this.el.closest('ion-item') || !!this.el.closest('ion-item-divider');\n    this.inheritedAttributes = inheritAriaAttributes(this.el);\n  }\n  get hasIconOnly() {\n    return !!this.el.querySelector('[slot=\"icon-only\"]');\n  }\n  get rippleType() {\n    const hasClearFill = this.fill === undefined || this.fill === 'clear';\n    // If the button is in a toolbar, has a clear fill (which is the default)\n    // and only has an icon we use the unbounded \"circular\" ripple effect\n    if (hasClearFill && this.hasIconOnly && this.inToolbar) {\n      return 'unbounded';\n    }\n    return 'bounded';\n  }\n  /**\n   * Finds the form element based on the provided `form` selector\n   * or element reference provided.\n   */\n  findForm() {\n    const { form } = this;\n    if (form instanceof HTMLFormElement) {\n      return form;\n    }\n    if (typeof form === 'string') {\n      const el = document.getElementById(form);\n      if (el instanceof HTMLFormElement) {\n        return el;\n      }\n    }\n    return null;\n  }\n  render() {\n    const mode = getIonMode(this);\n    const { buttonType, type, disabled, rel, target, size, href, color, expand, hasIconOnly, shape, strong, inheritedAttributes, } = this;\n    const finalSize = size === undefined && this.inItem ? 'small' : size;\n    const TagType = href === undefined ? 'button' : 'a';\n    const attrs = TagType === 'button'\n      ? { type }\n      : {\n        download: this.download,\n        href,\n        rel,\n        target,\n      };\n    let fill = this.fill;\n    /**\n     * We check both undefined and null to\n     * work around https://github.com/ionic-team/stencil/issues/3586.\n     */\n    if (fill == null) {\n      fill = this.inToolbar || this.inListHeader ? 'clear' : 'solid';\n    }\n    return (h(Host, { onClick: this.handleClick, \"aria-disabled\": disabled ? 'true' : null, class: createColorClasses(color, {\n        [mode]: true,\n        [buttonType]: true,\n        [`${buttonType}-${expand}`]: expand !== undefined,\n        [`${buttonType}-${finalSize}`]: finalSize !== undefined,\n        [`${buttonType}-${shape}`]: shape !== undefined,\n        [`${buttonType}-${fill}`]: true,\n        [`${buttonType}-strong`]: strong,\n        'in-toolbar': hostContext('ion-toolbar', this.el),\n        'in-toolbar-color': hostContext('ion-toolbar[color]', this.el),\n        'in-buttons': hostContext('ion-buttons', this.el),\n        'button-has-icon-only': hasIconOnly,\n        'button-disabled': disabled,\n        'ion-activatable': true,\n        'ion-focusable': true,\n      }) }, h(TagType, Object.assign({}, attrs, { class: \"button-native\", part: \"native\", disabled: disabled, onFocus: this.onFocus, onBlur: this.onBlur }, inheritedAttributes), h(\"span\", { class: \"button-inner\" }, h(\"slot\", { name: \"icon-only\" }), h(\"slot\", { name: \"start\" }), h(\"slot\", null), h(\"slot\", { name: \"end\" })), mode === 'md' && h(\"ion-ripple-effect\", { type: this.rippleType }))));\n  }\n  static get is() { return \"ion-button\"; }\n  static get encapsulation() { return \"shadow\"; }\n  static get originalStyleUrls() {\n    return {\n      \"ios\": [\"button.ios.scss\"],\n      \"md\": [\"button.md.scss\"]\n    };\n  }\n  static get styleUrls() {\n    return {\n      \"ios\": [\"button.ios.css\"],\n      \"md\": [\"button.md.css\"]\n    };\n  }\n  static get properties() {\n    return {\n      \"color\": {\n        \"type\": \"string\",\n        \"mutable\": false,\n        \"complexType\": {\n          \"original\": \"Color\",\n          \"resolved\": \"\\\"danger\\\" | \\\"dark\\\" | \\\"light\\\" | \\\"medium\\\" | \\\"primary\\\" | \\\"secondary\\\" | \\\"success\\\" | \\\"tertiary\\\" | \\\"warning\\\" | string & Record<never, never> | undefined\",\n          \"references\": {\n            \"Color\": {\n              \"location\": \"import\",\n              \"path\": \"../../interface\"\n            }\n          }\n        },\n        \"required\": false,\n        \"optional\": true,\n        \"docs\": {\n          \"tags\": [],\n          \"text\": \"The color to use from your application's color palette.\\nDefault options are: `\\\"primary\\\"`, `\\\"secondary\\\"`, `\\\"tertiary\\\"`, `\\\"success\\\"`, `\\\"warning\\\"`, `\\\"danger\\\"`, `\\\"light\\\"`, `\\\"medium\\\"`, and `\\\"dark\\\"`.\\nFor more information on colors, see [theming](/docs/theming/basics).\"\n        },\n        \"attribute\": \"color\",\n        \"reflect\": true\n      },\n      \"buttonType\": {\n        \"type\": \"string\",\n        \"mutable\": true,\n        \"complexType\": {\n          \"original\": \"string\",\n          \"resolved\": \"string\",\n          \"references\": {}\n        },\n        \"required\": false,\n        \"optional\": false,\n        \"docs\": {\n          \"tags\": [],\n          \"text\": \"The type of button.\"\n        },\n        \"attribute\": \"button-type\",\n        \"reflect\": false,\n        \"defaultValue\": \"'button'\"\n      },\n      \"disabled\": {\n        \"type\": \"boolean\",\n        \"mutable\": false,\n        \"complexType\": {\n          \"original\": \"boolean\",\n          \"resolved\": \"boolean\",\n          \"references\": {}\n        },\n        \"required\": false,\n        \"optional\": false,\n        \"docs\": {\n          \"tags\": [],\n          \"text\": \"If `true`, the user cannot interact with the button.\"\n        },\n        \"attribute\": \"disabled\",\n        \"reflect\": true,\n        \"defaultValue\": \"false\"\n      },\n      \"expand\": {\n        \"type\": \"string\",\n        \"mutable\": false,\n        \"complexType\": {\n          \"original\": \"'full' | 'block'\",\n          \"resolved\": \"\\\"block\\\" | \\\"full\\\" | undefined\",\n          \"references\": {}\n        },\n        \"required\": false,\n        \"optional\": true,\n        \"docs\": {\n          \"tags\": [],\n          \"text\": \"Set to `\\\"block\\\"` for a full-width button or to `\\\"full\\\"` for a full-width button\\nwith square corners and no left or right borders.\"\n        },\n        \"attribute\": \"expand\",\n        \"reflect\": true\n      },\n      \"fill\": {\n        \"type\": \"string\",\n        \"mutable\": true,\n        \"complexType\": {\n          \"original\": \"'clear' | 'outline' | 'solid' | 'default'\",\n          \"resolved\": \"\\\"clear\\\" | \\\"default\\\" | \\\"outline\\\" | \\\"solid\\\" | undefined\",\n          \"references\": {}\n        },\n        \"required\": false,\n        \"optional\": true,\n        \"docs\": {\n          \"tags\": [],\n          \"text\": \"Set to `\\\"clear\\\"` for a transparent button that resembles a flat button, to `\\\"outline\\\"`\\nfor a transparent button with a border, or to `\\\"solid\\\"` for a button with a filled background.\\nThe default fill is `\\\"solid\\\"` except inside of a toolbar, where the default is `\\\"clear\\\"`.\"\n        },\n        \"attribute\": \"fill\",\n        \"reflect\": true\n      },\n      \"routerDirection\": {\n        \"type\": \"string\",\n        \"mutable\": false,\n        \"complexType\": {\n          \"original\": \"RouterDirection\",\n          \"resolved\": \"\\\"back\\\" | \\\"forward\\\" | \\\"root\\\"\",\n          \"references\": {\n            \"RouterDirection\": {\n              \"location\": \"import\",\n              \"path\": \"../../interface\"\n            }\n          }\n        },\n        \"required\": false,\n        \"optional\": false,\n        \"docs\": {\n          \"tags\": [],\n          \"text\": \"When using a router, it specifies the transition direction when navigating to\\nanother page using `href`.\"\n        },\n        \"attribute\": \"router-direction\",\n        \"reflect\": false,\n        \"defaultValue\": \"'forward'\"\n      },\n      \"routerAnimation\": {\n        \"type\": \"unknown\",\n        \"mutable\": false,\n        \"complexType\": {\n          \"original\": \"AnimationBuilder | undefined\",\n          \"resolved\": \"((baseEl: any, opts?: any) => Animation) | undefined\",\n          \"references\": {\n            \"AnimationBuilder\": {\n              \"location\": \"import\",\n              \"path\": \"../../interface\"\n            }\n          }\n        },\n        \"required\": false,\n        \"optional\": false,\n        \"docs\": {\n          \"tags\": [],\n          \"text\": \"When using a router, it specifies the transition animation when navigating to\\nanother page using `href`.\"\n        }\n      },\n      \"download\": {\n        \"type\": \"string\",\n        \"mutable\": false,\n        \"complexType\": {\n          \"original\": \"string | undefined\",\n          \"resolved\": \"string | undefined\",\n          \"references\": {}\n        },\n        \"required\": false,\n        \"optional\": false,\n        \"docs\": {\n          \"tags\": [],\n          \"text\": \"This attribute instructs browsers to download a URL instead of navigating to\\nit, so the user will be prompted to save it as a local file. If the attribute\\nhas a value, it is used as the pre-filled file name in the Save prompt\\n(the user can still change the file name if they want).\"\n        },\n        \"attribute\": \"download\",\n        \"reflect\": false\n      },\n      \"href\": {\n        \"type\": \"string\",\n        \"mutable\": false,\n        \"complexType\": {\n          \"original\": \"string | undefined\",\n          \"resolved\": \"string | undefined\",\n          \"references\": {}\n        },\n        \"required\": false,\n        \"optional\": false,\n        \"docs\": {\n          \"tags\": [],\n          \"text\": \"Contains a URL or a URL fragment that the hyperlink points to.\\nIf this property is set, an anchor tag will be rendered.\"\n        },\n        \"attribute\": \"href\",\n        \"reflect\": false\n      },\n      \"rel\": {\n        \"type\": \"string\",\n        \"mutable\": false,\n        \"complexType\": {\n          \"original\": \"string | undefined\",\n          \"resolved\": \"string | undefined\",\n          \"references\": {}\n        },\n        \"required\": false,\n        \"optional\": false,\n        \"docs\": {\n          \"tags\": [],\n          \"text\": \"Specifies the relationship of the target object to the link object.\\nThe value is a space-separated list of [link types](https://developer.mozilla.org/en-US/docs/Web/HTML/Link_types).\"\n        },\n        \"attribute\": \"rel\",\n        \"reflect\": false\n      },\n      \"shape\": {\n        \"type\": \"string\",\n        \"mutable\": false,\n        \"complexType\": {\n          \"original\": \"'round'\",\n          \"resolved\": \"\\\"round\\\" | undefined\",\n          \"references\": {}\n        },\n        \"required\": false,\n        \"optional\": true,\n        \"docs\": {\n          \"tags\": [],\n          \"text\": \"Set to `\\\"round\\\"` for a button with more rounded corners.\"\n        },\n        \"attribute\": \"shape\",\n        \"reflect\": true\n      },\n      \"size\": {\n        \"type\": \"string\",\n        \"mutable\": false,\n        \"complexType\": {\n          \"original\": \"'small' | 'default' | 'large'\",\n          \"resolved\": \"\\\"default\\\" | \\\"large\\\" | \\\"small\\\" | undefined\",\n          \"references\": {}\n        },\n        \"required\": false,\n        \"optional\": true,\n        \"docs\": {\n          \"tags\": [],\n          \"text\": \"Set to `\\\"small\\\"` for a button with less height and padding, to `\\\"default\\\"`\\nfor a button with the default height and padding, or to `\\\"large\\\"` for a button\\nwith more height and padding. By default the size is unset, unless the button\\nis inside of an item, where the size is `\\\"small\\\"` by default. Set the size to\\n`\\\"default\\\"` inside of an item to make it a standard size button.\"\n        },\n        \"attribute\": \"size\",\n        \"reflect\": true\n      },\n      \"strong\": {\n        \"type\": \"boolean\",\n        \"mutable\": false,\n        \"complexType\": {\n          \"original\": \"boolean\",\n          \"resolved\": \"boolean\",\n          \"references\": {}\n        },\n        \"required\": false,\n        \"optional\": false,\n        \"docs\": {\n          \"tags\": [],\n          \"text\": \"If `true`, activates a button with a heavier font weight.\"\n        },\n        \"attribute\": \"strong\",\n        \"reflect\": false,\n        \"defaultValue\": \"false\"\n      },\n      \"target\": {\n        \"type\": \"string\",\n        \"mutable\": false,\n        \"complexType\": {\n          \"original\": \"string | undefined\",\n          \"resolved\": \"string | undefined\",\n          \"references\": {}\n        },\n        \"required\": false,\n        \"optional\": false,\n        \"docs\": {\n          \"tags\": [],\n          \"text\": \"Specifies where to display the linked URL.\\nOnly applies when an `href` is provided.\\nSpecial keywords: `\\\"_blank\\\"`, `\\\"_self\\\"`, `\\\"_parent\\\"`, `\\\"_top\\\"`.\"\n        },\n        \"attribute\": \"target\",\n        \"reflect\": false\n      },\n      \"type\": {\n        \"type\": \"string\",\n        \"mutable\": false,\n        \"complexType\": {\n          \"original\": \"'submit' | 'reset' | 'button'\",\n          \"resolved\": \"\\\"button\\\" | \\\"reset\\\" | \\\"submit\\\"\",\n          \"references\": {}\n        },\n        \"required\": false,\n        \"optional\": false,\n        \"docs\": {\n          \"tags\": [],\n          \"text\": \"The type of the button.\"\n        },\n        \"attribute\": \"type\",\n        \"reflect\": false,\n        \"defaultValue\": \"'button'\"\n      },\n      \"form\": {\n        \"type\": \"string\",\n        \"mutable\": false,\n        \"complexType\": {\n          \"original\": \"string | HTMLFormElement\",\n          \"resolved\": \"HTMLFormElement | string | undefined\",\n          \"references\": {\n            \"HTMLFormElement\": {\n              \"location\": \"global\"\n            }\n          }\n        },\n        \"required\": false,\n        \"optional\": true,\n        \"docs\": {\n          \"tags\": [],\n          \"text\": \"The HTML form element or form element id. Used to submit a form when the button is not a child of the form.\"\n        },\n        \"attribute\": \"form\",\n        \"reflect\": false\n      }\n    };\n  }\n  static get events() {\n    return [{\n        \"method\": \"ionFocus\",\n        \"name\": \"ionFocus\",\n        \"bubbles\": true,\n        \"cancelable\": true,\n        \"composed\": true,\n        \"docs\": {\n          \"tags\": [],\n          \"text\": \"Emitted when the button has focus.\"\n        },\n        \"complexType\": {\n          \"original\": \"void\",\n          \"resolved\": \"void\",\n          \"references\": {}\n        }\n      }, {\n        \"method\": \"ionBlur\",\n        \"name\": \"ionBlur\",\n        \"bubbles\": true,\n        \"cancelable\": true,\n        \"composed\": true,\n        \"docs\": {\n          \"tags\": [],\n          \"text\": \"Emitted when the button loses focus.\"\n        },\n        \"complexType\": {\n          \"original\": \"void\",\n          \"resolved\": \"void\",\n          \"references\": {}\n        }\n      }];\n  }\n  static get elementRef() { return \"el\"; }\n}\n",":host {\n  display: flex;\n  align-items: center;\n  transform: translateZ(0);\n  z-index: 99;\n}\n\n::slotted(*) ion-button {\n  --padding-top: 0;\n  --padding-bottom: 0;\n  margin-left: 0;\n  margin-right: 0;\n  margin-top: 0;\n  margin-bottom: 0;\n}\n\n::slotted(*) ion-button {\n  --padding-start: 5px;\n  --padding-end: 5px;\n  margin-left: 2px;\n  margin-right: 2px;\n  height: 32px;\n}\n@supports (margin-inline-start: 0) or (-webkit-margin-start: 0) {\n  ::slotted(*) ion-button {\n    margin-left: unset;\n    margin-right: unset;\n    -webkit-margin-start: 2px;\n    margin-inline-start: 2px;\n    -webkit-margin-end: 2px;\n    margin-inline-end: 2px;\n  }\n}\n\n::slotted(*) ion-button:not(.button-round) {\n  --border-radius: 4px;\n}\n\n:host-context(.ion-color)::slotted(*) .button {\n  --color: initial;\n  --border-color: initial;\n  --background-focused: var(--ion-color-contrast);\n}\n\n:host-context(.ion-color)::slotted(*) .button-solid {\n  --background: var(--ion-color-contrast);\n  --background-focused: #000;\n  --background-focused-opacity: .12;\n  --background-activated: #000;\n  --background-activated-opacity: .12;\n  --background-hover: var(--ion-color-base);\n  --background-hover-opacity: 0.45;\n  --color: var(--ion-color-base);\n  --color-focused: var(--ion-color-base);\n}\n\n:host-context(.ion-color)::slotted(*) .button-clear {\n  --color-activated: var(--ion-color-contrast);\n  --color-focused: var(--ion-color-contrast);\n}\n\n:host-context(.ion-color)::slotted(*) .button-outline {\n  --color-activated: var(--ion-color-base);\n  --color-focused: var(--ion-color-contrast);\n}\n\n::slotted(*) .button-clear,\n::slotted(*) .button-outline {\n  --background-activated: transparent;\n  --background-focused: currentColor;\n  --background-hover: transparent;\n}\n\n::slotted(*) .button-solid:not(.ion-color) {\n  --background-focused: #000;\n  --background-focused-opacity: .12;\n  --background-activated: #000;\n  --background-activated-opacity: .12;\n}\n\n::slotted(*) ion-icon[slot=start] {\n  margin-left: 0;\n  margin-right: 0;\n  margin-top: 0;\n  margin-bottom: 0;\n  margin-right: 0.3em;\n  font-size: 24px;\n  line-height: 0.67;\n}\n@supports (margin-inline-start: 0) or (-webkit-margin-start: 0) {\n  ::slotted(*) ion-icon[slot=start] {\n    margin-right: unset;\n    -webkit-margin-end: 0.3em;\n    margin-inline-end: 0.3em;\n  }\n}\n\n::slotted(*) ion-icon[slot=end] {\n  margin-left: 0;\n  margin-right: 0;\n  margin-top: 0;\n  margin-bottom: 0;\n  margin-left: 0.4em;\n  font-size: 24px;\n  line-height: 0.67;\n}\n@supports (margin-inline-start: 0) or (-webkit-margin-start: 0) {\n  ::slotted(*) ion-icon[slot=end] {\n    margin-left: unset;\n    -webkit-margin-start: 0.4em;\n    margin-inline-start: 0.4em;\n  }\n}\n\n::slotted(*) ion-icon[slot=icon-only] {\n  padding-left: 0;\n  padding-right: 0;\n  padding-top: 0;\n  padding-bottom: 0;\n  margin-left: 0;\n  margin-right: 0;\n  margin-top: 0;\n  margin-bottom: 0;\n  font-size: 28px;\n  line-height: 0.67;\n}",":host {\n  display: flex;\n  align-items: center;\n  transform: translateZ(0);\n  z-index: 99;\n}\n\n::slotted(*) ion-button {\n  --padding-top: 0;\n  --padding-bottom: 0;\n  margin-left: 0;\n  margin-right: 0;\n  margin-top: 0;\n  margin-bottom: 0;\n}\n\n::slotted(*) ion-button {\n  --padding-top: 0;\n  --padding-bottom: 0;\n  --padding-start: 8px;\n  --padding-end: 8px;\n  --box-shadow: none;\n  margin-left: 2px;\n  margin-right: 2px;\n  height: 32px;\n}\n@supports (margin-inline-start: 0) or (-webkit-margin-start: 0) {\n  ::slotted(*) ion-button {\n    margin-left: unset;\n    margin-right: unset;\n    -webkit-margin-start: 2px;\n    margin-inline-start: 2px;\n    -webkit-margin-end: 2px;\n    margin-inline-end: 2px;\n  }\n}\n\n::slotted(*) ion-button:not(.button-round) {\n  --border-radius: 2px;\n}\n\n:host-context(.ion-color)::slotted(*) .button {\n  --color: initial;\n  --color-focused: var(--ion-color-contrast);\n  --color-hover: var(--ion-color-contrast);\n  --background-activated: transparent;\n  --background-focused: var(--ion-color-contrast);\n  --background-hover: var(--ion-color-contrast);\n}\n\n:host-context(.ion-color)::slotted(*) .button-solid {\n  --background: var(--ion-color-contrast);\n  --background-activated: transparent;\n  --background-focused: var(--ion-color-shade);\n  --background-hover: var(--ion-color-base);\n  --color: var(--ion-color-base);\n  --color-focused: var(--ion-color-base);\n  --color-hover: var(--ion-color-base);\n}\n\n:host-context(.ion-color)::slotted(*) .button-outline {\n  --border-color: var(--ion-color-contrast);\n}\n\n::slotted(*) .button-has-icon-only.button-clear {\n  --padding-top: 12px;\n  --padding-end: 12px;\n  --padding-bottom: 12px;\n  --padding-start: 12px;\n  --border-radius: 50%;\n  margin-left: 0;\n  margin-right: 0;\n  margin-top: 0;\n  margin-bottom: 0;\n  width: 48px;\n  height: 48px;\n}\n\n::slotted(*) .button {\n  --background-hover: currentColor;\n}\n\n::slotted(*) .button-solid {\n  --color: var(--ion-toolbar-background, var(--ion-background-color, #fff));\n  --background: var(--ion-toolbar-color, var(--ion-text-color, #424242));\n  --background-activated: transparent;\n  --background-focused: currentColor;\n}\n\n::slotted(*) .button-outline {\n  --color: initial;\n  --background: transparent;\n  --background-activated: transparent;\n  --background-focused: currentColor;\n  --background-hover: currentColor;\n  --border-color: currentColor;\n}\n\n::slotted(*) .button-clear {\n  --color: initial;\n  --background: transparent;\n  --background-activated: transparent;\n  --background-focused: currentColor;\n  --background-hover: currentColor;\n}\n\n::slotted(*) ion-icon[slot=start] {\n  margin-left: 0;\n  margin-right: 0;\n  margin-top: 0;\n  margin-bottom: 0;\n  margin-right: 0.3em;\n  font-size: 1.4em;\n}\n@supports (margin-inline-start: 0) or (-webkit-margin-start: 0) {\n  ::slotted(*) ion-icon[slot=start] {\n    margin-right: unset;\n    -webkit-margin-end: 0.3em;\n    margin-inline-end: 0.3em;\n  }\n}\n\n::slotted(*) ion-icon[slot=end] {\n  margin-left: 0;\n  margin-right: 0;\n  margin-top: 0;\n  margin-bottom: 0;\n  margin-left: 0.4em;\n  font-size: 1.4em;\n}\n@supports (margin-inline-start: 0) or (-webkit-margin-start: 0) {\n  ::slotted(*) ion-icon[slot=end] {\n    margin-left: unset;\n    -webkit-margin-start: 0.4em;\n    margin-inline-start: 0.4em;\n  }\n}\n\n::slotted(*) ion-icon[slot=icon-only] {\n  padding-left: 0;\n  padding-right: 0;\n  padding-top: 0;\n  padding-bottom: 0;\n  margin-left: 0;\n  margin-right: 0;\n  margin-top: 0;\n  margin-bottom: 0;\n  font-size: 1.8em;\n}","/*!\n * (C) Ionic http://ionicframework.com - MIT License\n */\nimport { Host, h } from '@stencil/core';\nimport { getIonMode } from '../../global/ionic-global';\nexport class Buttons {\n  constructor() {\n    /**\n     * If true, buttons will disappear when its\n     * parent toolbar has fully collapsed if the toolbar\n     * is not the first toolbar. If the toolbar is the\n     * first toolbar, the buttons will be hidden and will\n     * only be shown once all toolbars have fully collapsed.\n     *\n     * Only applies in `ios` mode with `collapse` set to\n     * `true` on `ion-header`.\n     *\n     * Typically used for [Collapsible Large Titles](https://ionicframework.com/docs/api/title#collapsible-large-titles)\n     */\n    this.collapse = false;\n  }\n  render() {\n    const mode = getIonMode(this);\n    return (h(Host, { class: {\n        [mode]: true,\n        ['buttons-collapse']: this.collapse,\n      } }));\n  }\n  static get is() { return \"ion-buttons\"; }\n  static get encapsulation() { return \"scoped\"; }\n  static get originalStyleUrls() {\n    return {\n      \"ios\": [\"buttons.ios.scss\"],\n      \"md\": [\"buttons.md.scss\"]\n    };\n  }\n  static get styleUrls() {\n    return {\n      \"ios\": [\"buttons.ios.css\"],\n      \"md\": [\"buttons.md.css\"]\n    };\n  }\n  static get properties() {\n    return {\n      \"collapse\": {\n        \"type\": \"boolean\",\n        \"mutable\": false,\n        \"complexType\": {\n          \"original\": \"boolean\",\n          \"resolved\": \"boolean\",\n          \"references\": {}\n        },\n        \"required\": false,\n        \"optional\": false,\n        \"docs\": {\n          \"tags\": [],\n          \"text\": \"If true, buttons will disappear when its\\nparent toolbar has fully collapsed if the toolbar\\nis not the first toolbar. If the toolbar is the\\nfirst toolbar, the buttons will be hidden and will\\nonly be shown once all toolbars have fully collapsed.\\n\\nOnly applies in `ios` mode with `collapse` set to\\n`true` on `ion-header`.\\n\\nTypically used for [Collapsible Large Titles](https://ionicframework.com/docs/api/title#collapsible-large-titles)\"\n        },\n        \"attribute\": \"collapse\",\n        \"reflect\": false,\n        \"defaultValue\": \"false\"\n      }\n    };\n  }\n}\n",":host {\n  padding-left: 16px;\n  padding-right: 16px;\n  padding-top: 0px;\n  padding-bottom: 0px;\n  height: 200px;\n  outline: none;\n  font-size: 22px;\n  scroll-snap-type: y mandatory;\n  /**\n   * Need to explicitly set overflow-x: hidden\n   * for older implementations of scroll snapping.\n   */\n  overflow-x: hidden;\n  overflow-y: scroll;\n  scrollbar-width: none;\n  text-align: center;\n}\n@supports (margin-inline-start: 0) or (-webkit-margin-start: 0) {\n  :host {\n    padding-left: unset;\n    padding-right: unset;\n    -webkit-padding-start: 16px;\n    padding-inline-start: 16px;\n    -webkit-padding-end: 16px;\n    padding-inline-end: 16px;\n  }\n}\n\n/**\n * Hide scrollbars on Chrome and Safari\n */\n:host::-webkit-scrollbar {\n  display: none;\n}\n\n:host .picker-item {\n  padding-left: 0;\n  padding-right: 0;\n  padding-top: 0;\n  padding-bottom: 0;\n  margin-left: 0;\n  margin-right: 0;\n  margin-top: 0;\n  margin-bottom: 0;\n  display: block;\n  width: 100%;\n  height: 34px;\n  border: 0px;\n  outline: none;\n  background: transparent;\n  color: inherit;\n  font-family: var(--ion-font-family, inherit);\n  font-size: inherit;\n  line-height: 34px;\n  text-align: inherit;\n  text-overflow: ellipsis;\n  white-space: nowrap;\n  cursor: pointer;\n  overflow: hidden;\n  scroll-snap-align: center;\n}\n\n:host .picker-item-empty,\n:host .picker-item.picker-item-disabled {\n  scroll-snap-align: none;\n  cursor: default;\n}\n\n:host .picker-item.picker-item-disabled {\n  opacity: 0.4;\n}\n\n:host(.picker-column-active) .picker-item.picker-item-active {\n  color: var(--ion-color-base);\n}\n\n@media (any-hover: hover) {\n  :host(:focus) {\n    outline: none;\n    background: rgba(var(--ion-color-base-rgb), 0.2);\n  }\n}",":host {\n  padding-left: 16px;\n  padding-right: 16px;\n  padding-top: 0px;\n  padding-bottom: 0px;\n  height: 200px;\n  outline: none;\n  font-size: 22px;\n  scroll-snap-type: y mandatory;\n  /**\n   * Need to explicitly set overflow-x: hidden\n   * for older implementations of scroll snapping.\n   */\n  overflow-x: hidden;\n  overflow-y: scroll;\n  scrollbar-width: none;\n  text-align: center;\n}\n@supports (margin-inline-start: 0) or (-webkit-margin-start: 0) {\n  :host {\n    padding-left: unset;\n    padding-right: unset;\n    -webkit-padding-start: 16px;\n    padding-inline-start: 16px;\n    -webkit-padding-end: 16px;\n    padding-inline-end: 16px;\n  }\n}\n\n/**\n * Hide scrollbars on Chrome and Safari\n */\n:host::-webkit-scrollbar {\n  display: none;\n}\n\n:host .picker-item {\n  padding-left: 0;\n  padding-right: 0;\n  padding-top: 0;\n  padding-bottom: 0;\n  margin-left: 0;\n  margin-right: 0;\n  margin-top: 0;\n  margin-bottom: 0;\n  display: block;\n  width: 100%;\n  height: 34px;\n  border: 0px;\n  outline: none;\n  background: transparent;\n  color: inherit;\n  font-family: var(--ion-font-family, inherit);\n  font-size: inherit;\n  line-height: 34px;\n  text-align: inherit;\n  text-overflow: ellipsis;\n  white-space: nowrap;\n  cursor: pointer;\n  overflow: hidden;\n  scroll-snap-align: center;\n}\n\n:host .picker-item-empty,\n:host .picker-item.picker-item-disabled {\n  scroll-snap-align: none;\n  cursor: default;\n}\n\n:host .picker-item.picker-item-disabled {\n  opacity: 0.4;\n}\n\n:host(.picker-column-active) .picker-item.picker-item-active {\n  color: var(--ion-color-base);\n}\n\n@media (any-hover: hover) {\n  :host(:focus) {\n    outline: none;\n    background: rgba(var(--ion-color-base-rgb), 0.2);\n  }\n}\n:host .picker-item-active {\n  color: var(--ion-color-base);\n}","/*!\n * (C) Ionic http://ionicframework.com - MIT License\n */\nimport { Host, h } from '@stencil/core';\nimport { getIonMode } from '../../global/ionic-global';\nimport { getElementRoot, raf } from '../../utils/helpers';\nimport { hapticSelectionChanged, hapticSelectionEnd, hapticSelectionStart } from '../../utils/native/haptic';\nimport { createColorClasses } from '../../utils/theme';\n/**\n * @virtualProp {\"ios\" | \"md\"} mode - The mode determines which platform styles to use.\n * @internal\n */\nexport class PickerColumnInternal {\n  constructor() {\n    this.isScrolling = false;\n    this.isColumnVisible = false;\n    this.canExitInputMode = true;\n    this.isActive = false;\n    /**\n     * A list of options to be displayed in the picker\n     */\n    this.items = [];\n    /**\n     * The color to use from your application's color palette.\n     * Default options are: `\"primary\"`, `\"secondary\"`, `\"tertiary\"`, `\"success\"`, `\"warning\"`, `\"danger\"`, `\"light\"`, `\"medium\"`, and `\"dark\"`.\n     * For more information on colors, see [theming](/docs/theming/basics).\n     */\n    this.color = 'primary';\n    /**\n     * If `true`, tapping the picker will\n     * reveal a number input keyboard that lets\n     * the user type in values for each picker\n     * column. This is useful when working\n     * with time pickers.\n     *\n     * @internal\n     */\n    this.numericInput = false;\n    this.centerPickerItemInView = (target, smooth = true, canExitInputMode = true) => {\n      const { el, isColumnVisible } = this;\n      if (isColumnVisible) {\n        // (Vertical offset from parent) - (three empty picker rows) + (half the height of the target to ensure the scroll triggers)\n        const top = target.offsetTop - 3 * target.clientHeight + target.clientHeight / 2;\n        if (el.scrollTop !== top) {\n          /**\n           * Setting this flag prevents input\n           * mode from exiting in the picker column's\n           * scroll callback. This is useful when the user manually\n           * taps an item or types on the keyboard as both\n           * of these can cause a scroll to occur.\n           */\n          this.canExitInputMode = canExitInputMode;\n          el.scroll({\n            top,\n            left: 0,\n            behavior: smooth ? 'smooth' : undefined,\n          });\n        }\n      }\n    };\n    /**\n     * When ionInputModeChange is emitted, each column\n     * needs to check if it is the one being made available\n     * for text entry.\n     */\n    this.inputModeChange = (ev) => {\n      if (!this.numericInput) {\n        return;\n      }\n      const { useInputMode, inputModeColumn } = ev.detail;\n      /**\n       * If inputModeColumn is undefined then this means\n       * all numericInput columns are being selected.\n       */\n      const isColumnActive = inputModeColumn === undefined || inputModeColumn === this.el;\n      if (!useInputMode || !isColumnActive) {\n        this.setInputModeActive(false);\n        return;\n      }\n      this.setInputModeActive(true);\n    };\n    /**\n     * Setting isActive will cause a re-render.\n     * As a result, we do not want to cause the\n     * re-render mid scroll as this will cause\n     * the picker column to jump back to\n     * whatever value was selected at the\n     * start of the scroll interaction.\n     */\n    this.setInputModeActive = (state) => {\n      if (this.isScrolling) {\n        this.scrollEndCallback = () => {\n          this.isActive = state;\n        };\n        return;\n      }\n      this.isActive = state;\n    };\n    /**\n     * When the column scrolls, the component\n     * needs to determine which item is centered\n     * in the view and will emit an ionChange with\n     * the item object.\n     */\n    this.initializeScrollListener = () => {\n      const { el } = this;\n      let timeout;\n      let activeEl = this.activeItem;\n      const scrollCallback = () => {\n        raf(() => {\n          if (timeout) {\n            clearTimeout(timeout);\n            timeout = undefined;\n          }\n          if (!this.isScrolling) {\n            hapticSelectionStart();\n            this.isScrolling = true;\n          }\n          /**\n           * Select item in the center of the column\n           * which is the month/year that we want to select\n           */\n          const bbox = el.getBoundingClientRect();\n          const centerX = bbox.x + bbox.width / 2;\n          const centerY = bbox.y + bbox.height / 2;\n          const activeElement = el.shadowRoot.elementFromPoint(centerX, centerY);\n          if (activeEl !== null) {\n            activeEl.classList.remove(PICKER_COL_ACTIVE);\n          }\n          if (activeElement === null || activeElement.disabled) {\n            return;\n          }\n          /**\n           * If we are selecting a new value,\n           * we need to run haptics again.\n           */\n          if (activeElement !== activeEl) {\n            hapticSelectionChanged();\n            if (this.canExitInputMode) {\n              /**\n               * The native iOS wheel picker\n               * only dismisses the keyboard\n               * once the selected item has changed\n               * as a result of a swipe\n               * from the user. If `canExitInputMode` is\n               * `false` then this means that the\n               * scroll is happening as a result of\n               * the `value` property programmatically changing\n               * either by an application or by the user via the keyboard.\n               */\n              this.exitInputMode();\n            }\n          }\n          activeEl = activeElement;\n          activeElement.classList.add(PICKER_COL_ACTIVE);\n          timeout = setTimeout(() => {\n            this.isScrolling = false;\n            hapticSelectionEnd();\n            /**\n             * Certain tasks (such as those that\n             * cause re-renders) should only be done\n             * once scrolling has finished, otherwise\n             * flickering may occur.\n             */\n            const { scrollEndCallback } = this;\n            if (scrollEndCallback) {\n              scrollEndCallback();\n              this.scrollEndCallback = undefined;\n            }\n            /**\n             * Reset this flag as the\n             * next scroll interaction could\n             * be a scroll from the user. In this\n             * case, we should exit input mode.\n             */\n            this.canExitInputMode = true;\n            const dataIndex = activeElement.getAttribute('data-index');\n            /**\n             * If no value it is\n             * possible we hit one of the\n             * empty padding columns.\n             */\n            if (dataIndex === null) {\n              return;\n            }\n            const index = parseInt(dataIndex, 10);\n            const selectedItem = this.items[index];\n            if (selectedItem.value !== this.value) {\n              this.setValue(selectedItem.value);\n            }\n          }, 250);\n        });\n      };\n      /**\n       * Wrap this in an raf so that the scroll callback\n       * does not fire when component is initially shown.\n       */\n      raf(() => {\n        el.addEventListener('scroll', scrollCallback);\n        this.destroyScrollListener = () => {\n          el.removeEventListener('scroll', scrollCallback);\n        };\n      });\n    };\n    /**\n     * Tells the parent picker to\n     * exit text entry mode. This is only called\n     * when the selected item changes during scroll, so\n     * we know that the user likely wants to scroll\n     * instead of type.\n     */\n    this.exitInputMode = () => {\n      const { parentEl } = this;\n      if (parentEl == null)\n        return;\n      parentEl.exitInputMode();\n      /**\n       * setInputModeActive only takes\n       * effect once scrolling stops to avoid\n       * a component re-render while scrolling.\n       * However, we want the visual active\n       * indicator to go away immediately, so\n       * we call classList.remove here.\n       */\n      this.el.classList.remove('picker-column-active');\n    };\n  }\n  valueChange() {\n    if (this.isColumnVisible) {\n      /**\n       * Only scroll the active item into view when the picker column\n       * is actively visible to the user.\n       */\n      this.scrollActiveItemIntoView();\n    }\n  }\n  /**\n   * Only setup scroll listeners\n   * when the picker is visible, otherwise\n   * the container will have a scroll\n   * height of 0px.\n   */\n  componentWillLoad() {\n    const visibleCallback = (entries) => {\n      var _a;\n      const ev = entries[0];\n      if (ev.isIntersecting) {\n        this.isColumnVisible = true;\n        /**\n         * Because this initial call to scrollActiveItemIntoView has to fire before\n         * the scroll listener is set up, we need to manage the active class manually.\n         */\n        const oldActive = getElementRoot(this.el).querySelector(`.${PICKER_COL_ACTIVE}`);\n        oldActive === null || oldActive === void 0 ? void 0 : oldActive.classList.remove(PICKER_COL_ACTIVE);\n        this.scrollActiveItemIntoView();\n        (_a = this.activeItem) === null || _a === void 0 ? void 0 : _a.classList.add(PICKER_COL_ACTIVE);\n        this.initializeScrollListener();\n      }\n      else {\n        this.isColumnVisible = false;\n        if (this.destroyScrollListener) {\n          this.destroyScrollListener();\n          this.destroyScrollListener = undefined;\n        }\n      }\n    };\n    new IntersectionObserver(visibleCallback, { threshold: 0.001 }).observe(this.el);\n    const parentEl = (this.parentEl = this.el.closest('ion-picker-internal'));\n    if (parentEl !== null) {\n      // TODO(FW-2832): type\n      parentEl.addEventListener('ionInputModeChange', (ev) => this.inputModeChange(ev));\n    }\n  }\n  componentDidRender() {\n    var _a;\n    const { activeItem, items, isColumnVisible, value } = this;\n    if (isColumnVisible) {\n      if (activeItem) {\n        this.scrollActiveItemIntoView();\n      }\n      else if (((_a = items[0]) === null || _a === void 0 ? void 0 : _a.value) !== value) {\n        /**\n         * If the picker column does not have an active item and the current value\n         * does not match the first item in the picker column, that means\n         * the value is out of bounds. In this case, we assign the value to the\n         * first item to match the scroll position of the column.\n         *\n         */\n        this.setValue(items[0].value);\n      }\n    }\n  }\n  /** @internal  */\n  async scrollActiveItemIntoView() {\n    const activeEl = this.activeItem;\n    if (activeEl) {\n      this.centerPickerItemInView(activeEl, false, false);\n    }\n  }\n  /**\n   * Sets the value prop and fires the ionChange event.\n   * This is used when we need to fire ionChange from\n   * user-generated events that cannot be caught with normal\n   * input/change event listeners.\n   * @internal\n   */\n  async setValue(value) {\n    const { items } = this;\n    this.value = value;\n    const findItem = items.find((item) => item.value === value && item.disabled !== true);\n    if (findItem) {\n      this.ionChange.emit(findItem);\n    }\n  }\n  get activeItem() {\n    return getElementRoot(this.el).querySelector(`.picker-item[data-value=\"${this.value}\"]:not([disabled])`);\n  }\n  render() {\n    const { items, color, isActive, numericInput } = this;\n    const mode = getIonMode(this);\n    return (h(Host, { tabindex: 0, class: createColorClasses(color, {\n        [mode]: true,\n        ['picker-column-active']: isActive,\n        ['picker-column-numeric-input']: numericInput,\n      }) }, h(\"div\", { class: \"picker-item picker-item-empty\" }, \"\\u00A0\"), h(\"div\", { class: \"picker-item picker-item-empty\" }, \"\\u00A0\"), h(\"div\", { class: \"picker-item picker-item-empty\" }, \"\\u00A0\"), items.map((item, index) => {\n      {\n        /*\n        Users should be able to tab\n        between multiple columns. As a result,\n        we set tabindex here so that tabbing switches\n        between columns instead of buttons. Users\n        can still use arrow keys on the keyboard to\n        navigate the column up and down.\n      */\n      }\n      return (h(\"button\", { tabindex: \"-1\", class: {\n          'picker-item': true,\n          'picker-item-disabled': item.disabled || false,\n        }, \"data-value\": item.value, \"data-index\": index, onClick: (ev) => {\n          this.centerPickerItemInView(ev.target, true);\n        }, disabled: item.disabled }, item.text));\n    }), h(\"div\", { class: \"picker-item picker-item-empty\" }, \"\\u00A0\"), h(\"div\", { class: \"picker-item picker-item-empty\" }, \"\\u00A0\"), h(\"div\", { class: \"picker-item picker-item-empty\" }, \"\\u00A0\")));\n  }\n  static get is() { return \"ion-picker-column-internal\"; }\n  static get encapsulation() { return \"shadow\"; }\n  static get originalStyleUrls() {\n    return {\n      \"ios\": [\"picker-column-internal.ios.scss\"],\n      \"md\": [\"picker-column-internal.md.scss\"]\n    };\n  }\n  static get styleUrls() {\n    return {\n      \"ios\": [\"picker-column-internal.ios.css\"],\n      \"md\": [\"picker-column-internal.md.css\"]\n    };\n  }\n  static get properties() {\n    return {\n      \"items\": {\n        \"type\": \"unknown\",\n        \"mutable\": false,\n        \"complexType\": {\n          \"original\": \"PickerColumnItem[]\",\n          \"resolved\": \"PickerColumnItem[]\",\n          \"references\": {\n            \"PickerColumnItem\": {\n              \"location\": \"import\",\n              \"path\": \"./picker-column-internal-interfaces\"\n            }\n          }\n        },\n        \"required\": false,\n        \"optional\": false,\n        \"docs\": {\n          \"tags\": [],\n          \"text\": \"A list of options to be displayed in the picker\"\n        },\n        \"defaultValue\": \"[]\"\n      },\n      \"value\": {\n        \"type\": \"any\",\n        \"mutable\": true,\n        \"complexType\": {\n          \"original\": \"string | number\",\n          \"resolved\": \"number | string | undefined\",\n          \"references\": {}\n        },\n        \"required\": false,\n        \"optional\": true,\n        \"docs\": {\n          \"tags\": [],\n          \"text\": \"The selected option in the picker.\"\n        },\n        \"attribute\": \"value\",\n        \"reflect\": false\n      },\n      \"color\": {\n        \"type\": \"string\",\n        \"mutable\": false,\n        \"complexType\": {\n          \"original\": \"Color\",\n          \"resolved\": \"\\\"danger\\\" | \\\"dark\\\" | \\\"light\\\" | \\\"medium\\\" | \\\"primary\\\" | \\\"secondary\\\" | \\\"success\\\" | \\\"tertiary\\\" | \\\"warning\\\" | string & Record<never, never> | undefined\",\n          \"references\": {\n            \"Color\": {\n              \"location\": \"import\",\n              \"path\": \"../../interface\"\n            }\n          }\n        },\n        \"required\": false,\n        \"optional\": true,\n        \"docs\": {\n          \"tags\": [],\n          \"text\": \"The color to use from your application's color palette.\\nDefault options are: `\\\"primary\\\"`, `\\\"secondary\\\"`, `\\\"tertiary\\\"`, `\\\"success\\\"`, `\\\"warning\\\"`, `\\\"danger\\\"`, `\\\"light\\\"`, `\\\"medium\\\"`, and `\\\"dark\\\"`.\\nFor more information on colors, see [theming](/docs/theming/basics).\"\n        },\n        \"attribute\": \"color\",\n        \"reflect\": true,\n        \"defaultValue\": \"'primary'\"\n      },\n      \"numericInput\": {\n        \"type\": \"boolean\",\n        \"mutable\": false,\n        \"complexType\": {\n          \"original\": \"boolean\",\n          \"resolved\": \"boolean\",\n          \"references\": {}\n        },\n        \"required\": false,\n        \"optional\": false,\n        \"docs\": {\n          \"tags\": [{\n              \"name\": \"internal\",\n              \"text\": undefined\n            }],\n          \"text\": \"If `true`, tapping the picker will\\nreveal a number input keyboard that lets\\nthe user type in values for each picker\\ncolumn. This is useful when working\\nwith time pickers.\"\n        },\n        \"attribute\": \"numeric-input\",\n        \"reflect\": false,\n        \"defaultValue\": \"false\"\n      }\n    };\n  }\n  static get states() {\n    return {\n      \"isActive\": {}\n    };\n  }\n  static get events() {\n    return [{\n        \"method\": \"ionChange\",\n        \"name\": \"ionChange\",\n        \"bubbles\": true,\n        \"cancelable\": true,\n        \"composed\": true,\n        \"docs\": {\n          \"tags\": [],\n          \"text\": \"Emitted when the value has changed.\"\n        },\n        \"complexType\": {\n          \"original\": \"PickerColumnItem\",\n          \"resolved\": \"PickerColumnItem\",\n          \"references\": {\n            \"PickerColumnItem\": {\n              \"location\": \"import\",\n              \"path\": \"./picker-column-internal-interfaces\"\n            }\n          }\n        }\n      }];\n  }\n  static get methods() {\n    return {\n      \"scrollActiveItemIntoView\": {\n        \"complexType\": {\n          \"signature\": \"() => Promise<void>\",\n          \"parameters\": [],\n          \"references\": {\n            \"Promise\": {\n              \"location\": \"global\"\n            }\n          },\n          \"return\": \"Promise<void>\"\n        },\n        \"docs\": {\n          \"text\": \"\",\n          \"tags\": [{\n              \"name\": \"internal\",\n              \"text\": undefined\n            }]\n        }\n      },\n      \"setValue\": {\n        \"complexType\": {\n          \"signature\": \"(value?: string | number) => Promise<void>\",\n          \"parameters\": [{\n              \"tags\": [],\n              \"text\": \"\"\n            }],\n          \"references\": {\n            \"Promise\": {\n              \"location\": \"global\"\n            }\n          },\n          \"return\": \"Promise<void>\"\n        },\n        \"docs\": {\n          \"text\": \"Sets the value prop and fires the ionChange event.\\nThis is used when we need to fire ionChange from\\nuser-generated events that cannot be caught with normal\\ninput/change event listeners.\",\n          \"tags\": [{\n              \"name\": \"internal\",\n              \"text\": undefined\n            }]\n        }\n      }\n    };\n  }\n  static get elementRef() { return \"el\"; }\n  static get watchers() {\n    return [{\n        \"propName\": \"value\",\n        \"methodName\": \"valueChange\"\n      }];\n  }\n}\nconst PICKER_COL_ACTIVE = 'picker-item-active';\n",":host {\n  display: flex;\n  position: relative;\n  align-items: center;\n  justify-content: center;\n  width: 100%;\n  height: 200px;\n  /**\n   * Picker columns should display\n   * in the order in which developers\n   * added them and should ignore\n   * LTR vs RTL directions.\n   */\n  direction: ltr;\n  /**\n   * This is required otherwise the\n   * highlight will appear behind\n   * the picker when used inline.\n   */\n  z-index: 0;\n}\n\n:host .picker-before,\n:host .picker-after {\n  position: absolute;\n  width: 100%;\n  /**\n   * The transform and z-index\n   * are needed for WebKit otherwise\n   * the fade will appear underneath the picker.\n   */\n  transform: translateZ(0);\n  z-index: 1;\n  pointer-events: none;\n}\n\n:host .picker-before {\n  left: 0;\n  top: 0;\n  height: 83px;\n}\n:host-context([dir=rtl]) {\n  left: unset;\n  right: unset;\n  right: 0;\n}\n\n:host .picker-after {\n  left: 0;\n  top: 116px;\n  height: 84px;\n}\n:host-context([dir=rtl]) {\n  left: unset;\n  right: unset;\n  right: 0;\n}\n\n:host .picker-highlight {\n  border-radius: 8px;\n  left: 0;\n  right: 0;\n  top: 50%;\n  bottom: 0;\n  margin-left: auto;\n  margin-right: auto;\n  margin-top: 0;\n  margin-bottom: 0;\n  position: absolute;\n  width: calc(100% - 16px);\n  height: 34px;\n  transform: translateY(-50%);\n  z-index: -1;\n}\n@supports (margin-inline-start: 0) or (-webkit-margin-start: 0) {\n  :host .picker-highlight {\n    margin-left: unset;\n    margin-right: unset;\n    -webkit-margin-start: auto;\n    margin-inline-start: auto;\n    -webkit-margin-end: auto;\n    margin-inline-end: auto;\n  }\n}\n\n:host input {\n  position: absolute;\n  top: 0;\n  left: 0;\n  right: 0;\n  bottom: 0;\n  width: 100%;\n  height: 100%;\n  margin: 0;\n  padding: 0;\n  border: 0;\n  outline: 0;\n  clip: rect(0 0 0 0);\n  opacity: 0;\n  overflow: hidden;\n  -webkit-appearance: none;\n  -moz-appearance: none;\n}\n\n:host ::slotted(ion-picker-column-internal:first-of-type) {\n  text-align: start;\n}\n\n:host ::slotted(ion-picker-column-internal:last-of-type) {\n  text-align: end;\n}\n\n:host ::slotted(ion-picker-column-internal:only-child) {\n  text-align: center;\n}\n\n:host .picker-before {\n  background: linear-gradient(to bottom, var(--background, var(--ion-background-color, #fff)) 20%, rgba(var(--background-rgb, var(--ion-background-color-rgb, 255, 255, 255)), 0.8) 100%);\n}\n\n:host .picker-after {\n  background: linear-gradient(to top, var(--background, var(--ion-background-color, #fff)) 20%, rgba(var(--background-rgb, var(--ion-background-color-rgb, 255, 255, 255)), 0.8) 100%);\n}\n\n:host .picker-highlight {\n  background: var(--ion-color-step-150, #eeeeef);\n}",":host {\n  display: flex;\n  position: relative;\n  align-items: center;\n  justify-content: center;\n  width: 100%;\n  height: 200px;\n  /**\n   * Picker columns should display\n   * in the order in which developers\n   * added them and should ignore\n   * LTR vs RTL directions.\n   */\n  direction: ltr;\n  /**\n   * This is required otherwise the\n   * highlight will appear behind\n   * the picker when used inline.\n   */\n  z-index: 0;\n}\n\n:host .picker-before,\n:host .picker-after {\n  position: absolute;\n  width: 100%;\n  /**\n   * The transform and z-index\n   * are needed for WebKit otherwise\n   * the fade will appear underneath the picker.\n   */\n  transform: translateZ(0);\n  z-index: 1;\n  pointer-events: none;\n}\n\n:host .picker-before {\n  left: 0;\n  top: 0;\n  height: 83px;\n}\n:host-context([dir=rtl]) {\n  left: unset;\n  right: unset;\n  right: 0;\n}\n\n:host .picker-after {\n  left: 0;\n  top: 116px;\n  height: 84px;\n}\n:host-context([dir=rtl]) {\n  left: unset;\n  right: unset;\n  right: 0;\n}\n\n:host .picker-highlight {\n  border-radius: 8px;\n  left: 0;\n  right: 0;\n  top: 50%;\n  bottom: 0;\n  margin-left: auto;\n  margin-right: auto;\n  margin-top: 0;\n  margin-bottom: 0;\n  position: absolute;\n  width: calc(100% - 16px);\n  height: 34px;\n  transform: translateY(-50%);\n  z-index: -1;\n}\n@supports (margin-inline-start: 0) or (-webkit-margin-start: 0) {\n  :host .picker-highlight {\n    margin-left: unset;\n    margin-right: unset;\n    -webkit-margin-start: auto;\n    margin-inline-start: auto;\n    -webkit-margin-end: auto;\n    margin-inline-end: auto;\n  }\n}\n\n:host input {\n  position: absolute;\n  top: 0;\n  left: 0;\n  right: 0;\n  bottom: 0;\n  width: 100%;\n  height: 100%;\n  margin: 0;\n  padding: 0;\n  border: 0;\n  outline: 0;\n  clip: rect(0 0 0 0);\n  opacity: 0;\n  overflow: hidden;\n  -webkit-appearance: none;\n  -moz-appearance: none;\n}\n\n:host ::slotted(ion-picker-column-internal:first-of-type) {\n  text-align: start;\n}\n\n:host ::slotted(ion-picker-column-internal:last-of-type) {\n  text-align: end;\n}\n\n:host ::slotted(ion-picker-column-internal:only-child) {\n  text-align: center;\n}\n\n:host .picker-before {\n  background: linear-gradient(to bottom, var(--background, var(--ion-background-color, #fff)) 20%, rgba(var(--background-rgb, var(--ion-background-color-rgb, 255, 255, 255)), 0) 90%);\n}\n\n:host .picker-after {\n  background: linear-gradient(to top, var(--background, var(--ion-background-color, #fff)) 30%, rgba(var(--background-rgb, var(--ion-background-color-rgb, 255, 255, 255)), 0) 90%);\n}","/*!\n * (C) Ionic http://ionicframework.com - MIT License\n */\nimport { Host, h } from '@stencil/core';\nimport { getElementRoot } from '../../utils/helpers';\n/**\n * @virtualProp {\"ios\" | \"md\"} mode - The mode determines which platform styles to use.\n * @internal\n */\nexport class PickerInternal {\n  constructor() {\n    this.useInputMode = false;\n    this.isInHighlightBounds = (ev) => {\n      const { highlightEl } = this;\n      if (!highlightEl) {\n        return false;\n      }\n      const bbox = highlightEl.getBoundingClientRect();\n      /**\n       * Check to see if the user clicked\n       * outside the bounds of the highlight.\n       */\n      const outsideX = ev.clientX < bbox.left || ev.clientX > bbox.right;\n      const outsideY = ev.clientY < bbox.top || ev.clientY > bbox.bottom;\n      if (outsideX || outsideY) {\n        return false;\n      }\n      return true;\n    };\n    /**\n     * If we are no longer focused\n     * on a picker column, then we should\n     * exit input mode. An exception is made\n     * for the input in the picker since having\n     * that focused means we are still in input mode.\n     */\n    this.onFocusOut = (ev) => {\n      // TODO(FW-2832): type\n      const { relatedTarget } = ev;\n      if (!relatedTarget || (relatedTarget.tagName !== 'ION-PICKER-COLUMN-INTERNAL' && relatedTarget !== this.inputEl)) {\n        this.exitInputMode();\n      }\n    };\n    /**\n     * When picker columns receive focus\n     * the parent picker needs to determine\n     * whether to enter/exit input mode.\n     */\n    this.onFocusIn = (ev) => {\n      // TODO(FW-2832): type\n      const { target } = ev;\n      /**\n       * Due to browser differences in how/when focus\n       * is dispatched on certain elements, we need to\n       * make sure that this function only ever runs when\n       * focusing a picker column.\n       */\n      if (target.tagName !== 'ION-PICKER-COLUMN-INTERNAL') {\n        return;\n      }\n      /**\n       * If we have actionOnClick\n       * then this means the user focused\n       * a picker column via mouse or\n       * touch (i.e. a PointerEvent). As a result,\n       * we should not enter/exit input mode\n       * until the click event has fired, which happens\n       * after the `focusin` event.\n       *\n       * Otherwise, the user likely focused\n       * the column using their keyboard and\n       * we should enter/exit input mode automatically.\n       */\n      if (!this.actionOnClick) {\n        const columnEl = target;\n        const allowInput = columnEl.numericInput;\n        if (allowInput) {\n          this.enterInputMode(columnEl, false);\n        }\n        else {\n          this.exitInputMode();\n        }\n      }\n    };\n    /**\n     * On click we need to run an actionOnClick\n     * function that has been set in onPointerDown\n     * so that we enter/exit input mode correctly.\n     */\n    this.onClick = () => {\n      const { actionOnClick } = this;\n      if (actionOnClick) {\n        actionOnClick();\n        this.actionOnClick = undefined;\n      }\n    };\n    /**\n     * Clicking a column also focuses the column on\n     * certain browsers, so we use onPointerDown\n     * to tell the onFocusIn function that users\n     * are trying to click the column rather than\n     * focus the column using the keyboard. When the\n     * user completes the click, the onClick function\n     * runs and runs the actionOnClick callback.\n     */\n    this.onPointerDown = (ev) => {\n      const { useInputMode, inputModeColumn, el } = this;\n      if (this.isInHighlightBounds(ev)) {\n        /**\n         * If we were already in\n         * input mode, then we should determine\n         * if we tapped a particular column and\n         * should switch to input mode for\n         * that specific column.\n         */\n        if (useInputMode) {\n          /**\n           * If we tapped a picker column\n           * then we should either switch to input\n           * mode for that column or all columns.\n           * Otherwise we should exit input mode\n           * since we just tapped the highlight and\n           * not a column.\n           */\n          if (ev.target.tagName === 'ION-PICKER-COLUMN-INTERNAL') {\n            /**\n             * If user taps 2 different columns\n             * then we should just switch to input mode\n             * for the new column rather than switching to\n             * input mode for all columns.\n             */\n            if (inputModeColumn && inputModeColumn === ev.target) {\n              this.actionOnClick = () => {\n                this.enterInputMode();\n              };\n            }\n            else {\n              this.actionOnClick = () => {\n                this.enterInputMode(ev.target);\n              };\n            }\n          }\n          else {\n            this.actionOnClick = () => {\n              this.exitInputMode();\n            };\n          }\n          /**\n           * If we were not already in\n           * input mode, then we should\n           * enter input mode for all columns.\n           */\n        }\n        else {\n          /**\n           * If there is only 1 numeric input column\n           * then we should skip multi column input.\n           */\n          const columns = el.querySelectorAll('ion-picker-column-internal.picker-column-numeric-input');\n          const columnEl = columns.length === 1 ? ev.target : undefined;\n          this.actionOnClick = () => {\n            this.enterInputMode(columnEl);\n          };\n        }\n        return;\n      }\n      this.actionOnClick = () => {\n        this.exitInputMode();\n      };\n    };\n    /**\n     * Enters input mode to allow\n     * for text entry of numeric values.\n     * If on mobile, we focus a hidden input\n     * field so that the on screen keyboard\n     * is brought up. When tabbing using a\n     * keyboard, picker columns receive an outline\n     * to indicate they are focused. As a result,\n     * we should not focus the hidden input as it\n     * would cause the outline to go away, preventing\n     * users from having any visual indication of which\n     * column is focused.\n     */\n    this.enterInputMode = (columnEl, focusInput = true) => {\n      const { inputEl, el } = this;\n      if (!inputEl) {\n        return;\n      }\n      /**\n       * Only active input mode if there is at\n       * least one column that accepts numeric input.\n       */\n      const hasInputColumn = el.querySelector('ion-picker-column-internal.picker-column-numeric-input');\n      if (!hasInputColumn) {\n        return;\n      }\n      /**\n       * If columnEl is undefined then\n       * it is assumed that all numeric pickers\n       * are eligible for text entry.\n       * (i.e. hour and minute columns)\n       */\n      this.useInputMode = true;\n      this.inputModeColumn = columnEl;\n      /**\n       * Users with a keyboard and mouse can\n       * activate input mode where the input is\n       * focused as well as when it is not focused,\n       * so we need to make sure we clean up any\n       * old listeners.\n       */\n      if (focusInput) {\n        if (this.destroyKeypressListener) {\n          this.destroyKeypressListener();\n          this.destroyKeypressListener = undefined;\n        }\n        inputEl.focus();\n      }\n      else {\n        el.addEventListener('keypress', this.onKeyPress);\n        this.destroyKeypressListener = () => {\n          el.removeEventListener('keypress', this.onKeyPress);\n        };\n      }\n      this.emitInputModeChange();\n    };\n    this.onKeyPress = (ev) => {\n      const { inputEl } = this;\n      if (!inputEl) {\n        return;\n      }\n      const parsedValue = parseInt(ev.key, 10);\n      /**\n       * Only numbers should be allowed\n       */\n      if (!Number.isNaN(parsedValue)) {\n        inputEl.value += ev.key;\n        this.onInputChange();\n      }\n    };\n    this.selectSingleColumn = () => {\n      const { inputEl, inputModeColumn, singleColumnSearchTimeout } = this;\n      if (!inputEl || !inputModeColumn) {\n        return;\n      }\n      const values = inputModeColumn.items.filter((item) => item.disabled !== true);\n      /**\n       * If users pause for a bit, the search\n       * value should be reset similar to how a\n       * <select> behaves. So typing \"34\", waiting,\n       * then typing \"5\" should select \"05\".\n       */\n      if (singleColumnSearchTimeout) {\n        clearTimeout(singleColumnSearchTimeout);\n      }\n      this.singleColumnSearchTimeout = setTimeout(() => {\n        inputEl.value = '';\n        this.singleColumnSearchTimeout = undefined;\n      }, 1000);\n      /**\n       * For values that are longer than 2 digits long\n       * we should shift the value over 1 character\n       * to the left. So typing \"456\" would result in \"56\".\n       * TODO: If we want to support more than just\n       * time entry, we should update this value to be\n       * the max length of all of the picker items.\n       */\n      if (inputEl.value.length >= 3) {\n        const startIndex = inputEl.value.length - 2;\n        const newString = inputEl.value.substring(startIndex);\n        inputEl.value = newString;\n        this.selectSingleColumn();\n        return;\n      }\n      /**\n       * Checking the value of the input gets priority\n       * first. For example, if the value of the input\n       * is \"1\" and we entered \"2\", then the complete value\n       * is \"12\" and we should select hour 12.\n       *\n       * Regex removes any leading zeros from values like \"02\",\n       * but it keeps a single zero if there are only zeros in the string.\n       * 0+(?=[1-9]) --> Match 1 or more zeros that are followed by 1-9\n       * 0+(?=0$) --> Match 1 or more zeros that must be followed by one 0 and end.\n       */\n      const findItemFromCompleteValue = values.find(({ text }) => {\n        const parsedText = text.replace(/^0+(?=[1-9])|0+(?=0$)/, '');\n        return parsedText === inputEl.value;\n      });\n      if (findItemFromCompleteValue) {\n        inputModeColumn.setValue(findItemFromCompleteValue.value);\n        return;\n      }\n      /**\n       * If we typed \"56\" to get minute 56, then typed \"7\",\n       * we should select \"07\" as \"567\" is not a valid minute.\n       */\n      if (inputEl.value.length === 2) {\n        const changedCharacter = inputEl.value.substring(inputEl.value.length - 1);\n        inputEl.value = changedCharacter;\n        this.selectSingleColumn();\n      }\n    };\n    /**\n     * Searches a list of column items for a particular\n     * value. This is currently used for numeric values.\n     * The zeroBehavior can be set to account for leading\n     * or trailing zeros when looking at the item text.\n     */\n    this.searchColumn = (colEl, value, zeroBehavior = 'start') => {\n      const behavior = zeroBehavior === 'start' ? /^0+/ : /0$/;\n      const item = colEl.items.find(({ text, disabled }) => disabled !== true && text.replace(behavior, '') === value);\n      if (item) {\n        colEl.setValue(item.value);\n      }\n    };\n    this.selectMultiColumn = () => {\n      const { inputEl, el } = this;\n      if (!inputEl) {\n        return;\n      }\n      const numericPickers = Array.from(el.querySelectorAll('ion-picker-column-internal')).filter((col) => col.numericInput);\n      const firstColumn = numericPickers[0];\n      const lastColumn = numericPickers[1];\n      let value = inputEl.value;\n      let minuteValue;\n      switch (value.length) {\n        case 1:\n          this.searchColumn(firstColumn, value);\n          break;\n        case 2:\n          /**\n           * If the first character is `0` or `1` it is\n           * possible that users are trying to type `09`\n           * or `11` into the hour field, so we should look\n           * at that first.\n           */\n          const firstCharacter = inputEl.value.substring(0, 1);\n          value = firstCharacter === '0' || firstCharacter === '1' ? inputEl.value : firstCharacter;\n          this.searchColumn(firstColumn, value);\n          /**\n           * If only checked the first value,\n           * we can check the second value\n           * for a match in the minutes column\n           */\n          if (value.length === 1) {\n            minuteValue = inputEl.value.substring(inputEl.value.length - 1);\n            this.searchColumn(lastColumn, minuteValue, 'end');\n          }\n          break;\n        case 3:\n          /**\n           * If the first character is `0` or `1` it is\n           * possible that users are trying to type `09`\n           * or `11` into the hour field, so we should look\n           * at that first.\n           */\n          const firstCharacterAgain = inputEl.value.substring(0, 1);\n          value =\n            firstCharacterAgain === '0' || firstCharacterAgain === '1'\n              ? inputEl.value.substring(0, 2)\n              : firstCharacterAgain;\n          this.searchColumn(firstColumn, value);\n          /**\n           * If only checked the first value,\n           * we can check the second value\n           * for a match in the minutes column\n           */\n          minuteValue = value.length === 1 ? inputEl.value.substring(1) : inputEl.value.substring(2);\n          this.searchColumn(lastColumn, minuteValue, 'end');\n          break;\n        case 4:\n          /**\n           * If the first character is `0` or `1` it is\n           * possible that users are trying to type `09`\n           * or `11` into the hour field, so we should look\n           * at that first.\n           */\n          const firstCharacterAgainAgain = inputEl.value.substring(0, 1);\n          value =\n            firstCharacterAgainAgain === '0' || firstCharacterAgainAgain === '1'\n              ? inputEl.value.substring(0, 2)\n              : firstCharacterAgainAgain;\n          this.searchColumn(firstColumn, value);\n          /**\n           * If only checked the first value,\n           * we can check the second value\n           * for a match in the minutes column\n           */\n          const minuteValueAgain = value.length === 1\n            ? inputEl.value.substring(1, inputEl.value.length)\n            : inputEl.value.substring(2, inputEl.value.length);\n          this.searchColumn(lastColumn, minuteValueAgain, 'end');\n          break;\n        default:\n          const startIndex = inputEl.value.length - 4;\n          const newString = inputEl.value.substring(startIndex);\n          inputEl.value = newString;\n          this.selectMultiColumn();\n          break;\n      }\n    };\n    /**\n     * Searches the value of the active column\n     * to determine which value users are trying\n     * to select\n     */\n    this.onInputChange = () => {\n      const { useInputMode, inputEl, inputModeColumn } = this;\n      if (!useInputMode || !inputEl) {\n        return;\n      }\n      if (inputModeColumn) {\n        this.selectSingleColumn();\n      }\n      else {\n        this.selectMultiColumn();\n      }\n    };\n    /**\n     * Emit ionInputModeChange. Picker columns\n     * listen for this event to determine whether\n     * or not their column is \"active\" for text input.\n     */\n    this.emitInputModeChange = () => {\n      const { useInputMode, inputModeColumn } = this;\n      this.ionInputModeChange.emit({\n        useInputMode,\n        inputModeColumn,\n      });\n    };\n  }\n  /**\n   * When the picker is interacted with\n   * we need to prevent touchstart so other\n   * gestures do not fire. For example,\n   * scrolling on the wheel picker\n   * in ion-datetime should not cause\n   * a card modal to swipe to close.\n   */\n  preventTouchStartPropagation(ev) {\n    ev.stopPropagation();\n  }\n  componentWillLoad() {\n    getElementRoot(this.el).addEventListener('focusin', this.onFocusIn);\n    getElementRoot(this.el).addEventListener('focusout', this.onFocusOut);\n  }\n  /**\n   * @internal\n   * Exits text entry mode for the picker\n   * This method blurs the hidden input\n   * and cause the keyboard to dismiss.\n   */\n  async exitInputMode() {\n    const { inputEl, useInputMode } = this;\n    if (!useInputMode || !inputEl) {\n      return;\n    }\n    this.useInputMode = false;\n    this.inputModeColumn = undefined;\n    inputEl.blur();\n    inputEl.value = '';\n    if (this.destroyKeypressListener) {\n      this.destroyKeypressListener();\n      this.destroyKeypressListener = undefined;\n    }\n    this.emitInputModeChange();\n  }\n  render() {\n    return (h(Host, { onPointerDown: (ev) => this.onPointerDown(ev), onClick: () => this.onClick() }, h(\"input\", { \"aria-hidden\": \"true\", tabindex: -1, inputmode: \"numeric\", type: \"number\", ref: (el) => (this.inputEl = el), onInput: () => this.onInputChange(), onBlur: () => this.exitInputMode() }), h(\"div\", { class: \"picker-before\" }), h(\"div\", { class: \"picker-after\" }), h(\"div\", { class: \"picker-highlight\", ref: (el) => (this.highlightEl = el) }), h(\"slot\", null)));\n  }\n  static get is() { return \"ion-picker-internal\"; }\n  static get encapsulation() { return \"shadow\"; }\n  static get originalStyleUrls() {\n    return {\n      \"ios\": [\"picker-internal.ios.scss\"],\n      \"md\": [\"picker-internal.md.scss\"]\n    };\n  }\n  static get styleUrls() {\n    return {\n      \"ios\": [\"picker-internal.ios.css\"],\n      \"md\": [\"picker-internal.md.css\"]\n    };\n  }\n  static get events() {\n    return [{\n        \"method\": \"ionInputModeChange\",\n        \"name\": \"ionInputModeChange\",\n        \"bubbles\": true,\n        \"cancelable\": true,\n        \"composed\": true,\n        \"docs\": {\n          \"tags\": [],\n          \"text\": \"\"\n        },\n        \"complexType\": {\n          \"original\": \"PickerInternalChangeEventDetail\",\n          \"resolved\": \"PickerInternalChangeEventDetail\",\n          \"references\": {\n            \"PickerInternalChangeEventDetail\": {\n              \"location\": \"import\",\n              \"path\": \"./picker-internal-interfaces\"\n            }\n          }\n        }\n      }];\n  }\n  static get methods() {\n    return {\n      \"exitInputMode\": {\n        \"complexType\": {\n          \"signature\": \"() => Promise<void>\",\n          \"parameters\": [],\n          \"references\": {\n            \"Promise\": {\n              \"location\": \"global\"\n            }\n          },\n          \"return\": \"Promise<void>\"\n        },\n        \"docs\": {\n          \"text\": \"\",\n          \"tags\": [{\n              \"name\": \"internal\",\n              \"text\": \"Exits text entry mode for the picker\\nThis method blurs the hidden input\\nand cause the keyboard to dismiss.\"\n            }]\n        }\n      }\n    };\n  }\n  static get elementRef() { return \"el\"; }\n  static get listeners() {\n    return [{\n        \"name\": \"touchstart\",\n        \"method\": \"preventTouchStartPropagation\",\n        \"target\": undefined,\n        \"capture\": false,\n        \"passive\": true\n      }];\n  }\n}\n"],"mappings":"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"}