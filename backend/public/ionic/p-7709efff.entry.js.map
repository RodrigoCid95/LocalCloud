{"version":3,"names":["isYearDisabled","refYear","minParts","maxParts","year","isDayDisabled","refParts","dayValues","day","undefined","includes","isBefore","isAfter","getCalendarDayState","locale","activeParts","todayParts","activePartsArray","Array","isArray","isActive","find","parts","isSameDay","isToday","disabled","ariaSelected","ariaLabel","generateDayAriaLabel","text","getDay","isMonthDisabled","isPrevMonthDisabled","prevMonth","Object","assign","getPreviousMonth","isNextMonthDisabled","nextMonth","getNextMonth","getHighlightStyles","highlightedDates","dateIsoString","el","dateStringWithoutTime","split","matchingHighlight","hd","date","textColor","backgroundColor","e","printIonError","datetimeIosCss","datetimeMdCss","Datetime","constructor","hostRef","this","inputId","datetimeIds","prevPresentation","activePartsClone","showMonthAndYear","workingParts","month","hour","minute","ampm","isPresented","isTimePopoverOpen","color","name","readonly","presentation","cancelText","doneText","clearText","firstDayOfWeek","multiple","showDefaultTitle","showDefaultButtons","showClearButton","showDefaultTimeLabel","size","preferWheel","getActivePartsWithFallback","_a","defaultParts","getActivePart","closeParentOverlay","popoverOrModal","closest","dismiss","setWorkingParts","setActiveParts","removeDate","validatedParts","validateParts","filter","p","hasSlottedButtons","querySelector","confirm","initializeKeyboardListeners","calendarBodyRef","root","shadowRoot","currentMonth","checkCalendarBodyFocus","ev","record","oldValue","classList","contains","focusWorkingDay","mo","MutationObserver","observe","attributeFilter","attributeOldValue","destroyKeyboardMO","disconnect","addEventListener","activeElement","getPartsFromCalendarDay","partsToFocus","key","preventDefault","getNextWeek","getPreviousWeek","getNextDay","getPreviousDay","getStartOfWeek","getEndOfWeek","shiftKey","getPreviousYear","getNextYear","requestAnimationFrame","padding","querySelectorAll","dayEl","length","focus","processMinParts","min","parseMinParts","processMaxParts","max","parseMaxParts","initializeCalendarListener","months","startMonth","workingMonth","endMonth","mode","getIonMode","needsiOSRubberBandFix","navigator","maxTouchPoints","writeTask","scrollLeft","clientWidth","isRTL","getChangedMonth","box","getBoundingClientRect","elementAtCenter","elementFromPoint","x","width","y","height","monthBox","Math","abs","updateActiveMonth","style","removeProperty","appliediOSRubberBandFix","newDate","setProperty","scrollTimeout","scrollCallback","clearTimeout","setTimeout","destroyCalendarListener","removeEventListener","destroyInteractionListeners","processValue","value","hasValue","valueToProcess","parseDate","warnIfValueOutOfBounds","singleValue","tzOffset","clampDate","parseAmPm","onFocus","ionFocus","emit","onBlur","ionBlur","left","offsetWidth","scrollTo","top","behavior","toggleMonthAndYearView","disabledChanged","emitStyle","minChanged","maxChanged","yearValuesChanged","parsedYearValues","convertToArrayOfNumbers","yearValues","monthValuesChanged","parsedMonthValues","monthValues","dayValuesChanged","parsedDayValues","hourValuesChanged","parsedHourValues","hourValues","minuteValuesChanged","parsedMinuteValues","minuteValues","activePartsChanged","valueChanged","valueDateParts","printIonWarning","ionChange","async","closeOverlay","isCalendarPicker","activePartsIsArray","dates","convertDataToISO","map","str","Date","i","getTimezoneOffset","startDate","ionCancel","connectedCallback","clearFocusVisible","startFocusVisible","destroy","disconnectedCallback","initializeListeners","componentDidLoad","visibleCallback","entries","isIntersecting","add","visibleIO","IntersectionObserver","threshold","raf","hiddenCallback","remove","hiddenIO","getElementRoot","stopPropagation","componentDidRender","hasCalendarGrid","ionRender","componentWillLoad","getToday","getClosestValidDate","ionStyle","interactive","datetime","renderFooter","clearButtonClick","reset","h","class","id","onClick","cancel","renderWheelPicker","forcePresentation","renderArray","renderTimePickerColumns","renderDatePickerColumns","renderCombinedDatePickerColumn","renderIndividualDatePickerColumns","isDateEnabled","activePart","monthsToRender","generateMonths","lastMonth","getNumDaysInMonth","result","getCombinedDateColumnData","items","itemObject","index","referenceParts","todayString","onIonChange","detail","findPart","shouldRenderMonths","getMonthColumnData","shouldRenderDays","days","getDayColumnData","dayObject","valueNum","parseInt","shouldRenderYears","years","getYearColumnData","showMonthFirst","isMonthFirstLocale","renderMonthPickerColumn","renderDayPickerColumn","renderYearPickerColumn","userHasSelectedDate","hoursData","minutesData","dayPeriodData","getTimeColumnsData","hourCycle","renderHourPickerColumn","renderMinutePickerColumn","renderDayPeriodPickerColumn","numericInput","isDayPeriodRTL","isLocaleDayPeriodRTL","order","calculateHourFromAMPM","renderWheelView","columnOrder","renderCalendarHeader","expandedIcon","chevronDown","caretUpSharp","collapsedIcon","chevronForward","caretDownSharp","prevMonthDisabled","nextMonthDisabled","hostDir","getAttribute","button","lines","getMonthAndYear","icon","lazy","flipRtl","dir","slot","chevronBack","getDaysOfWeek","d","renderMonth","yearAllowed","monthAllowed","isCalMonthDisabled","swipeDisabled","isWorkingMonth","getDaysOfMonth","dateObject","dayOfWeek","isCalendarPadding","isCalDayDisabled","dateStyle","tabindex","renderCalendarBody","ref","renderCalendar","renderTimeLabel","hasSlottedTimeLabel","renderTimeOverlay","use24Hour","is24Hour","popoverRef","present","CustomEvent","ionShadowTarget","target","onWillDismiss","getLocalizedTime","alignment","translucent","overlayIndex","arrow","onWillPresent","cols","forEach","col","scrollActiveItemIntoView","keyboardEvents","getHeaderSelectedDateText","titleSelectedDatesFormatter","headerText","getMonthAndDay","renderHeader","showExpandedHeader","hasSlottedTitle","renderTime","timeOnlyPresentation","renderCalendarViewMonthYearPicker","renderDatetime","hasWheelVariant","render","isMonthAndYearPresentation","shouldShowMonthAndYear","monthYearPickerOpen","hasDatePresentation","hasGrid","renderHiddenInput","formatValue","Host","createColorClasses"],"sources":["./node_modules/@ionic/core/dist/collection/components/datetime/utils/state.js","./node_modules/@ionic/core/dist/collection/components/datetime/datetime.ios.css?tag=ion-datetime&mode=ios&encapsulation=shadow","./node_modules/@ionic/core/dist/collection/components/datetime/datetime.md.css?tag=ion-datetime&mode=md&encapsulation=shadow","./node_modules/@ionic/core/dist/collection/components/datetime/datetime.js"],"sourcesContent":["/*!\n * (C) Ionic http://ionicframework.com - MIT License\n */\nimport { printIonError } from '@utils/logging';\nimport { isAfter, isBefore, isSameDay } from './comparison';\nimport { generateDayAriaLabel, getDay } from './format';\nimport { getNextMonth, getPreviousMonth } from './manipulation';\nexport const isYearDisabled = (refYear, minParts, maxParts) => {\n  if (minParts && minParts.year > refYear) {\n    return true;\n  }\n  if (maxParts && maxParts.year < refYear) {\n    return true;\n  }\n  return false;\n};\n/**\n * Returns true if a given day should\n * not be interactive according to its value,\n * or the max/min dates.\n */\nexport const isDayDisabled = (refParts, minParts, maxParts, dayValues) => {\n  /**\n   * If this is a filler date (i.e. padding)\n   * then the date is disabled.\n   */\n  if (refParts.day === null) {\n    return true;\n  }\n  /**\n   * If user passed in a list of acceptable day values\n   * check to make sure that the date we are looking\n   * at is in this array.\n   */\n  if (dayValues !== undefined && !dayValues.includes(refParts.day)) {\n    return true;\n  }\n  /**\n   * Given a min date, perform the following\n   * checks. If any of them are true, then the\n   * day should be disabled:\n   * 1. Is the current year < the min allowed year?\n   * 2. Is the current year === min allowed year,\n   * but the current month < the min allowed month?\n   * 3. Is the current year === min allowed year, the\n   * current month === min allow month, but the current\n   * day < the min allowed day?\n   */\n  if (minParts && isBefore(refParts, minParts)) {\n    return true;\n  }\n  /**\n   * Given a max date, perform the following\n   * checks. If any of them are true, then the\n   * day should be disabled:\n   * 1. Is the current year > the max allowed year?\n   * 2. Is the current year === max allowed year,\n   * but the current month > the max allowed month?\n   * 3. Is the current year === max allowed year, the\n   * current month === max allow month, but the current\n   * day > the max allowed day?\n   */\n  if (maxParts && isAfter(refParts, maxParts)) {\n    return true;\n  }\n  /**\n   * If none of these checks\n   * passed then the date should\n   * be interactive.\n   */\n  return false;\n};\n/**\n * Given a locale, a date, the selected date(s), and today's date,\n * generate the state for a given calendar day button.\n */\nexport const getCalendarDayState = (locale, refParts, activeParts, todayParts, minParts, maxParts, dayValues) => {\n  /**\n   * activeParts signals what day(s) are currently selected in the datetime.\n   * If multiple=\"true\", this will be an array, but the logic in this util\n   * is the same whether we have one selected day or many because we're only\n   * calculating the state for one button. So, we treat a single activeParts value\n   * the same as an array of length one.\n   */\n  const activePartsArray = Array.isArray(activeParts) ? activeParts : [activeParts];\n  /**\n   * The day button is active if it is selected, or in other words, if refParts\n   * matches at least one selected date.\n   */\n  const isActive = activePartsArray.find((parts) => isSameDay(refParts, parts)) !== undefined;\n  const isToday = isSameDay(refParts, todayParts);\n  const disabled = isDayDisabled(refParts, minParts, maxParts, dayValues);\n  /**\n   * Note that we always return one object regardless of whether activeParts\n   * was an array, since we pare down to one value for isActive.\n   */\n  return {\n    disabled,\n    isActive,\n    isToday,\n    ariaSelected: isActive ? 'true' : null,\n    ariaLabel: generateDayAriaLabel(locale, isToday, refParts),\n    text: refParts.day != null ? getDay(locale, refParts) : null,\n  };\n};\n/**\n * Returns `true` if the month is disabled given the\n * current date value and min/max date constraints.\n */\nexport const isMonthDisabled = (refParts, { minParts, maxParts, }) => {\n  // If the year is disabled then the month is disabled.\n  if (isYearDisabled(refParts.year, minParts, maxParts)) {\n    return true;\n  }\n  // If the date value is before the min date, then the month is disabled.\n  // If the date value is after the max date, then the month is disabled.\n  if ((minParts && isBefore(refParts, minParts)) || (maxParts && isAfter(refParts, maxParts))) {\n    return true;\n  }\n  return false;\n};\n/**\n * Given a working date, an optional minimum date range,\n * and an optional maximum date range; determine if the\n * previous navigation button is disabled.\n */\nexport const isPrevMonthDisabled = (refParts, minParts, maxParts) => {\n  const prevMonth = Object.assign(Object.assign({}, getPreviousMonth(refParts)), { day: null });\n  return isMonthDisabled(prevMonth, {\n    minParts,\n    maxParts,\n  });\n};\n/**\n * Given a working date and a maximum date range,\n * determine if the next navigation button is disabled.\n */\nexport const isNextMonthDisabled = (refParts, maxParts) => {\n  const nextMonth = Object.assign(Object.assign({}, getNextMonth(refParts)), { day: null });\n  return isMonthDisabled(nextMonth, {\n    maxParts,\n  });\n};\n/**\n * Given the value of the highlightedDates property\n * and an ISO string, return the styles to use for\n * that date, or undefined if none are found.\n */\nexport const getHighlightStyles = (highlightedDates, dateIsoString, el) => {\n  if (Array.isArray(highlightedDates)) {\n    const dateStringWithoutTime = dateIsoString.split('T')[0];\n    const matchingHighlight = highlightedDates.find((hd) => hd.date === dateStringWithoutTime);\n    if (matchingHighlight) {\n      return {\n        textColor: matchingHighlight.textColor,\n        backgroundColor: matchingHighlight.backgroundColor,\n      };\n    }\n  }\n  else {\n    /**\n     * Wrap in a try-catch to prevent exceptions in the user's function\n     * from interrupting the calendar's rendering.\n     */\n    try {\n      return highlightedDates(dateIsoString);\n    }\n    catch (e) {\n      printIonError('Exception thrown from provided `highlightedDates` callback. Please check your function and try again.', el, e);\n    }\n  }\n  return undefined;\n};\n",":host {\n  /**\n   * @prop --background: The primary background of the datetime component.\n   * @prop --background-rgb: The primary background of the datetime component in RGB format.\n   * @prop --title-color: The text color of the title.\n   */\n  display: flex;\n  flex-flow: column;\n  background: var(--background);\n  overflow: hidden;\n}\n\n/**\n * When using the wheel picker to switch\n * between months, sometimes the allowed\n * dates may be filtered. As a result, it\n * is possible to get a layout shift as\n * the picker column will shrink to fit the\n * widest item in the column. Setting a minimum\n * width avoids this layout shifting.\n */\nion-picker-column-internal {\n  min-width: 26px;\n}\n\n:host(.datetime-size-fixed) {\n  width: auto;\n  height: auto;\n}\n\n:host(.datetime-size-fixed:not(.datetime-prefer-wheel)) {\n  max-width: 350px;\n}\n\n/**\n * This ensures that the picker is apppropriately\n * sized and never truncates the text.\n */\n:host(.datetime-size-fixed.datetime-prefer-wheel) {\n  min-width: 350px;\n  max-width: max-content;\n}\n\n:host(.datetime-size-cover) {\n  width: 100%;\n}\n\n:host .calendar-body,\n:host .datetime-year {\n  opacity: 0;\n}\n\n:host(:not(.datetime-ready)) .datetime-year {\n  position: absolute;\n  pointer-events: none;\n}\n\n:host(.datetime-ready) .calendar-body {\n  opacity: 1;\n}\n\n:host(.datetime-ready) .datetime-year {\n  display: none;\n  opacity: 1;\n}\n\n/**\n * Changing the physical order of the\n * picker columns in the DOM is added\n * work, so we just use `order` instead.\n *\n * The picker automatically configures\n * the text alignment, so when switching\n * the order we need to manually switch\n * the text alignment too.\n */\n:host .wheel-order-year-first .day-column {\n  order: 3;\n  text-align: end;\n}\n\n:host .wheel-order-year-first .month-column {\n  order: 2;\n  text-align: end;\n}\n\n:host .wheel-order-year-first .year-column {\n  order: 1;\n  text-align: start;\n}\n\n/**\n * This allows the calendar to take\n * up 100% of the remaining height.\n * On iOS, if there are more than\n * 5 rows of dates, the dates should\n * be resized to fit into this\n * container.\n */\n:host .datetime-calendar,\n:host .datetime-year {\n  display: flex;\n  flex: 1 1 auto;\n  flex-flow: column;\n}\n\n:host(.show-month-and-year) .datetime-year {\n  display: flex;\n}\n\n/**\n * Safari 14 has an issue where a scroll event\n * is incorrectly fired when unhiding the calendar content.\n * To workaround this, we set the opacity\n * of the content to 0 and hide it offscreen.\n *\n * -webkit-named-image is something only WebKit supports\n * so we use this to detect general WebKit support.\n * aspect-ratio is only supported in Safari 15+\n * so by checking lack of aspect-ratio support, we know\n * that we are in a pre-Safari 15 browser.\n *\n * TODO(FW-554): Remove when iOS 14 support is dropped.\n */\n@supports (background: -webkit-named-image(apple-pay-logo-black)) and (not (aspect-ratio: 1/1)) {\n  :host(.show-month-and-year) .calendar-next-prev,\n:host(.show-month-and-year) .calendar-days-of-week,\n:host(.show-month-and-year) .calendar-body,\n:host(.show-month-and-year) .datetime-time {\n    left: -99999px;\n    position: absolute;\n    /**\n     * Use visibility instead of\n     * opacity to ensure element\n     * cannot receive focus\n     */\n    visibility: hidden;\n    pointer-events: none;\n  }\n  :host-context([dir=rtl]):host(.show-month-and-year) .calendar-next-prev, :host-context([dir=rtl]).show-month-and-year .calendar-next-prev, :host-context([dir=rtl]):host(.show-month-and-year) .calendar-days-of-week, :host-context([dir=rtl]).show-month-and-year .calendar-days-of-week, :host-context([dir=rtl]):host(.show-month-and-year) .calendar-body, :host-context([dir=rtl]).show-month-and-year .calendar-body, :host-context([dir=rtl]):host(.show-month-and-year) .datetime-time, :host-context([dir=rtl]).show-month-and-year .datetime-time {\n    left: unset;\n    right: unset;\n    right: -99999px;\n  }\n}\n/**\n * This support check two cases:\n * 1. A WebKit browser that supports aspect-ratio (Safari 15+)\n * 2. Any non-WebKit browser.\n * Note that just overriding this display: none is not\n * sufficient to resolve the issue mentioned above, which\n * is why we do another set of @supports checks.\n */\n@supports (not (background: -webkit-named-image(apple-pay-logo-black))) or ((background: -webkit-named-image(apple-pay-logo-black)) and (aspect-ratio: 1/1)) {\n  :host(.show-month-and-year) .calendar-next-prev,\n:host(.show-month-and-year) .calendar-days-of-week,\n:host(.show-month-and-year) .calendar-body,\n:host(.show-month-and-year) .datetime-time {\n    display: none;\n  }\n}\n:host(.month-year-picker-open) .datetime-footer {\n  display: none;\n}\n\n:host(.datetime-readonly),\n:host(.datetime-disabled) {\n  pointer-events: none;\n}\n\n:host(.datetime-disabled) {\n  opacity: 0.4;\n}\n\n/**\n * Title should not wrap\n * to the next line and should\n * show ellipsis instead.\n */\n:host .datetime-header .datetime-title {\n  text-overflow: ellipsis;\n  white-space: nowrap;\n  overflow: hidden;\n}\n\n:host .datetime-action-buttons.has-clear-button {\n  width: 100%;\n}\n\n:host .datetime-action-buttons ion-buttons {\n  display: flex;\n  justify-content: space-between;\n}\n\n/**\n * Date/Year button should be on\n * the opposite side of the component\n * as the Next/Prev buttons\n */\n:host .calendar-action-buttons {\n  display: flex;\n  justify-content: space-between;\n}\n\n:host .calendar-action-buttons ion-item,\n:host .calendar-action-buttons ion-button {\n  --background: translucent;\n}\n\n:host .calendar-action-buttons ion-item ion-label {\n  display: flex;\n  align-items: center;\n}\n\n:host .calendar-action-buttons ion-item ion-icon {\n  padding-left: 4px;\n  padding-right: 0;\n  padding-top: 0;\n  padding-bottom: 0;\n}\n@supports (margin-inline-start: 0) or (-webkit-margin-start: 0) {\n  :host .calendar-action-buttons ion-item ion-icon {\n    padding-left: unset;\n    padding-right: unset;\n    -webkit-padding-start: 4px;\n    padding-inline-start: 4px;\n    -webkit-padding-end: 0;\n    padding-inline-end: 0;\n  }\n}\n\n:host .calendar-days-of-week {\n  display: grid;\n  grid-template-columns: repeat(7, 1fr);\n  text-align: center;\n}\n\n:host .calendar-body {\n  /**\n   * Show all calendar months inline\n   * and allow them to take up 100% of\n   * the free space. Do not use CSS Grid\n   * here as there are issues with nested grid\n   * on older browsers.\n   */\n  display: flex;\n  flex-grow: 1;\n  scroll-snap-type: x mandatory;\n  /**\n   * Need to explicitly set overflow-y: hidden\n   * for older implementations of scroll snapping.\n   */\n  overflow-x: scroll;\n  overflow-y: hidden;\n  scrollbar-width: none;\n  /**\n   * Hide blue outline on calendar body\n   * when it is focused.\n   */\n  outline: none;\n}\n\n:host .calendar-body .calendar-month {\n  /**\n   * Swiping should snap to at\n   * most one month at a time.\n   */\n  scroll-snap-align: start;\n  scroll-snap-stop: always;\n  flex-shrink: 0;\n  width: 100%;\n}\n\n:host .calendar-body .calendar-month-disabled {\n  /**\n   * Disables swipe gesture snapping for scroll-snap containers\n   */\n  scroll-snap-align: none;\n}\n\n/**\n * Hide scrollbars on Chrome and Safari\n */\n:host .calendar-body::-webkit-scrollbar {\n  display: none;\n}\n\n:host .calendar-body .calendar-month-grid {\n  /**\n   * Create 7 columns for\n   * 7 days in a week.\n   */\n  display: grid;\n  grid-template-columns: repeat(7, 1fr);\n}\n\n/**\n * Center the day text vertically\n * and horizontally within its grid cell.\n */\n:host .calendar-day {\n  padding-left: 0px;\n  padding-right: 0px;\n  padding-top: 0px;\n  padding-bottom: 0px;\n  margin-left: 0px;\n  margin-right: 0px;\n  margin-top: 0px;\n  margin-bottom: 0px;\n  display: flex;\n  position: relative;\n  align-items: center;\n  justify-content: center;\n  border: none;\n  outline: none;\n  background: none;\n  color: currentColor;\n  font-family: var(--ion-font-family, inherit);\n  cursor: pointer;\n  appearance: none;\n  z-index: 0;\n}\n@supports (margin-inline-start: 0) or (-webkit-margin-start: 0) {\n  :host .calendar-day {\n    padding-left: unset;\n    padding-right: unset;\n    -webkit-padding-start: 0px;\n    padding-inline-start: 0px;\n    -webkit-padding-end: 0px;\n    padding-inline-end: 0px;\n  }\n}\n@supports (margin-inline-start: 0) or (-webkit-margin-start: 0) {\n  :host .calendar-day {\n    margin-left: unset;\n    margin-right: unset;\n    -webkit-margin-start: 0px;\n    margin-inline-start: 0px;\n    -webkit-margin-end: 0px;\n    margin-inline-end: 0px;\n  }\n}\n\n:host .calendar-day[disabled] {\n  pointer-events: none;\n  opacity: 0.4;\n}\n\n.calendar-day-highlight {\n  border-radius: 32px;\n  padding-left: 4px;\n  padding-right: 4px;\n  padding-top: 4px;\n  padding-bottom: 4px;\n  position: absolute;\n  width: 32px;\n  height: 32px;\n  z-index: -1;\n}\n@supports (margin-inline-start: 0) or (-webkit-margin-start: 0) {\n  .calendar-day-highlight {\n    padding-left: unset;\n    padding-right: unset;\n    -webkit-padding-start: 4px;\n    padding-inline-start: 4px;\n    -webkit-padding-end: 4px;\n    padding-inline-end: 4px;\n  }\n}\n\n:host .datetime-time {\n  display: flex;\n  justify-content: space-between;\n}\n\n:host(.datetime-presentation-time) .datetime-time {\n  padding-left: 0;\n  padding-right: 0;\n  padding-top: 0;\n  padding-bottom: 0;\n}\n\n:host ion-popover {\n  --height: 200px;\n}\n\n:host .time-header {\n  display: flex;\n  align-items: center;\n}\n\n:host .time-body {\n  border-radius: 8px;\n  padding-left: 12px;\n  padding-right: 12px;\n  padding-top: 6px;\n  padding-bottom: 6px;\n  display: flex;\n  border: none;\n  background: var(--ion-color-step-300, #edeef0);\n  color: var(--ion-text-color, #000);\n  font-family: inherit;\n  font-size: inherit;\n  cursor: pointer;\n  appearance: none;\n}\n@supports (margin-inline-start: 0) or (-webkit-margin-start: 0) {\n  :host .time-body {\n    padding-left: unset;\n    padding-right: unset;\n    -webkit-padding-start: 12px;\n    padding-inline-start: 12px;\n    -webkit-padding-end: 12px;\n    padding-inline-end: 12px;\n  }\n}\n\n:host .time-body-active {\n  color: var(--ion-color-base);\n}\n\n:host(.in-item) {\n  position: static;\n}\n\n:host(.show-month-and-year) .calendar-action-buttons ion-item {\n  --color: var(--ion-color-base);\n}\n\n:host {\n  --background: var(--ion-color-light, #ffffff);\n  --background-rgb: var(--ion-color-light-rgb);\n  --title-color: var(--ion-color-step-600, #666666);\n}\n\n:host(.datetime-presentation-date-time:not(.datetime-prefer-wheel)),\n:host(.datetime-presentation-time-date:not(.datetime-prefer-wheel)),\n:host(.datetime-presentation-date:not(.datetime-prefer-wheel)) {\n  min-height: 350px;\n}\n\n:host .datetime-header {\n  padding-left: 16px;\n  padding-right: 16px;\n  padding-top: 16px;\n  padding-bottom: 16px;\n  border-bottom: 0.55px solid var(--ion-color-step-200, #cccccc);\n  font-size: 14px;\n}\n@supports (margin-inline-start: 0) or (-webkit-margin-start: 0) {\n  :host .datetime-header {\n    padding-left: unset;\n    padding-right: unset;\n    -webkit-padding-start: 16px;\n    padding-inline-start: 16px;\n    -webkit-padding-end: 16px;\n    padding-inline-end: 16px;\n  }\n}\n\n:host .datetime-header .datetime-title {\n  color: var(--title-color);\n}\n\n:host .datetime-header .datetime-selected-date {\n  margin-top: 10px;\n}\n:host .calendar-action-buttons ion-item {\n  --padding-start: 16px;\n  --background-hover: transparent;\n  --background-activated: transparent;\n  font-size: 16px;\n  font-weight: 600;\n}\n\n:host .calendar-action-buttons ion-item ion-icon,\n:host .calendar-action-buttons ion-buttons ion-button {\n  color: var(--ion-color-base);\n}\n\n:host .calendar-action-buttons ion-buttons {\n  padding-left: 0;\n  padding-right: 0;\n  padding-top: 8px;\n  padding-bottom: 0;\n}\n\n:host .calendar-action-buttons ion-buttons ion-button {\n  margin-left: 0;\n  margin-right: 0;\n  margin-top: 0;\n  margin-bottom: 0;\n}\n\n:host .calendar-days-of-week {\n  padding-left: 8px;\n  padding-right: 8px;\n  padding-top: 0;\n  padding-bottom: 0;\n  color: var(--ion-color-step-300, #b3b3b3);\n  font-size: 12px;\n  font-weight: 600;\n  line-height: 24px;\n  text-transform: uppercase;\n}\n@supports (margin-inline-start: 0) or (-webkit-margin-start: 0) {\n  :host .calendar-days-of-week {\n    padding-left: unset;\n    padding-right: unset;\n    -webkit-padding-start: 8px;\n    padding-inline-start: 8px;\n    -webkit-padding-end: 8px;\n    padding-inline-end: 8px;\n  }\n}\n\n:host .calendar-body .calendar-month .calendar-month-grid {\n  /**\n   * We need to apply the padding to\n   * each month grid item otherwise\n   * older versions of WebKit will consider\n   * this padding a snapping point if applied\n   * on .calendar-month\n   */\n  padding-left: 8px;\n  padding-right: 8px;\n  padding-top: 8px;\n  padding-bottom: 8px;\n  height: calc(100% - 16px);\n}\n@supports (margin-inline-start: 0) or (-webkit-margin-start: 0) {\n  :host .calendar-body .calendar-month .calendar-month-grid {\n    padding-left: unset;\n    padding-right: unset;\n    -webkit-padding-start: 8px;\n    padding-inline-start: 8px;\n    -webkit-padding-end: 8px;\n    padding-inline-end: 8px;\n  }\n}\n\n:host .calendar-day {\n  font-size: 20px;\n}\n\n.calendar-day:focus .calendar-day-highlight,\n.calendar-day.calendar-day-active .calendar-day-highlight {\n  opacity: 0.2;\n}\n\n.calendar-day.calendar-day-active .calendar-day-highlight {\n  background: var(--ion-color-base);\n}\n\n.calendar-day:focus .calendar-day-highlight {\n  /* stylelint-disable-next-line declaration-no-important */\n  background: var(--ion-color-base) !important;\n}\n\n/**\n * Day that today but not selected\n * should have ion-color for text color.\n */\n:host .calendar-day.calendar-day-today {\n  color: var(--ion-color-base);\n}\n\n/**\n * Day that is not today but\n * is selected should have ion-color for\n * text color and be bolder.\n */\n:host .calendar-day.calendar-day-active {\n  color: var(--ion-color-base);\n  font-weight: 600;\n}\n\n/**\n * Day that is selected and is today\n * should have white color.\n */\n:host .calendar-day.calendar-day-today.calendar-day-active {\n  color: var(--ion-color-contrast);\n}\n\n.calendar-day.calendar-day-today.calendar-day-active .calendar-day-highlight {\n  background: var(--ion-color-base);\n  opacity: 1;\n}\n\n:host .datetime-time {\n  padding-left: 16px;\n  padding-right: 16px;\n  padding-top: 8px;\n  padding-bottom: 16px;\n  font-size: 16px;\n}\n@supports (margin-inline-start: 0) or (-webkit-margin-start: 0) {\n  :host .datetime-time {\n    padding-left: unset;\n    padding-right: unset;\n    -webkit-padding-start: 16px;\n    padding-inline-start: 16px;\n    -webkit-padding-end: 16px;\n    padding-inline-end: 16px;\n  }\n}\n\n:host .datetime-time .time-header {\n  font-weight: 600;\n}\n\n:host .datetime-buttons {\n  padding-left: 8px;\n  padding-right: 8px;\n  padding-top: 8px;\n  padding-bottom: 8px;\n  border-top: 0.55px solid var(--ion-color-step-200, #cccccc);\n}\n@supports (margin-inline-start: 0) or (-webkit-margin-start: 0) {\n  :host .datetime-buttons {\n    padding-left: unset;\n    padding-right: unset;\n    -webkit-padding-start: 8px;\n    padding-inline-start: 8px;\n    -webkit-padding-end: 8px;\n    padding-inline-end: 8px;\n  }\n}\n\n:host .datetime-buttons ::slotted(ion-buttons),\n:host .datetime-buttons ion-buttons {\n  display: flex;\n  align-items: center;\n  justify-content: space-between;\n}\n\n:host .datetime-action-buttons {\n  width: 100%;\n}",":host {\n  /**\n   * @prop --background: The primary background of the datetime component.\n   * @prop --background-rgb: The primary background of the datetime component in RGB format.\n   * @prop --title-color: The text color of the title.\n   */\n  display: flex;\n  flex-flow: column;\n  background: var(--background);\n  overflow: hidden;\n}\n\n/**\n * When using the wheel picker to switch\n * between months, sometimes the allowed\n * dates may be filtered. As a result, it\n * is possible to get a layout shift as\n * the picker column will shrink to fit the\n * widest item in the column. Setting a minimum\n * width avoids this layout shifting.\n */\nion-picker-column-internal {\n  min-width: 26px;\n}\n\n:host(.datetime-size-fixed) {\n  width: auto;\n  height: auto;\n}\n\n:host(.datetime-size-fixed:not(.datetime-prefer-wheel)) {\n  max-width: 350px;\n}\n\n/**\n * This ensures that the picker is apppropriately\n * sized and never truncates the text.\n */\n:host(.datetime-size-fixed.datetime-prefer-wheel) {\n  min-width: 350px;\n  max-width: max-content;\n}\n\n:host(.datetime-size-cover) {\n  width: 100%;\n}\n\n:host .calendar-body,\n:host .datetime-year {\n  opacity: 0;\n}\n\n:host(:not(.datetime-ready)) .datetime-year {\n  position: absolute;\n  pointer-events: none;\n}\n\n:host(.datetime-ready) .calendar-body {\n  opacity: 1;\n}\n\n:host(.datetime-ready) .datetime-year {\n  display: none;\n  opacity: 1;\n}\n\n/**\n * Changing the physical order of the\n * picker columns in the DOM is added\n * work, so we just use `order` instead.\n *\n * The picker automatically configures\n * the text alignment, so when switching\n * the order we need to manually switch\n * the text alignment too.\n */\n:host .wheel-order-year-first .day-column {\n  order: 3;\n  text-align: end;\n}\n\n:host .wheel-order-year-first .month-column {\n  order: 2;\n  text-align: end;\n}\n\n:host .wheel-order-year-first .year-column {\n  order: 1;\n  text-align: start;\n}\n\n/**\n * This allows the calendar to take\n * up 100% of the remaining height.\n * On iOS, if there are more than\n * 5 rows of dates, the dates should\n * be resized to fit into this\n * container.\n */\n:host .datetime-calendar,\n:host .datetime-year {\n  display: flex;\n  flex: 1 1 auto;\n  flex-flow: column;\n}\n\n:host(.show-month-and-year) .datetime-year {\n  display: flex;\n}\n\n/**\n * Safari 14 has an issue where a scroll event\n * is incorrectly fired when unhiding the calendar content.\n * To workaround this, we set the opacity\n * of the content to 0 and hide it offscreen.\n *\n * -webkit-named-image is something only WebKit supports\n * so we use this to detect general WebKit support.\n * aspect-ratio is only supported in Safari 15+\n * so by checking lack of aspect-ratio support, we know\n * that we are in a pre-Safari 15 browser.\n *\n * TODO(FW-554): Remove when iOS 14 support is dropped.\n */\n@supports (background: -webkit-named-image(apple-pay-logo-black)) and (not (aspect-ratio: 1/1)) {\n  :host(.show-month-and-year) .calendar-next-prev,\n:host(.show-month-and-year) .calendar-days-of-week,\n:host(.show-month-and-year) .calendar-body,\n:host(.show-month-and-year) .datetime-time {\n    left: -99999px;\n    position: absolute;\n    /**\n     * Use visibility instead of\n     * opacity to ensure element\n     * cannot receive focus\n     */\n    visibility: hidden;\n    pointer-events: none;\n  }\n  :host-context([dir=rtl]):host(.show-month-and-year) .calendar-next-prev, :host-context([dir=rtl]).show-month-and-year .calendar-next-prev, :host-context([dir=rtl]):host(.show-month-and-year) .calendar-days-of-week, :host-context([dir=rtl]).show-month-and-year .calendar-days-of-week, :host-context([dir=rtl]):host(.show-month-and-year) .calendar-body, :host-context([dir=rtl]).show-month-and-year .calendar-body, :host-context([dir=rtl]):host(.show-month-and-year) .datetime-time, :host-context([dir=rtl]).show-month-and-year .datetime-time {\n    left: unset;\n    right: unset;\n    right: -99999px;\n  }\n}\n/**\n * This support check two cases:\n * 1. A WebKit browser that supports aspect-ratio (Safari 15+)\n * 2. Any non-WebKit browser.\n * Note that just overriding this display: none is not\n * sufficient to resolve the issue mentioned above, which\n * is why we do another set of @supports checks.\n */\n@supports (not (background: -webkit-named-image(apple-pay-logo-black))) or ((background: -webkit-named-image(apple-pay-logo-black)) and (aspect-ratio: 1/1)) {\n  :host(.show-month-and-year) .calendar-next-prev,\n:host(.show-month-and-year) .calendar-days-of-week,\n:host(.show-month-and-year) .calendar-body,\n:host(.show-month-and-year) .datetime-time {\n    display: none;\n  }\n}\n:host(.month-year-picker-open) .datetime-footer {\n  display: none;\n}\n\n:host(.datetime-readonly),\n:host(.datetime-disabled) {\n  pointer-events: none;\n}\n\n:host(.datetime-disabled) {\n  opacity: 0.4;\n}\n\n/**\n * Title should not wrap\n * to the next line and should\n * show ellipsis instead.\n */\n:host .datetime-header .datetime-title {\n  text-overflow: ellipsis;\n  white-space: nowrap;\n  overflow: hidden;\n}\n\n:host .datetime-action-buttons.has-clear-button {\n  width: 100%;\n}\n\n:host .datetime-action-buttons ion-buttons {\n  display: flex;\n  justify-content: space-between;\n}\n\n/**\n * Date/Year button should be on\n * the opposite side of the component\n * as the Next/Prev buttons\n */\n:host .calendar-action-buttons {\n  display: flex;\n  justify-content: space-between;\n}\n\n:host .calendar-action-buttons ion-item,\n:host .calendar-action-buttons ion-button {\n  --background: translucent;\n}\n\n:host .calendar-action-buttons ion-item ion-label {\n  display: flex;\n  align-items: center;\n}\n\n:host .calendar-action-buttons ion-item ion-icon {\n  padding-left: 4px;\n  padding-right: 0;\n  padding-top: 0;\n  padding-bottom: 0;\n}\n@supports (margin-inline-start: 0) or (-webkit-margin-start: 0) {\n  :host .calendar-action-buttons ion-item ion-icon {\n    padding-left: unset;\n    padding-right: unset;\n    -webkit-padding-start: 4px;\n    padding-inline-start: 4px;\n    -webkit-padding-end: 0;\n    padding-inline-end: 0;\n  }\n}\n\n:host .calendar-days-of-week {\n  display: grid;\n  grid-template-columns: repeat(7, 1fr);\n  text-align: center;\n}\n\n:host .calendar-body {\n  /**\n   * Show all calendar months inline\n   * and allow them to take up 100% of\n   * the free space. Do not use CSS Grid\n   * here as there are issues with nested grid\n   * on older browsers.\n   */\n  display: flex;\n  flex-grow: 1;\n  scroll-snap-type: x mandatory;\n  /**\n   * Need to explicitly set overflow-y: hidden\n   * for older implementations of scroll snapping.\n   */\n  overflow-x: scroll;\n  overflow-y: hidden;\n  scrollbar-width: none;\n  /**\n   * Hide blue outline on calendar body\n   * when it is focused.\n   */\n  outline: none;\n}\n\n:host .calendar-body .calendar-month {\n  /**\n   * Swiping should snap to at\n   * most one month at a time.\n   */\n  scroll-snap-align: start;\n  scroll-snap-stop: always;\n  flex-shrink: 0;\n  width: 100%;\n}\n\n:host .calendar-body .calendar-month-disabled {\n  /**\n   * Disables swipe gesture snapping for scroll-snap containers\n   */\n  scroll-snap-align: none;\n}\n\n/**\n * Hide scrollbars on Chrome and Safari\n */\n:host .calendar-body::-webkit-scrollbar {\n  display: none;\n}\n\n:host .calendar-body .calendar-month-grid {\n  /**\n   * Create 7 columns for\n   * 7 days in a week.\n   */\n  display: grid;\n  grid-template-columns: repeat(7, 1fr);\n}\n\n/**\n * Center the day text vertically\n * and horizontally within its grid cell.\n */\n:host .calendar-day {\n  padding-left: 0px;\n  padding-right: 0px;\n  padding-top: 0px;\n  padding-bottom: 0px;\n  margin-left: 0px;\n  margin-right: 0px;\n  margin-top: 0px;\n  margin-bottom: 0px;\n  display: flex;\n  position: relative;\n  align-items: center;\n  justify-content: center;\n  border: none;\n  outline: none;\n  background: none;\n  color: currentColor;\n  font-family: var(--ion-font-family, inherit);\n  cursor: pointer;\n  appearance: none;\n  z-index: 0;\n}\n@supports (margin-inline-start: 0) or (-webkit-margin-start: 0) {\n  :host .calendar-day {\n    padding-left: unset;\n    padding-right: unset;\n    -webkit-padding-start: 0px;\n    padding-inline-start: 0px;\n    -webkit-padding-end: 0px;\n    padding-inline-end: 0px;\n  }\n}\n@supports (margin-inline-start: 0) or (-webkit-margin-start: 0) {\n  :host .calendar-day {\n    margin-left: unset;\n    margin-right: unset;\n    -webkit-margin-start: 0px;\n    margin-inline-start: 0px;\n    -webkit-margin-end: 0px;\n    margin-inline-end: 0px;\n  }\n}\n\n:host .calendar-day[disabled] {\n  pointer-events: none;\n  opacity: 0.4;\n}\n\n.calendar-day-highlight {\n  border-radius: 32px;\n  padding-left: 4px;\n  padding-right: 4px;\n  padding-top: 4px;\n  padding-bottom: 4px;\n  position: absolute;\n  width: 32px;\n  height: 32px;\n  z-index: -1;\n}\n@supports (margin-inline-start: 0) or (-webkit-margin-start: 0) {\n  .calendar-day-highlight {\n    padding-left: unset;\n    padding-right: unset;\n    -webkit-padding-start: 4px;\n    padding-inline-start: 4px;\n    -webkit-padding-end: 4px;\n    padding-inline-end: 4px;\n  }\n}\n\n:host .datetime-time {\n  display: flex;\n  justify-content: space-between;\n}\n\n:host(.datetime-presentation-time) .datetime-time {\n  padding-left: 0;\n  padding-right: 0;\n  padding-top: 0;\n  padding-bottom: 0;\n}\n\n:host ion-popover {\n  --height: 200px;\n}\n\n:host .time-header {\n  display: flex;\n  align-items: center;\n}\n\n:host .time-body {\n  border-radius: 8px;\n  padding-left: 12px;\n  padding-right: 12px;\n  padding-top: 6px;\n  padding-bottom: 6px;\n  display: flex;\n  border: none;\n  background: var(--ion-color-step-300, #edeef0);\n  color: var(--ion-text-color, #000);\n  font-family: inherit;\n  font-size: inherit;\n  cursor: pointer;\n  appearance: none;\n}\n@supports (margin-inline-start: 0) or (-webkit-margin-start: 0) {\n  :host .time-body {\n    padding-left: unset;\n    padding-right: unset;\n    -webkit-padding-start: 12px;\n    padding-inline-start: 12px;\n    -webkit-padding-end: 12px;\n    padding-inline-end: 12px;\n  }\n}\n\n:host .time-body-active {\n  color: var(--ion-color-base);\n}\n\n:host(.in-item) {\n  position: static;\n}\n\n:host(.show-month-and-year) .calendar-action-buttons ion-item {\n  --color: var(--ion-color-base);\n}\n\n:host {\n  --background: var(--ion-color-step-100, #ffffff);\n  --title-color: var(--ion-color-contrast);\n}\n\n:host .datetime-header {\n  padding-left: 20px;\n  padding-right: 20px;\n  padding-top: 20px;\n  padding-bottom: 20px;\n  background: var(--ion-color-base);\n  color: var(--title-color);\n}\n@supports (margin-inline-start: 0) or (-webkit-margin-start: 0) {\n  :host .datetime-header {\n    padding-left: unset;\n    padding-right: unset;\n    -webkit-padding-start: 20px;\n    padding-inline-start: 20px;\n    -webkit-padding-end: 20px;\n    padding-inline-end: 20px;\n  }\n}\n\n:host .datetime-header .datetime-title {\n  font-size: 12px;\n  text-transform: uppercase;\n}\n\n:host .datetime-header .datetime-selected-date {\n  margin-top: 30px;\n  font-size: 34px;\n}\n:host .datetime-calendar .calendar-action-buttons ion-item {\n  --padding-start: 20px;\n}\n\n:host .calendar-action-buttons ion-item,\n:host .calendar-action-buttons ion-button {\n  color: var(--ion-color-step-650, #595959);\n}\n\n:host .calendar-days-of-week {\n  padding-left: 10px;\n  padding-right: 10px;\n  padding-top: 0px;\n  padding-bottom: 0px;\n  color: var(--ion-color-step-500, gray);\n  font-size: 14px;\n  line-height: 36px;\n}\n@supports (margin-inline-start: 0) or (-webkit-margin-start: 0) {\n  :host .calendar-days-of-week {\n    padding-left: unset;\n    padding-right: unset;\n    -webkit-padding-start: 10px;\n    padding-inline-start: 10px;\n    -webkit-padding-end: 10px;\n    padding-inline-end: 10px;\n  }\n}\n\n:host .calendar-body .calendar-month .calendar-month-grid {\n  padding-left: 10px;\n  padding-right: 10px;\n  padding-top: 4px;\n  padding-bottom: 4px;\n  /**\n   * Calendar on MD will show an empty row\n   * if not enough dates to fill 6th row.\n   * Calendar on iOS fits all dates into\n   * a fixed number of rows and resizes\n   * if necessary.\n   */\n  grid-template-rows: repeat(6, 1fr);\n}\n@supports (margin-inline-start: 0) or (-webkit-margin-start: 0) {\n  :host .calendar-body .calendar-month .calendar-month-grid {\n    padding-left: unset;\n    padding-right: unset;\n    -webkit-padding-start: 10px;\n    padding-inline-start: 10px;\n    -webkit-padding-end: 10px;\n    padding-inline-end: 10px;\n  }\n}\n\n:host .calendar-day {\n  padding-left: 0px;\n  padding-right: 0;\n  padding-top: 13px;\n  padding-bottom: 13px;\n  font-size: 14px;\n}\n@supports (margin-inline-start: 0) or (-webkit-margin-start: 0) {\n  :host .calendar-day {\n    padding-left: unset;\n    padding-right: unset;\n    -webkit-padding-start: 0px;\n    padding-inline-start: 0px;\n    -webkit-padding-end: 0;\n    padding-inline-end: 0;\n  }\n}\n\n.calendar-day:focus .calendar-day-highlight {\n  background: rgba(var(--ion-color-base-rgb), 0.2);\n  box-shadow: 0px 0px 0px 4px rgba(var(--ion-color-base-rgb), 0.2);\n}\n\n/**\n * Day that today but not selected\n * should have ion-color for text color.\n */\n:host .calendar-day.calendar-day-today {\n  color: var(--ion-color-base);\n}\n\n.calendar-day.calendar-day-today .calendar-day-highlight {\n  border: 1px solid var(--ion-color-base);\n}\n\n/**\n * Day that is not today but\n * is selected should have ion-color for\n * text color and be bolder.\n */\n:host .calendar-day.calendar-day-active {\n  color: var(--ion-color-contrast);\n}\n\n.calendar-day.calendar-day-active .calendar-day-highlight {\n  border: 1px solid var(--ion-color-base);\n  background: var(--ion-color-base);\n}\n\n:host .datetime-time {\n  padding-left: 16px;\n  padding-right: 16px;\n  padding-top: 8px;\n  padding-bottom: 8px;\n}\n@supports (margin-inline-start: 0) or (-webkit-margin-start: 0) {\n  :host .datetime-time {\n    padding-left: unset;\n    padding-right: unset;\n    -webkit-padding-start: 16px;\n    padding-inline-start: 16px;\n    -webkit-padding-end: 16px;\n    padding-inline-end: 16px;\n  }\n}\n\n:host .time-header {\n  color: var(--ion-color-step-650, #595959);\n}\n\n/**\n * Add some margin when only selecting month/year\n * otherwise layout will too constricted.\n */\n:host(.datetime-presentation-month) .datetime-year,\n:host(.datetime-presentation-year) .datetime-year,\n:host(.datetime-presentation-month-year) .datetime-year {\n  margin-top: 20px;\n  margin-bottom: 20px;\n}\n:host .datetime-buttons {\n  padding-left: 10px;\n  padding-right: 10px;\n  padding-top: 10px;\n  padding-bottom: 10px;\n  display: flex;\n  align-items: center;\n  justify-content: flex-end;\n}\n@supports (margin-inline-start: 0) or (-webkit-margin-start: 0) {\n  :host .datetime-buttons {\n    padding-left: unset;\n    padding-right: unset;\n    -webkit-padding-start: 10px;\n    padding-inline-start: 10px;\n    -webkit-padding-end: 10px;\n    padding-inline-end: 10px;\n  }\n}\n\n:host .datetime-view-buttons ion-button {\n  color: var(--ion-color-step-800, #333333);\n}","/*!\n * (C) Ionic http://ionicframework.com - MIT License\n */\nimport { Host, h, writeTask } from '@stencil/core';\nimport { caretDownSharp, caretUpSharp, chevronBack, chevronDown, chevronForward } from 'ionicons/icons';\nimport { getIonMode } from '../../global/ionic-global';\nimport { startFocusVisible } from '../../utils/focus-visible';\nimport { getElementRoot, raf, renderHiddenInput } from '../../utils/helpers';\nimport { printIonError, printIonWarning } from '../../utils/logging';\nimport { isRTL } from '../../utils/rtl';\nimport { createColorClasses } from '../../utils/theme';\nimport { isSameDay, warnIfValueOutOfBounds, isBefore, isAfter } from './utils/comparison';\nimport { generateMonths, getDaysOfMonth, getDaysOfWeek, getToday, getMonthColumnData, getDayColumnData, getYearColumnData, getTimeColumnsData, getCombinedDateColumnData, } from './utils/data';\nimport { formatValue, getLocalizedTime, getMonthAndDay, getMonthAndYear } from './utils/format';\nimport { is24Hour, isLocaleDayPeriodRTL, isMonthFirstLocale, getNumDaysInMonth } from './utils/helpers';\nimport { calculateHourFromAMPM, convertDataToISO, getClosestValidDate, getEndOfWeek, getNextDay, getNextMonth, getNextWeek, getNextYear, getPreviousDay, getPreviousMonth, getPreviousWeek, getPreviousYear, getStartOfWeek, validateParts, } from './utils/manipulation';\nimport { clampDate, convertToArrayOfNumbers, getPartsFromCalendarDay, parseAmPm, parseDate, parseMaxParts, parseMinParts, } from './utils/parse';\nimport { getCalendarDayState, getHighlightStyles, isDayDisabled, isMonthDisabled, isNextMonthDisabled, isPrevMonthDisabled, } from './utils/state';\n/**\n * @virtualProp {\"ios\" | \"md\"} mode - The mode determines which platform styles to use.\n *\n * @slot title - The title of the datetime.\n * @slot buttons - The buttons in the datetime.\n * @slot time-label - The label for the time selector in the datetime.\n */\nexport class Datetime {\n  constructor() {\n    this.inputId = `ion-dt-${datetimeIds++}`;\n    this.prevPresentation = null;\n    /**\n     * Duplicate reference to `activeParts` that does not trigger a re-render of the component.\n     * Allows caching an instance of the `activeParts` in between render cycles.\n     */\n    this.activePartsClone = [];\n    this.showMonthAndYear = false;\n    this.activeParts = [];\n    this.workingParts = {\n      month: 5,\n      day: 28,\n      year: 2021,\n      hour: 13,\n      minute: 52,\n      ampm: 'pm',\n    };\n    this.isPresented = false;\n    this.isTimePopoverOpen = false;\n    /**\n     * The color to use from your application's color palette.\n     * Default options are: `\"primary\"`, `\"secondary\"`, `\"tertiary\"`, `\"success\"`, `\"warning\"`, `\"danger\"`, `\"light\"`, `\"medium\"`, and `\"dark\"`.\n     * For more information on colors, see [theming](/docs/theming/basics).\n     */\n    this.color = 'primary';\n    /**\n     * The name of the control, which is submitted with the form data.\n     */\n    this.name = this.inputId;\n    /**\n     * If `true`, the user cannot interact with the datetime.\n     */\n    this.disabled = false;\n    /**\n     * If `true`, the datetime appears normal but is not interactive.\n     */\n    this.readonly = false;\n    /**\n     * Which values you want to select. `'date'` will show\n     * a calendar picker to select the month, day, and year. `'time'`\n     * will show a time picker to select the hour, minute, and (optionally)\n     * AM/PM. `'date-time'` will show the date picker first and time picker second.\n     * `'time-date'` will show the time picker first and date picker second.\n     */\n    this.presentation = 'date-time';\n    /**\n     * The text to display on the picker's cancel button.\n     */\n    this.cancelText = 'Cancel';\n    /**\n     * The text to display on the picker's \"Done\" button.\n     */\n    this.doneText = 'Done';\n    /**\n     * The text to display on the picker's \"Clear\" button.\n     */\n    this.clearText = 'Clear';\n    /**\n     * The locale to use for `ion-datetime`. This\n     * impacts month and day name formatting.\n     * The `'default'` value refers to the default\n     * locale set by your device.\n     */\n    this.locale = 'default';\n    /**\n     * The first day of the week to use for `ion-datetime`. The\n     * default value is `0` and represents Sunday.\n     */\n    this.firstDayOfWeek = 0;\n    /**\n     * If `true`, multiple dates can be selected at once. Only\n     * applies to `presentation=\"date\"` and `preferWheel=\"false\"`.\n     */\n    this.multiple = false;\n    /**\n     * If `true`, a header will be shown above the calendar\n     * picker. This will include both the slotted title, and\n     * the selected date.\n     */\n    this.showDefaultTitle = false;\n    /**\n     * If `true`, the default \"Cancel\" and \"OK\" buttons\n     * will be rendered at the bottom of the `ion-datetime`\n     * component. Developers can also use the `button` slot\n     * if they want to customize these buttons. If custom\n     * buttons are set in the `button` slot then the\n     * default buttons will not be rendered.\n     */\n    this.showDefaultButtons = false;\n    /**\n     * If `true`, a \"Clear\" button will be rendered alongside\n     * the default \"Cancel\" and \"OK\" buttons at the bottom of the `ion-datetime`\n     * component. Developers can also use the `button` slot\n     * if they want to customize these buttons. If custom\n     * buttons are set in the `button` slot then the\n     * default buttons will not be rendered.\n     */\n    this.showClearButton = false;\n    /**\n     * If `true`, the default \"Time\" label will be rendered\n     * for the time selector of the `ion-datetime` component.\n     * Developers can also use the `time-label` slot\n     * if they want to customize this label. If a custom\n     * label is set in the `time-label` slot then the\n     * default label will not be rendered.\n     */\n    this.showDefaultTimeLabel = true;\n    /**\n     * If `cover`, the `ion-datetime` will expand to cover the full width of its container.\n     * If `fixed`, the `ion-datetime` will have a fixed width.\n     */\n    this.size = 'fixed';\n    /**\n     * If `true`, a wheel picker will be rendered instead of a calendar grid\n     * where possible. If `false`, a calendar grid will be rendered instead of\n     * a wheel picker where possible.\n     *\n     * A wheel picker can be rendered instead of a grid when `presentation` is\n     * one of the following values: `'date'`, `'date-time'`, or `'time-date'`.\n     *\n     * A wheel picker will always be rendered regardless of\n     * the `preferWheel` value when `presentation` is one of the following values:\n     * `'time'`, `'month'`, `'month-year'`, or `'year'`.\n     */\n    this.preferWheel = false;\n    /**\n     * Returns the DatetimePart interface\n     * to use when rendering an initial set of\n     * data. This should be used when rendering an\n     * interface in an environment where the `value`\n     * may not be set. This function works\n     * by returning the first selected date in\n     * \"activePartsClone\" and then falling back to\n     * defaultParts if no active date is selected.\n     */\n    this.getActivePartsWithFallback = () => {\n      var _a;\n      const { defaultParts } = this;\n      return (_a = this.getActivePart()) !== null && _a !== void 0 ? _a : defaultParts;\n    };\n    this.getActivePart = () => {\n      const { activePartsClone } = this;\n      return Array.isArray(activePartsClone) ? activePartsClone[0] : activePartsClone;\n    };\n    this.closeParentOverlay = () => {\n      const popoverOrModal = this.el.closest('ion-modal, ion-popover');\n      if (popoverOrModal) {\n        popoverOrModal.dismiss();\n      }\n    };\n    this.setWorkingParts = (parts) => {\n      this.workingParts = Object.assign({}, parts);\n    };\n    this.setActiveParts = (parts, removeDate = false) => {\n      const { multiple, minParts, maxParts, activePartsClone } = this;\n      /**\n       * When setting the active parts, it is possible\n       * to set invalid data. For example,\n       * when updating January 31 to February,\n       * February 31 does not exist. As a result\n       * we need to validate the active parts and\n       * ensure that we are only setting valid dates.\n       * Additionally, we need to update the working parts\n       * too in the event that the validated parts are different.\n       */\n      const validatedParts = validateParts(parts, minParts, maxParts);\n      this.setWorkingParts(validatedParts);\n      if (multiple) {\n        /**\n         * We read from activePartsClone here because valueChanged() only updates that,\n         * so it's the more reliable source of truth. If we read from activeParts, then\n         * if you click July 1, manually set the value to July 2, and then click July 3,\n         * the new value would be [July 1, July 3], ignoring the value set.\n         *\n         * We can then pass the new value to activeParts (rather than activePartsClone)\n         * since the clone will be updated automatically by activePartsChanged().\n         */\n        const activePartsArray = Array.isArray(activePartsClone) ? activePartsClone : [activePartsClone];\n        if (removeDate) {\n          this.activeParts = activePartsArray.filter((p) => !isSameDay(p, validatedParts));\n        }\n        else {\n          this.activeParts = [...activePartsArray, validatedParts];\n        }\n      }\n      else {\n        this.activeParts = Object.assign({}, validatedParts);\n      }\n      const hasSlottedButtons = this.el.querySelector('[slot=\"buttons\"]') !== null;\n      if (hasSlottedButtons || this.showDefaultButtons) {\n        return;\n      }\n      this.confirm();\n    };\n    this.initializeKeyboardListeners = () => {\n      const calendarBodyRef = this.calendarBodyRef;\n      if (!calendarBodyRef) {\n        return;\n      }\n      const root = this.el.shadowRoot;\n      /**\n       * Get a reference to the month\n       * element we are currently viewing.\n       */\n      const currentMonth = calendarBodyRef.querySelector('.calendar-month:nth-of-type(2)');\n      /**\n       * When focusing the calendar body, we want to pass focus\n       * to the working day, but other days should\n       * only be accessible using the arrow keys. Pressing\n       * Tab should jump between bodies of selectable content.\n       */\n      const checkCalendarBodyFocus = (ev) => {\n        var _a;\n        const record = ev[0];\n        /**\n         * If calendar body was already focused\n         * when this fired or if the calendar body\n         * if not currently focused, we should not re-focus\n         * the inner day.\n         */\n        if (((_a = record.oldValue) === null || _a === void 0 ? void 0 : _a.includes('ion-focused')) || !calendarBodyRef.classList.contains('ion-focused')) {\n          return;\n        }\n        this.focusWorkingDay(currentMonth);\n      };\n      const mo = new MutationObserver(checkCalendarBodyFocus);\n      mo.observe(calendarBodyRef, { attributeFilter: ['class'], attributeOldValue: true });\n      this.destroyKeyboardMO = () => {\n        mo === null || mo === void 0 ? void 0 : mo.disconnect();\n      };\n      /**\n       * We must use keydown not keyup as we want\n       * to prevent scrolling when using the arrow keys.\n       */\n      calendarBodyRef.addEventListener('keydown', (ev) => {\n        const activeElement = root.activeElement;\n        if (!activeElement || !activeElement.classList.contains('calendar-day')) {\n          return;\n        }\n        const parts = getPartsFromCalendarDay(activeElement);\n        let partsToFocus;\n        switch (ev.key) {\n          case 'ArrowDown':\n            ev.preventDefault();\n            partsToFocus = getNextWeek(parts);\n            break;\n          case 'ArrowUp':\n            ev.preventDefault();\n            partsToFocus = getPreviousWeek(parts);\n            break;\n          case 'ArrowRight':\n            ev.preventDefault();\n            partsToFocus = getNextDay(parts);\n            break;\n          case 'ArrowLeft':\n            ev.preventDefault();\n            partsToFocus = getPreviousDay(parts);\n            break;\n          case 'Home':\n            ev.preventDefault();\n            partsToFocus = getStartOfWeek(parts);\n            break;\n          case 'End':\n            ev.preventDefault();\n            partsToFocus = getEndOfWeek(parts);\n            break;\n          case 'PageUp':\n            ev.preventDefault();\n            partsToFocus = ev.shiftKey ? getPreviousYear(parts) : getPreviousMonth(parts);\n            break;\n          case 'PageDown':\n            ev.preventDefault();\n            partsToFocus = ev.shiftKey ? getNextYear(parts) : getNextMonth(parts);\n            break;\n          /**\n           * Do not preventDefault here\n           * as we do not want to override other\n           * browser defaults such as pressing Enter/Space\n           * to select a day.\n           */\n          default:\n            return;\n        }\n        /**\n         * If the day we want to move focus to is\n         * disabled, do not do anything.\n         */\n        if (isDayDisabled(partsToFocus, this.minParts, this.maxParts)) {\n          return;\n        }\n        this.setWorkingParts(Object.assign(Object.assign({}, this.workingParts), partsToFocus));\n        /**\n         * Give view a chance to re-render\n         * then move focus to the new working day\n         */\n        requestAnimationFrame(() => this.focusWorkingDay(currentMonth));\n      });\n    };\n    this.focusWorkingDay = (currentMonth) => {\n      /**\n       * Get the number of padding days so\n       * we know how much to offset our next selector by\n       * to grab the correct calenday-day element.\n       */\n      const padding = currentMonth.querySelectorAll('.calendar-day-padding');\n      const { day } = this.workingParts;\n      if (day === null) {\n        return;\n      }\n      /**\n       * Get the calendar day element\n       * and focus it.\n       */\n      const dayEl = currentMonth.querySelector(`.calendar-day:nth-of-type(${padding.length + day})`);\n      if (dayEl) {\n        dayEl.focus();\n      }\n    };\n    this.processMinParts = () => {\n      const { min, defaultParts } = this;\n      if (min === undefined) {\n        this.minParts = undefined;\n        return;\n      }\n      this.minParts = parseMinParts(min, defaultParts);\n    };\n    this.processMaxParts = () => {\n      const { max, defaultParts } = this;\n      if (max === undefined) {\n        this.maxParts = undefined;\n        return;\n      }\n      this.maxParts = parseMaxParts(max, defaultParts);\n    };\n    this.initializeCalendarListener = () => {\n      const calendarBodyRef = this.calendarBodyRef;\n      if (!calendarBodyRef) {\n        return;\n      }\n      /**\n       * For performance reasons, we only render 3\n       * months at a time: The current month, the previous\n       * month, and the next month. We have a scroll listener\n       * on the calendar body to append/prepend new months.\n       *\n       * We can do this because Stencil is smart enough to not\n       * re-create the .calendar-month containers, but rather\n       * update the content within those containers.\n       *\n       * As an added bonus, WebKit has some troubles with\n       * scroll-snap-stop: always, so not rendering all of\n       * the months in a row allows us to mostly sidestep\n       * that issue.\n       */\n      const months = calendarBodyRef.querySelectorAll('.calendar-month');\n      const startMonth = months[0];\n      const workingMonth = months[1];\n      const endMonth = months[2];\n      const mode = getIonMode(this);\n      const needsiOSRubberBandFix = mode === 'ios' && typeof navigator !== 'undefined' && navigator.maxTouchPoints > 1;\n      /**\n       * Before setting up the scroll listener,\n       * scroll the middle month into view.\n       * scrollIntoView() will scroll entire page\n       * if element is not in viewport. Use scrollLeft instead.\n       */\n      writeTask(() => {\n        calendarBodyRef.scrollLeft = startMonth.clientWidth * (isRTL(this.el) ? -1 : 1);\n        const getChangedMonth = (parts) => {\n          const box = calendarBodyRef.getBoundingClientRect();\n          const root = this.el.shadowRoot;\n          /**\n           * Get the element that is in the center of the calendar body.\n           * This will be an element inside of the active month.\n           */\n          const elementAtCenter = root.elementFromPoint(box.x + box.width / 2, box.y + box.height / 2);\n          /**\n           * If there is no element then the\n           * component may be re-rendering on a slow device.\n           */\n          if (!elementAtCenter)\n            return;\n          const month = elementAtCenter.closest('.calendar-month');\n          if (!month)\n            return;\n          /**\n           * The edge of the month must be lined up with\n           * the edge of the calendar body in order for\n           * the component to update. Otherwise, it\n           * may be the case that the user has paused their\n           * swipe or the browser has not finished snapping yet.\n           * Rather than check if the x values are equal,\n           * we give it a tolerance of 2px to account for\n           * sub pixel rendering.\n           */\n          const monthBox = month.getBoundingClientRect();\n          if (Math.abs(monthBox.x - box.x) > 2)\n            return;\n          /**\n           * From here, we can determine if the start\n           * month or the end month was scrolled into view.\n           * If no month was changed, then we can return from\n           * the scroll callback early.\n           */\n          if (month === startMonth) {\n            return getPreviousMonth(parts);\n          }\n          else if (month === endMonth) {\n            return getNextMonth(parts);\n          }\n          else {\n            return;\n          }\n        };\n        const updateActiveMonth = () => {\n          if (needsiOSRubberBandFix) {\n            calendarBodyRef.style.removeProperty('pointer-events');\n            appliediOSRubberBandFix = false;\n          }\n          /**\n           * If the month did not change\n           * then we can return early.\n           */\n          const newDate = getChangedMonth(this.workingParts);\n          if (!newDate)\n            return;\n          const { month, day, year } = newDate;\n          if (isMonthDisabled({ month, year, day: null }, {\n            minParts: Object.assign(Object.assign({}, this.minParts), { day: null }),\n            maxParts: Object.assign(Object.assign({}, this.maxParts), { day: null }),\n          })) {\n            return;\n          }\n          /**\n           * Prevent scrolling for other browsers\n           * to give the DOM time to update and the container\n           * time to properly snap.\n           */\n          calendarBodyRef.style.setProperty('overflow', 'hidden');\n          /**\n           * Use a writeTask here to ensure\n           * that the state is updated and the\n           * correct month is scrolled into view\n           * in the same frame. This is not\n           * typically a problem on newer devices\n           * but older/slower device may have a flicker\n           * if we did not do this.\n           */\n          writeTask(() => {\n            this.setWorkingParts(Object.assign(Object.assign({}, this.workingParts), { month, day: day, year }));\n            calendarBodyRef.scrollLeft = workingMonth.clientWidth * (isRTL(this.el) ? -1 : 1);\n            calendarBodyRef.style.removeProperty('overflow');\n          });\n        };\n        /**\n         * When the container finishes scrolling we\n         * need to update the DOM with the selected month.\n         */\n        let scrollTimeout;\n        /**\n         * We do not want to attempt to set pointer-events\n         * multiple times within a single swipe gesture as\n         * that adds unnecessary work to the main thread.\n         */\n        let appliediOSRubberBandFix = false;\n        const scrollCallback = () => {\n          if (scrollTimeout) {\n            clearTimeout(scrollTimeout);\n          }\n          /**\n           * On iOS it is possible to quickly rubber band\n           * the scroll area before the scroll timeout has fired.\n           * This results in users reaching the end of the scrollable\n           * container before the DOM has updated.\n           * By setting `pointer-events: none` we can ensure that\n           * subsequent swipes do not happen while the container\n           * is snapping.\n           */\n          if (!appliediOSRubberBandFix && needsiOSRubberBandFix) {\n            calendarBodyRef.style.setProperty('pointer-events', 'none');\n            appliediOSRubberBandFix = true;\n          }\n          // Wait ~3 frames\n          scrollTimeout = setTimeout(updateActiveMonth, 50);\n        };\n        calendarBodyRef.addEventListener('scroll', scrollCallback);\n        this.destroyCalendarListener = () => {\n          calendarBodyRef.removeEventListener('scroll', scrollCallback);\n        };\n      });\n    };\n    /**\n     * Clean up all listeners except for the overlay\n     * listener. This is so that we can re-create the listeners\n     * if the datetime has been hidden/presented by a modal or popover.\n     */\n    this.destroyInteractionListeners = () => {\n      const { destroyCalendarListener, destroyKeyboardMO } = this;\n      if (destroyCalendarListener !== undefined) {\n        destroyCalendarListener();\n      }\n      if (destroyKeyboardMO !== undefined) {\n        destroyKeyboardMO();\n      }\n    };\n    this.processValue = (value) => {\n      /**\n       * TODO FW-2646 remove value !== ''\n       */\n      const hasValue = value !== '' && value !== null && value !== undefined;\n      let valueToProcess = hasValue ? parseDate(value) : this.defaultParts;\n      const { minParts, maxParts, multiple } = this;\n      if (!multiple && Array.isArray(value)) {\n        this.value = value[0];\n        valueToProcess = valueToProcess[0];\n      }\n      /**\n       * Datetime should only warn of out of bounds values\n       * if set by the user. If the `value` is undefined,\n       * we will default to today's date which may be out\n       * of bounds. In this case, the warning makes it look\n       * like the developer did something wrong which is\n       * not true.\n       */\n      if (hasValue) {\n        warnIfValueOutOfBounds(valueToProcess, minParts, maxParts);\n      }\n      /**\n       * If there are multiple values, pick an arbitrary one to clamp to. This way,\n       * if the values are across months, we always show at least one of them. Note\n       * that the values don't necessarily have to be in order.\n       */\n      const singleValue = Array.isArray(valueToProcess) ? valueToProcess[0] : valueToProcess;\n      const { month, day, year, hour, minute, tzOffset } = clampDate(singleValue, minParts, maxParts);\n      const ampm = parseAmPm(hour);\n      this.setWorkingParts({\n        month,\n        day,\n        year,\n        hour,\n        minute,\n        tzOffset,\n        ampm,\n      });\n      /**\n       * Since `activeParts` indicates a value that\n       * been explicitly selected either by the\n       * user or the app, only update `activeParts`\n       * if the `value` property is set.\n       */\n      if (hasValue) {\n        if (Array.isArray(valueToProcess)) {\n          this.activeParts = [...valueToProcess];\n        }\n        else {\n          this.activeParts = {\n            month,\n            day,\n            year,\n            hour,\n            minute,\n            tzOffset,\n            ampm,\n          };\n        }\n      }\n      else {\n        /**\n         * Reset the active parts if the value is not set.\n         * This will clear the selected calendar day when\n         * performing a clear action or using the reset() method.\n         */\n        this.activeParts = [];\n      }\n    };\n    this.onFocus = () => {\n      this.ionFocus.emit();\n    };\n    this.onBlur = () => {\n      this.ionBlur.emit();\n    };\n    this.hasValue = () => {\n      return this.value != null && this.value !== '';\n    };\n    this.nextMonth = () => {\n      const calendarBodyRef = this.calendarBodyRef;\n      if (!calendarBodyRef) {\n        return;\n      }\n      const nextMonth = calendarBodyRef.querySelector('.calendar-month:last-of-type');\n      if (!nextMonth) {\n        return;\n      }\n      const left = nextMonth.offsetWidth * 2;\n      calendarBodyRef.scrollTo({\n        top: 0,\n        left: left * (isRTL(this.el) ? -1 : 1),\n        behavior: 'smooth',\n      });\n    };\n    this.prevMonth = () => {\n      const calendarBodyRef = this.calendarBodyRef;\n      if (!calendarBodyRef) {\n        return;\n      }\n      const prevMonth = calendarBodyRef.querySelector('.calendar-month:first-of-type');\n      if (!prevMonth) {\n        return;\n      }\n      calendarBodyRef.scrollTo({\n        top: 0,\n        left: 0,\n        behavior: 'smooth',\n      });\n    };\n    this.toggleMonthAndYearView = () => {\n      this.showMonthAndYear = !this.showMonthAndYear;\n    };\n  }\n  disabledChanged() {\n    this.emitStyle();\n  }\n  minChanged() {\n    this.processMinParts();\n  }\n  maxChanged() {\n    this.processMaxParts();\n  }\n  yearValuesChanged() {\n    this.parsedYearValues = convertToArrayOfNumbers(this.yearValues);\n  }\n  monthValuesChanged() {\n    this.parsedMonthValues = convertToArrayOfNumbers(this.monthValues);\n  }\n  dayValuesChanged() {\n    this.parsedDayValues = convertToArrayOfNumbers(this.dayValues);\n  }\n  hourValuesChanged() {\n    this.parsedHourValues = convertToArrayOfNumbers(this.hourValues);\n  }\n  minuteValuesChanged() {\n    this.parsedMinuteValues = convertToArrayOfNumbers(this.minuteValues);\n  }\n  activePartsChanged() {\n    this.activePartsClone = this.activeParts;\n  }\n  /**\n   * Update the datetime value when the value changes\n   */\n  valueChanged() {\n    const { value, minParts, maxParts, workingParts, multiple } = this;\n    if (this.hasValue()) {\n      if (!multiple && Array.isArray(value)) {\n        this.value = value[0];\n        return; // setting this.value will trigger re-run of this function\n      }\n      /**\n       * Clones the value of the `activeParts` to the private clone, to update\n       * the date display on the current render cycle without causing another render.\n       *\n       * This allows us to update the current value's date/time display without\n       * refocusing or shifting the user's display (leaves the user in place).\n       */\n      const valueDateParts = parseDate(value);\n      if (valueDateParts) {\n        warnIfValueOutOfBounds(valueDateParts, minParts, maxParts);\n        if (Array.isArray(valueDateParts)) {\n          this.activePartsClone = [...valueDateParts];\n        }\n        else {\n          const { month, day, year, hour, minute } = valueDateParts;\n          const ampm = hour != null ? (hour >= 12 ? 'pm' : 'am') : undefined;\n          this.activePartsClone = Object.assign(Object.assign({}, this.activeParts), { month,\n            day,\n            year,\n            hour,\n            minute,\n            ampm });\n          /**\n           * The working parts am/pm value must be updated when the value changes, to\n           * ensure the time picker hour column values are generated correctly.\n           *\n           * Note that we don't need to do this if valueDateParts is an array, since\n           * multiple=\"true\" does not apply to time pickers.\n           */\n          this.setWorkingParts(Object.assign(Object.assign({}, workingParts), { ampm }));\n        }\n      }\n      else {\n        printIonWarning(`Unable to parse date string: ${value}. Please provide a valid ISO 8601 datetime string.`);\n      }\n    }\n    this.emitStyle();\n    this.ionChange.emit({ value });\n  }\n  /**\n   * Confirms the selected datetime value, updates the\n   * `value` property, and optionally closes the popover\n   * or modal that the datetime was presented in.\n   */\n  async confirm(closeOverlay = false) {\n    const { isCalendarPicker, activeParts } = this;\n    /**\n     * We only update the value if the presentation is not a calendar picker.\n     */\n    if (activeParts !== undefined || !isCalendarPicker) {\n      const activePartsIsArray = Array.isArray(activeParts);\n      if (activePartsIsArray && activeParts.length === 0) {\n        this.value = undefined;\n      }\n      else {\n        /**\n         * Prevent convertDataToISO from doing any\n         * kind of transformation based on timezone\n         * This cancels out any change it attempts to make\n         *\n         * Important: Take the timezone offset based on\n         * the date that is currently selected, otherwise\n         * there can be 1 hr difference when dealing w/ DST\n         */\n        if (activePartsIsArray) {\n          const dates = convertDataToISO(activeParts).map((str) => new Date(str));\n          for (let i = 0; i < dates.length; i++) {\n            activeParts[i].tzOffset = dates[i].getTimezoneOffset() * -1;\n          }\n        }\n        else {\n          const date = new Date(convertDataToISO(activeParts));\n          activeParts.tzOffset = date.getTimezoneOffset() * -1;\n        }\n        this.value = convertDataToISO(activeParts);\n      }\n    }\n    if (closeOverlay) {\n      this.closeParentOverlay();\n    }\n  }\n  /**\n   * Resets the internal state of the datetime but does not update the value.\n   * Passing a valid ISO-8601 string will reset the state of the component to the provided date.\n   * If no value is provided, the internal state will be reset to the clamped value of the min, max and today.\n   */\n  async reset(startDate) {\n    this.processValue(startDate);\n  }\n  /**\n   * Emits the ionCancel event and\n   * optionally closes the popover\n   * or modal that the datetime was\n   * presented in.\n   */\n  async cancel(closeOverlay = false) {\n    this.ionCancel.emit();\n    if (closeOverlay) {\n      this.closeParentOverlay();\n    }\n  }\n  get isCalendarPicker() {\n    const { presentation } = this;\n    return presentation === 'date' || presentation === 'date-time' || presentation === 'time-date';\n  }\n  connectedCallback() {\n    this.clearFocusVisible = startFocusVisible(this.el).destroy;\n  }\n  disconnectedCallback() {\n    if (this.clearFocusVisible) {\n      this.clearFocusVisible();\n      this.clearFocusVisible = undefined;\n    }\n  }\n  initializeListeners() {\n    this.initializeCalendarListener();\n    this.initializeKeyboardListeners();\n  }\n  componentDidLoad() {\n    /**\n     * If a scrollable element is hidden using `display: none`,\n     * it will not have a scroll height meaning we cannot scroll elements\n     * into view. As a result, we will need to wait for the datetime to become\n     * visible if used inside of a modal or a popover otherwise the scrollable\n     * areas will not have the correct values snapped into place.\n     */\n    const visibleCallback = (entries) => {\n      const ev = entries[0];\n      if (!ev.isIntersecting) {\n        return;\n      }\n      this.initializeListeners();\n      /**\n       * TODO FW-2793: Datetime needs a frame to ensure that it\n       * can properly scroll contents into view. As a result\n       * we hide the scrollable content until after that frame\n       * so users do not see the content quickly shifting. The downside\n       * is that the content will pop into view a frame after. Maybe there\n       * is a better way to handle this?\n       */\n      writeTask(() => {\n        this.el.classList.add('datetime-ready');\n      });\n    };\n    const visibleIO = new IntersectionObserver(visibleCallback, { threshold: 0.01 });\n    /**\n     * Use raf to avoid a race condition between the component loading and\n     * its display animation starting (such as when shown in a modal). This\n     * could cause the datetime to start at a visibility of 0, erroneously\n     * triggering the `hiddenIO` observer below.\n     */\n    raf(() => visibleIO === null || visibleIO === void 0 ? void 0 : visibleIO.observe(this.el));\n    /**\n     * We need to clean up listeners when the datetime is hidden\n     * in a popover/modal so that we can properly scroll containers\n     * back into view if they are re-presented. When the datetime is hidden\n     * the scroll areas have scroll widths/heights of 0px, so any snapping\n     * we did originally has been lost.\n     */\n    const hiddenCallback = (entries) => {\n      const ev = entries[0];\n      if (ev.isIntersecting) {\n        return;\n      }\n      this.destroyInteractionListeners();\n      /**\n       * When datetime is hidden, we need to make sure that\n       * the month/year picker is closed. Otherwise,\n       * it will be open when the datetime re-appears\n       * and the scroll area of the calendar grid will be 0.\n       * As a result, the wrong month will be shown.\n       */\n      this.showMonthAndYear = false;\n      writeTask(() => {\n        this.el.classList.remove('datetime-ready');\n      });\n    };\n    const hiddenIO = new IntersectionObserver(hiddenCallback, { threshold: 0 });\n    raf(() => hiddenIO === null || hiddenIO === void 0 ? void 0 : hiddenIO.observe(this.el));\n    /**\n     * Datetime uses Ionic components that emit\n     * ionFocus and ionBlur. These events are\n     * composed meaning they will cross\n     * the shadow dom boundary. We need to\n     * stop propagation on these events otherwise\n     * developers will see 2 ionFocus or 2 ionBlur\n     * events at a time.\n     */\n    const root = getElementRoot(this.el);\n    root.addEventListener('ionFocus', (ev) => ev.stopPropagation());\n    root.addEventListener('ionBlur', (ev) => ev.stopPropagation());\n  }\n  /**\n   * When the presentation is changed, all calendar content is recreated,\n   * so we need to re-init behavior with the new elements.\n   */\n  componentDidRender() {\n    const { presentation, prevPresentation, calendarBodyRef, minParts, preferWheel } = this;\n    /**\n     * TODO(FW-2165)\n     * Remove this when https://bugs.webkit.org/show_bug.cgi?id=235960 is fixed.\n     * When using `min`, we add `scroll-snap-align: none`\n     * to the disabled month so that users cannot scroll to it.\n     * This triggers a bug in WebKit where the scroll position is reset.\n     * Since the month change logic is handled by a scroll listener,\n     * this causes the month to change leading to `scroll-snap-align`\n     * changing again, thus changing the scroll position again and causing\n     * an infinite loop.\n     * This issue only applies to the calendar grid, so we can disable\n     * it if the calendar grid is not being used.\n     */\n    const hasCalendarGrid = !preferWheel && ['date-time', 'time-date', 'date'].includes(presentation);\n    if (minParts !== undefined && hasCalendarGrid && calendarBodyRef) {\n      const workingMonth = calendarBodyRef.querySelector('.calendar-month:nth-of-type(1)');\n      if (workingMonth) {\n        calendarBodyRef.scrollLeft = workingMonth.clientWidth * (isRTL(this.el) ? -1 : 1);\n      }\n    }\n    if (prevPresentation === null) {\n      this.prevPresentation = presentation;\n      return;\n    }\n    if (presentation === prevPresentation) {\n      return;\n    }\n    this.prevPresentation = presentation;\n    this.destroyInteractionListeners();\n    this.initializeListeners();\n    /**\n     * The month/year picker from the date interface\n     * should be closed as it is not available in non-date\n     * interfaces.\n     */\n    this.showMonthAndYear = false;\n    raf(() => {\n      this.ionRender.emit();\n    });\n  }\n  componentWillLoad() {\n    const { el, highlightedDates, multiple, presentation, preferWheel } = this;\n    if (multiple) {\n      if (presentation !== 'date') {\n        printIonWarning('Multiple date selection is only supported for presentation=\"date\".', el);\n      }\n      if (preferWheel) {\n        printIonWarning('Multiple date selection is not supported with preferWheel=\"true\".', el);\n      }\n    }\n    if (highlightedDates !== undefined) {\n      if (presentation !== 'date' && presentation !== 'date-time' && presentation !== 'time-date') {\n        printIonWarning('The highlightedDates property is only supported with the date, date-time, and time-date presentations.', el);\n      }\n      if (preferWheel) {\n        printIonWarning('The highlightedDates property is not supported with preferWheel=\"true\".', el);\n      }\n    }\n    this.processMinParts();\n    this.processMaxParts();\n    const hourValues = (this.parsedHourValues = convertToArrayOfNumbers(this.hourValues));\n    const minuteValues = (this.parsedMinuteValues = convertToArrayOfNumbers(this.minuteValues));\n    const monthValues = (this.parsedMonthValues = convertToArrayOfNumbers(this.monthValues));\n    const yearValues = (this.parsedYearValues = convertToArrayOfNumbers(this.yearValues));\n    const dayValues = (this.parsedDayValues = convertToArrayOfNumbers(this.dayValues));\n    const todayParts = (this.todayParts = parseDate(getToday()));\n    this.defaultParts = getClosestValidDate(todayParts, monthValues, dayValues, yearValues, hourValues, minuteValues);\n    this.processValue(this.value);\n    this.emitStyle();\n  }\n  emitStyle() {\n    this.ionStyle.emit({\n      interactive: true,\n      datetime: true,\n      'interactive-disabled': this.disabled,\n    });\n  }\n  /**\n   * Universal render methods\n   * These are pieces of datetime that\n   * are rendered independently of presentation.\n   */\n  renderFooter() {\n    const { showDefaultButtons, showClearButton } = this;\n    const hasSlottedButtons = this.el.querySelector('[slot=\"buttons\"]') !== null;\n    if (!hasSlottedButtons && !showDefaultButtons && !showClearButton) {\n      return;\n    }\n    const clearButtonClick = () => {\n      this.reset();\n      this.value = undefined;\n    };\n    /**\n     * By default we render two buttons:\n     * Cancel - Dismisses the datetime and\n     * does not update the `value` prop.\n     * OK - Dismisses the datetime and\n     * updates the `value` prop.\n     */\n    return (h(\"div\", { class: \"datetime-footer\" }, h(\"div\", { class: \"datetime-buttons\" }, h(\"div\", { class: {\n        ['datetime-action-buttons']: true,\n        ['has-clear-button']: this.showClearButton,\n      } }, h(\"slot\", { name: \"buttons\" }, h(\"ion-buttons\", null, showDefaultButtons && (h(\"ion-button\", { id: \"cancel-button\", color: this.color, onClick: () => this.cancel(true) }, this.cancelText)), h(\"div\", null, showClearButton && (h(\"ion-button\", { id: \"clear-button\", color: this.color, onClick: () => clearButtonClick() }, this.clearText)), showDefaultButtons && (h(\"ion-button\", { id: \"confirm-button\", color: this.color, onClick: () => this.confirm(true) }, this.doneText)))))))));\n  }\n  /**\n   * Wheel picker render methods\n   */\n  renderWheelPicker(forcePresentation = this.presentation) {\n    /**\n     * If presentation=\"time-date\" we switch the\n     * order of the render array here instead of\n     * manually reordering each date/time picker\n     * column with CSS. This allows for additional\n     * flexibility if we need to render subsets\n     * of the date/time data or do additional ordering\n     * within the child render functions.\n     */\n    const renderArray = forcePresentation === 'time-date'\n      ? [this.renderTimePickerColumns(forcePresentation), this.renderDatePickerColumns(forcePresentation)]\n      : [this.renderDatePickerColumns(forcePresentation), this.renderTimePickerColumns(forcePresentation)];\n    return h(\"ion-picker-internal\", null, renderArray);\n  }\n  renderDatePickerColumns(forcePresentation) {\n    return forcePresentation === 'date-time' || forcePresentation === 'time-date'\n      ? this.renderCombinedDatePickerColumn()\n      : this.renderIndividualDatePickerColumns(forcePresentation);\n  }\n  renderCombinedDatePickerColumn() {\n    const { defaultParts, workingParts, locale, minParts, maxParts, todayParts, isDateEnabled } = this;\n    const activePart = this.getActivePartsWithFallback();\n    /**\n     * By default, generate a range of 3 months:\n     * Previous month, current month, and next month\n     */\n    const monthsToRender = generateMonths(workingParts);\n    const lastMonth = monthsToRender[monthsToRender.length - 1];\n    /**\n     * Ensure that users can select the entire window of dates.\n     */\n    monthsToRender[0].day = 1;\n    lastMonth.day = getNumDaysInMonth(lastMonth.month, lastMonth.year);\n    /**\n     * Narrow the dates rendered based on min/max dates (if any).\n     * The `min` date is used if the min is after the generated min month.\n     * The `max` date is used if the max is before the generated max month.\n     * This ensures that the sliding window always stays at 3 months\n     * but still allows future dates to be lazily rendered based on any min/max\n     * constraints.\n     */\n    const min = minParts !== undefined && isAfter(minParts, monthsToRender[0]) ? minParts : monthsToRender[0];\n    const max = maxParts !== undefined && isBefore(maxParts, lastMonth) ? maxParts : lastMonth;\n    const result = getCombinedDateColumnData(locale, todayParts, min, max, this.parsedDayValues, this.parsedMonthValues);\n    let items = result.items;\n    const parts = result.parts;\n    if (isDateEnabled) {\n      items = items.map((itemObject, index) => {\n        const referenceParts = parts[index];\n        let disabled;\n        try {\n          /**\n           * The `isDateEnabled` implementation is try-catch wrapped\n           * to prevent exceptions in the user's function from\n           * interrupting the calendar rendering.\n           */\n          disabled = !isDateEnabled(convertDataToISO(referenceParts));\n        }\n        catch (e) {\n          printIonError('Exception thrown from provided `isDateEnabled` function. Please check your function and try again.', e);\n        }\n        return Object.assign(Object.assign({}, itemObject), { disabled });\n      });\n    }\n    /**\n     * If we have selected a day already, then default the column\n     * to that value. Otherwise, set it to the default date.\n     */\n    const todayString = workingParts.day !== null\n      ? `${workingParts.year}-${workingParts.month}-${workingParts.day}`\n      : `${defaultParts.year}-${defaultParts.month}-${defaultParts.day}`;\n    return (h(\"ion-picker-column-internal\", { class: \"date-column\", color: this.color, items: items, value: todayString, onIonChange: (ev) => {\n        // TODO(FW-1823) Remove this when iOS 14 support is dropped.\n        // Due to a Safari 14 issue we need to destroy\n        // the scroll listener before we update state\n        // and trigger a re-render.\n        if (this.destroyCalendarListener) {\n          this.destroyCalendarListener();\n        }\n        const { value } = ev.detail;\n        const findPart = parts.find(({ month, day, year }) => value === `${year}-${month}-${day}`);\n        this.setWorkingParts(Object.assign(Object.assign({}, workingParts), findPart));\n        this.setActiveParts(Object.assign(Object.assign({}, activePart), findPart));\n        // We can re-attach the scroll listener after\n        // the working parts have been updated.\n        this.initializeCalendarListener();\n        ev.stopPropagation();\n      } }));\n  }\n  renderIndividualDatePickerColumns(forcePresentation) {\n    const { workingParts, isDateEnabled } = this;\n    const shouldRenderMonths = forcePresentation !== 'year' && forcePresentation !== 'time';\n    const months = shouldRenderMonths\n      ? getMonthColumnData(this.locale, workingParts, this.minParts, this.maxParts, this.parsedMonthValues)\n      : [];\n    const shouldRenderDays = forcePresentation === 'date';\n    let days = shouldRenderDays\n      ? getDayColumnData(this.locale, workingParts, this.minParts, this.maxParts, this.parsedDayValues)\n      : [];\n    if (isDateEnabled) {\n      days = days.map((dayObject) => {\n        const { value } = dayObject;\n        const valueNum = typeof value === 'string' ? parseInt(value) : value;\n        const referenceParts = {\n          month: workingParts.month,\n          day: valueNum,\n          year: workingParts.year,\n        };\n        let disabled;\n        try {\n          /**\n           * The `isDateEnabled` implementation is try-catch wrapped\n           * to prevent exceptions in the user's function from\n           * interrupting the calendar rendering.\n           */\n          disabled = !isDateEnabled(convertDataToISO(referenceParts));\n        }\n        catch (e) {\n          printIonError('Exception thrown from provided `isDateEnabled` function. Please check your function and try again.', e);\n        }\n        return Object.assign(Object.assign({}, dayObject), { disabled });\n      });\n    }\n    const shouldRenderYears = forcePresentation !== 'month' && forcePresentation !== 'time';\n    const years = shouldRenderYears\n      ? getYearColumnData(this.locale, this.defaultParts, this.minParts, this.maxParts, this.parsedYearValues)\n      : [];\n    /**\n     * Certain locales show the day before the month.\n     */\n    const showMonthFirst = isMonthFirstLocale(this.locale, { month: 'numeric', day: 'numeric' });\n    let renderArray = [];\n    if (showMonthFirst) {\n      renderArray = [\n        this.renderMonthPickerColumn(months),\n        this.renderDayPickerColumn(days),\n        this.renderYearPickerColumn(years),\n      ];\n    }\n    else {\n      renderArray = [\n        this.renderDayPickerColumn(days),\n        this.renderMonthPickerColumn(months),\n        this.renderYearPickerColumn(years),\n      ];\n    }\n    return renderArray;\n  }\n  renderDayPickerColumn(days) {\n    var _a;\n    if (days.length === 0) {\n      return [];\n    }\n    const { workingParts } = this;\n    const activePart = this.getActivePartsWithFallback();\n    return (h(\"ion-picker-column-internal\", { class: \"day-column\", color: this.color, items: days, value: (_a = (workingParts.day !== null ? workingParts.day : this.defaultParts.day)) !== null && _a !== void 0 ? _a : undefined, onIonChange: (ev) => {\n        // TODO(FW-1823) Remove this when iOS 14 support is dropped.\n        // Due to a Safari 14 issue we need to destroy\n        // the scroll listener before we update state\n        // and trigger a re-render.\n        if (this.destroyCalendarListener) {\n          this.destroyCalendarListener();\n        }\n        this.setWorkingParts(Object.assign(Object.assign({}, workingParts), { day: ev.detail.value }));\n        this.setActiveParts(Object.assign(Object.assign({}, activePart), { day: ev.detail.value }));\n        // We can re-attach the scroll listener after\n        // the working parts have been updated.\n        this.initializeCalendarListener();\n        ev.stopPropagation();\n      } }));\n  }\n  renderMonthPickerColumn(months) {\n    if (months.length === 0) {\n      return [];\n    }\n    const { workingParts } = this;\n    const activePart = this.getActivePartsWithFallback();\n    return (h(\"ion-picker-column-internal\", { class: \"month-column\", color: this.color, items: months, value: workingParts.month, onIonChange: (ev) => {\n        // TODO(FW-1823) Remove this when iOS 14 support is dropped.\n        // Due to a Safari 14 issue we need to destroy\n        // the scroll listener before we update state\n        // and trigger a re-render.\n        if (this.destroyCalendarListener) {\n          this.destroyCalendarListener();\n        }\n        this.setWorkingParts(Object.assign(Object.assign({}, workingParts), { month: ev.detail.value }));\n        this.setActiveParts(Object.assign(Object.assign({}, activePart), { month: ev.detail.value }));\n        // We can re-attach the scroll listener after\n        // the working parts have been updated.\n        this.initializeCalendarListener();\n        ev.stopPropagation();\n      } }));\n  }\n  renderYearPickerColumn(years) {\n    if (years.length === 0) {\n      return [];\n    }\n    const { workingParts } = this;\n    const activePart = this.getActivePartsWithFallback();\n    return (h(\"ion-picker-column-internal\", { class: \"year-column\", color: this.color, items: years, value: workingParts.year, onIonChange: (ev) => {\n        // TODO(FW-1823) Remove this when iOS 14 support is dropped.\n        // Due to a Safari 14 issue we need to destroy\n        // the scroll listener before we update state\n        // and trigger a re-render.\n        if (this.destroyCalendarListener) {\n          this.destroyCalendarListener();\n        }\n        this.setWorkingParts(Object.assign(Object.assign({}, workingParts), { year: ev.detail.value }));\n        this.setActiveParts(Object.assign(Object.assign({}, activePart), { year: ev.detail.value }));\n        // We can re-attach the scroll listener after\n        // the working parts have been updated.\n        this.initializeCalendarListener();\n        ev.stopPropagation();\n      } }));\n  }\n  renderTimePickerColumns(forcePresentation) {\n    if (['date', 'month', 'month-year', 'year'].includes(forcePresentation)) {\n      return [];\n    }\n    /**\n     * If a user has not selected a date,\n     * then we should show all times. If the\n     * user has selected a date (even if it has\n     * not been confirmed yet), we should apply\n     * the max and min restrictions so that the\n     * time picker shows values that are\n     * appropriate for the selected date.\n     */\n    const activePart = this.getActivePart();\n    const userHasSelectedDate = activePart !== undefined;\n    const { hoursData, minutesData, dayPeriodData } = getTimeColumnsData(this.locale, this.workingParts, this.hourCycle, userHasSelectedDate ? this.minParts : undefined, userHasSelectedDate ? this.maxParts : undefined, this.parsedHourValues, this.parsedMinuteValues);\n    return [\n      this.renderHourPickerColumn(hoursData),\n      this.renderMinutePickerColumn(minutesData),\n      this.renderDayPeriodPickerColumn(dayPeriodData),\n    ];\n  }\n  renderHourPickerColumn(hoursData) {\n    const { workingParts } = this;\n    if (hoursData.length === 0)\n      return [];\n    const activePart = this.getActivePartsWithFallback();\n    return (h(\"ion-picker-column-internal\", { color: this.color, value: activePart.hour, items: hoursData, numericInput: true, onIonChange: (ev) => {\n        this.setWorkingParts(Object.assign(Object.assign({}, workingParts), { hour: ev.detail.value }));\n        this.setActiveParts(Object.assign(Object.assign({}, activePart), { hour: ev.detail.value }));\n        ev.stopPropagation();\n      } }));\n  }\n  renderMinutePickerColumn(minutesData) {\n    const { workingParts } = this;\n    if (minutesData.length === 0)\n      return [];\n    const activePart = this.getActivePartsWithFallback();\n    return (h(\"ion-picker-column-internal\", { color: this.color, value: activePart.minute, items: minutesData, numericInput: true, onIonChange: (ev) => {\n        this.setWorkingParts(Object.assign(Object.assign({}, workingParts), { minute: ev.detail.value }));\n        this.setActiveParts(Object.assign(Object.assign({}, activePart), { minute: ev.detail.value }));\n        ev.stopPropagation();\n      } }));\n  }\n  renderDayPeriodPickerColumn(dayPeriodData) {\n    const { workingParts } = this;\n    if (dayPeriodData.length === 0) {\n      return [];\n    }\n    const activePart = this.getActivePartsWithFallback();\n    const isDayPeriodRTL = isLocaleDayPeriodRTL(this.locale);\n    return (h(\"ion-picker-column-internal\", { style: isDayPeriodRTL ? { order: '-1' } : {}, color: this.color, value: activePart.ampm, items: dayPeriodData, onIonChange: (ev) => {\n        const hour = calculateHourFromAMPM(workingParts, ev.detail.value);\n        this.setWorkingParts(Object.assign(Object.assign({}, workingParts), { ampm: ev.detail.value, hour }));\n        this.setActiveParts(Object.assign(Object.assign({}, activePart), { ampm: ev.detail.value, hour }));\n        ev.stopPropagation();\n      } }));\n  }\n  renderWheelView(forcePresentation) {\n    const { locale } = this;\n    const showMonthFirst = isMonthFirstLocale(locale);\n    const columnOrder = showMonthFirst ? 'month-first' : 'year-first';\n    return (h(\"div\", { class: {\n        [`wheel-order-${columnOrder}`]: true,\n      } }, this.renderWheelPicker(forcePresentation)));\n  }\n  /**\n   * Grid Render Methods\n   */\n  renderCalendarHeader(mode) {\n    const expandedIcon = mode === 'ios' ? chevronDown : caretUpSharp;\n    const collapsedIcon = mode === 'ios' ? chevronForward : caretDownSharp;\n    const prevMonthDisabled = isPrevMonthDisabled(this.workingParts, this.minParts, this.maxParts);\n    const nextMonthDisabled = isNextMonthDisabled(this.workingParts, this.maxParts);\n    // don't use the inheritAttributes util because it removes dir from the host, and we still need that\n    const hostDir = this.el.getAttribute('dir') || undefined;\n    return (h(\"div\", { class: \"calendar-header\" }, h(\"div\", { class: \"calendar-action-buttons\" }, h(\"div\", { class: \"calendar-month-year\" }, h(\"ion-item\", { button: true, detail: false, lines: \"none\", onClick: () => this.toggleMonthAndYearView() }, h(\"ion-label\", null, getMonthAndYear(this.locale, this.workingParts), h(\"ion-icon\", { \"aria-hidden\": \"true\", icon: this.showMonthAndYear ? expandedIcon : collapsedIcon, lazy: false, flipRtl: true })))), h(\"div\", { class: \"calendar-next-prev\" }, h(\"ion-buttons\", null, h(\"ion-button\", { \"aria-label\": \"previous month\", disabled: prevMonthDisabled, onClick: () => this.prevMonth() }, h(\"ion-icon\", { dir: hostDir, \"aria-hidden\": \"true\", slot: \"icon-only\", icon: chevronBack, lazy: false, flipRtl: true })), h(\"ion-button\", { \"aria-label\": \"next month\", disabled: nextMonthDisabled, onClick: () => this.nextMonth() }, h(\"ion-icon\", { dir: hostDir, \"aria-hidden\": \"true\", slot: \"icon-only\", icon: chevronForward, lazy: false, flipRtl: true }))))), h(\"div\", { class: \"calendar-days-of-week\", \"aria-hidden\": \"true\" }, getDaysOfWeek(this.locale, mode, this.firstDayOfWeek % 7).map((d) => {\n      return h(\"div\", { class: \"day-of-week\" }, d);\n    }))));\n  }\n  renderMonth(month, year) {\n    const yearAllowed = this.parsedYearValues === undefined || this.parsedYearValues.includes(year);\n    const monthAllowed = this.parsedMonthValues === undefined || this.parsedMonthValues.includes(month);\n    const isCalMonthDisabled = !yearAllowed || !monthAllowed;\n    const swipeDisabled = isMonthDisabled({\n      month,\n      year,\n      day: null,\n    }, {\n      // The day is not used when checking if a month is disabled.\n      // Users should be able to access the min or max month, even if the\n      // min/max date is out of bounds (e.g. min is set to Feb 15, Feb should not be disabled).\n      minParts: Object.assign(Object.assign({}, this.minParts), { day: null }),\n      maxParts: Object.assign(Object.assign({}, this.maxParts), { day: null }),\n    });\n    // The working month should never have swipe disabled.\n    // Otherwise the CSS scroll snap will not work and the user\n    // can free-scroll the calendar.\n    const isWorkingMonth = this.workingParts.month === month && this.workingParts.year === year;\n    const activePart = this.getActivePartsWithFallback();\n    return (h(\"div\", { \"aria-hidden\": !isWorkingMonth ? 'true' : null, class: {\n        'calendar-month': true,\n        // Prevents scroll snap swipe gestures for months outside of the min/max bounds\n        'calendar-month-disabled': !isWorkingMonth && swipeDisabled,\n      } }, h(\"div\", { class: \"calendar-month-grid\" }, getDaysOfMonth(month, year, this.firstDayOfWeek % 7).map((dateObject, index) => {\n      const { day, dayOfWeek } = dateObject;\n      const { el, highlightedDates, isDateEnabled, multiple } = this;\n      const referenceParts = { month, day, year };\n      const isCalendarPadding = day === null;\n      const { isActive, isToday, ariaLabel, ariaSelected, disabled, text } = getCalendarDayState(this.locale, referenceParts, this.activePartsClone, this.todayParts, this.minParts, this.maxParts, this.parsedDayValues);\n      const dateIsoString = convertDataToISO(referenceParts);\n      let isCalDayDisabled = isCalMonthDisabled || disabled;\n      if (!isCalDayDisabled && isDateEnabled !== undefined) {\n        try {\n          /**\n           * The `isDateEnabled` implementation is try-catch wrapped\n           * to prevent exceptions in the user's function from\n           * interrupting the calendar rendering.\n           */\n          isCalDayDisabled = !isDateEnabled(dateIsoString);\n        }\n        catch (e) {\n          printIonError('Exception thrown from provided `isDateEnabled` function. Please check your function and try again.', el, e);\n        }\n      }\n      let dateStyle = undefined;\n      /**\n       * Custom highlight styles should not override the style for selected dates,\n       * nor apply to \"filler days\" at the start of the grid.\n       */\n      if (highlightedDates !== undefined && !isActive && day !== null) {\n        dateStyle = getHighlightStyles(highlightedDates, dateIsoString, el);\n      }\n      return (h(\"button\", { tabindex: \"-1\", \"data-day\": day, \"data-month\": month, \"data-year\": year, \"data-index\": index, \"data-day-of-week\": dayOfWeek, disabled: isCalDayDisabled, class: {\n          'calendar-day-padding': isCalendarPadding,\n          'calendar-day': true,\n          'calendar-day-active': isActive,\n          'calendar-day-today': isToday,\n        }, style: dateStyle && {\n          color: dateStyle.textColor,\n        }, \"aria-hidden\": isCalendarPadding ? 'true' : null, \"aria-selected\": ariaSelected, \"aria-label\": ariaLabel, onClick: () => {\n          if (isCalendarPadding) {\n            return;\n          }\n          this.setWorkingParts(Object.assign(Object.assign({}, this.workingParts), { month,\n            day,\n            year }));\n          // multiple only needs date info, so we can wipe out other fields like time\n          if (multiple) {\n            this.setActiveParts({\n              month,\n              day,\n              year,\n            }, isActive);\n          }\n          else {\n            this.setActiveParts(Object.assign(Object.assign({}, activePart), { month,\n              day,\n              year }));\n          }\n        } }, h(\"div\", { class: \"calendar-day-highlight\", style: {\n          backgroundColor: dateStyle === null || dateStyle === void 0 ? void 0 : dateStyle.backgroundColor,\n        } }), text));\n    }))));\n  }\n  renderCalendarBody() {\n    return (h(\"div\", { class: \"calendar-body ion-focusable\", ref: (el) => (this.calendarBodyRef = el), tabindex: \"0\" }, generateMonths(this.workingParts).map(({ month, year }) => {\n      return this.renderMonth(month, year);\n    })));\n  }\n  renderCalendar(mode) {\n    return (h(\"div\", { class: \"datetime-calendar\", key: \"datetime-calendar\" }, this.renderCalendarHeader(mode), this.renderCalendarBody()));\n  }\n  renderTimeLabel() {\n    const hasSlottedTimeLabel = this.el.querySelector('[slot=\"time-label\"]') !== null;\n    if (!hasSlottedTimeLabel && !this.showDefaultTimeLabel) {\n      return;\n    }\n    return h(\"slot\", { name: \"time-label\" }, \"Time\");\n  }\n  renderTimeOverlay() {\n    const use24Hour = is24Hour(this.locale, this.hourCycle);\n    const activePart = this.getActivePartsWithFallback();\n    return [\n      h(\"div\", { class: \"time-header\" }, this.renderTimeLabel()),\n      h(\"button\", { class: {\n          'time-body': true,\n          'time-body-active': this.isTimePopoverOpen,\n        }, \"aria-expanded\": \"false\", \"aria-haspopup\": \"true\", onClick: async (ev) => {\n          const { popoverRef } = this;\n          if (popoverRef) {\n            this.isTimePopoverOpen = true;\n            popoverRef.present(new CustomEvent('ionShadowTarget', {\n              detail: {\n                ionShadowTarget: ev.target,\n              },\n            }));\n            await popoverRef.onWillDismiss();\n            this.isTimePopoverOpen = false;\n          }\n        } }, getLocalizedTime(this.locale, activePart, use24Hour)),\n      h(\"ion-popover\", { alignment: \"center\", translucent: true, overlayIndex: 1, arrow: false, onWillPresent: (ev) => {\n          /**\n           * Intersection Observers do not consistently fire between Blink and Webkit\n           * when toggling the visibility of the popover and trying to scroll the picker\n           * column to the correct time value.\n           *\n           * This will correctly scroll the element position to the correct time value,\n           * before the popover is fully presented.\n           */\n          const cols = ev.target.querySelectorAll('ion-picker-column-internal');\n          // TODO (FW-615): Potentially remove this when intersection observers are fixed in picker column\n          cols.forEach((col) => col.scrollActiveItemIntoView());\n        }, style: {\n          '--offset-y': '-10px',\n          '--min-width': 'fit-content',\n        },\n        // Allow native browser keyboard events to support up/down/home/end key\n        // navigation within the time picker.\n        keyboardEvents: true, ref: (el) => (this.popoverRef = el) }, this.renderWheelPicker('time')),\n    ];\n  }\n  getHeaderSelectedDateText() {\n    const { activeParts, multiple, titleSelectedDatesFormatter } = this;\n    const isArray = Array.isArray(activeParts);\n    let headerText;\n    if (multiple && isArray && activeParts.length !== 1) {\n      headerText = `${activeParts.length} days`; // default/fallback for multiple selection\n      if (titleSelectedDatesFormatter !== undefined) {\n        try {\n          headerText = titleSelectedDatesFormatter(convertDataToISO(activeParts));\n        }\n        catch (e) {\n          printIonError('Exception in provided `titleSelectedDatesFormatter`: ', e);\n        }\n      }\n    }\n    else {\n      // for exactly 1 day selected (multiple set or not), show a formatted version of that\n      headerText = getMonthAndDay(this.locale, this.getActivePartsWithFallback());\n    }\n    return headerText;\n  }\n  renderHeader(showExpandedHeader = true) {\n    const hasSlottedTitle = this.el.querySelector('[slot=\"title\"]') !== null;\n    if (!hasSlottedTitle && !this.showDefaultTitle) {\n      return;\n    }\n    return (h(\"div\", { class: \"datetime-header\" }, h(\"div\", { class: \"datetime-title\" }, h(\"slot\", { name: \"title\" }, \"Select Date\")), showExpandedHeader && h(\"div\", { class: \"datetime-selected-date\" }, this.getHeaderSelectedDateText())));\n  }\n  /**\n   * Render time picker inside of datetime.\n   * Do not pass color prop to segment on\n   * iOS mode. MD segment has been customized and\n   * should take on the color prop, but iOS\n   * should just be the default segment.\n   */\n  renderTime() {\n    const { presentation } = this;\n    const timeOnlyPresentation = presentation === 'time';\n    return (h(\"div\", { class: \"datetime-time\" }, timeOnlyPresentation ? this.renderWheelPicker() : this.renderTimeOverlay()));\n  }\n  /**\n   * Renders the month/year picker that is\n   * displayed on the calendar grid.\n   * The .datetime-year class has additional\n   * styles that let us show/hide the\n   * picker when the user clicks on the\n   * toggle in the calendar header.\n   */\n  renderCalendarViewMonthYearPicker() {\n    return h(\"div\", { class: \"datetime-year\" }, this.renderWheelView('month-year'));\n  }\n  /**\n   * Render entry point\n   * All presentation types are rendered from here.\n   */\n  renderDatetime(mode) {\n    const { presentation, preferWheel } = this;\n    /**\n     * Certain presentation types have separate grid and wheel displays.\n     * If preferWheel is true then we should show a wheel picker instead.\n     */\n    const hasWheelVariant = presentation === 'date' || presentation === 'date-time' || presentation === 'time-date';\n    if (preferWheel && hasWheelVariant) {\n      return [this.renderHeader(false), this.renderWheelView(), this.renderFooter()];\n    }\n    switch (presentation) {\n      case 'date-time':\n        return [\n          this.renderHeader(),\n          this.renderCalendar(mode),\n          this.renderCalendarViewMonthYearPicker(),\n          this.renderTime(),\n          this.renderFooter(),\n        ];\n      case 'time-date':\n        return [\n          this.renderHeader(),\n          this.renderTime(),\n          this.renderCalendar(mode),\n          this.renderCalendarViewMonthYearPicker(),\n          this.renderFooter(),\n        ];\n      case 'time':\n        return [this.renderHeader(false), this.renderTime(), this.renderFooter()];\n      case 'month':\n      case 'month-year':\n      case 'year':\n        return [this.renderHeader(false), this.renderWheelView(), this.renderFooter()];\n      default:\n        return [\n          this.renderHeader(),\n          this.renderCalendar(mode),\n          this.renderCalendarViewMonthYearPicker(),\n          this.renderFooter(),\n        ];\n    }\n  }\n  render() {\n    const { name, value, disabled, el, color, isPresented, readonly, showMonthAndYear, preferWheel, presentation, size, } = this;\n    const mode = getIonMode(this);\n    const isMonthAndYearPresentation = presentation === 'year' || presentation === 'month' || presentation === 'month-year';\n    const shouldShowMonthAndYear = showMonthAndYear || isMonthAndYearPresentation;\n    const monthYearPickerOpen = showMonthAndYear && !isMonthAndYearPresentation;\n    const hasDatePresentation = presentation === 'date' || presentation === 'date-time' || presentation === 'time-date';\n    const hasWheelVariant = hasDatePresentation && preferWheel;\n    const hasGrid = hasDatePresentation && !preferWheel;\n    renderHiddenInput(true, el, name, formatValue(value), disabled);\n    return (h(Host, { \"aria-disabled\": disabled ? 'true' : null, onFocus: this.onFocus, onBlur: this.onBlur, class: Object.assign({}, createColorClasses(color, {\n        [mode]: true,\n        ['datetime-presented']: isPresented,\n        ['datetime-readonly']: readonly,\n        ['datetime-disabled']: disabled,\n        'show-month-and-year': shouldShowMonthAndYear,\n        'month-year-picker-open': monthYearPickerOpen,\n        [`datetime-presentation-${presentation}`]: true,\n        [`datetime-size-${size}`]: true,\n        [`datetime-prefer-wheel`]: hasWheelVariant,\n        [`datetime-grid`]: hasGrid,\n      })) }, this.renderDatetime(mode)));\n  }\n  static get is() { return \"ion-datetime\"; }\n  static get encapsulation() { return \"shadow\"; }\n  static get originalStyleUrls() {\n    return {\n      \"ios\": [\"datetime.ios.scss\"],\n      \"md\": [\"datetime.md.scss\"]\n    };\n  }\n  static get styleUrls() {\n    return {\n      \"ios\": [\"datetime.ios.css\"],\n      \"md\": [\"datetime.md.css\"]\n    };\n  }\n  static get properties() {\n    return {\n      \"color\": {\n        \"type\": \"string\",\n        \"mutable\": false,\n        \"complexType\": {\n          \"original\": \"Color\",\n          \"resolved\": \"\\\"danger\\\" | \\\"dark\\\" | \\\"light\\\" | \\\"medium\\\" | \\\"primary\\\" | \\\"secondary\\\" | \\\"success\\\" | \\\"tertiary\\\" | \\\"warning\\\" | string & Record<never, never> | undefined\",\n          \"references\": {\n            \"Color\": {\n              \"location\": \"import\",\n              \"path\": \"../../interface\"\n            }\n          }\n        },\n        \"required\": false,\n        \"optional\": true,\n        \"docs\": {\n          \"tags\": [],\n          \"text\": \"The color to use from your application's color palette.\\nDefault options are: `\\\"primary\\\"`, `\\\"secondary\\\"`, `\\\"tertiary\\\"`, `\\\"success\\\"`, `\\\"warning\\\"`, `\\\"danger\\\"`, `\\\"light\\\"`, `\\\"medium\\\"`, and `\\\"dark\\\"`.\\nFor more information on colors, see [theming](/docs/theming/basics).\"\n        },\n        \"attribute\": \"color\",\n        \"reflect\": false,\n        \"defaultValue\": \"'primary'\"\n      },\n      \"name\": {\n        \"type\": \"string\",\n        \"mutable\": false,\n        \"complexType\": {\n          \"original\": \"string\",\n          \"resolved\": \"string\",\n          \"references\": {}\n        },\n        \"required\": false,\n        \"optional\": false,\n        \"docs\": {\n          \"tags\": [],\n          \"text\": \"The name of the control, which is submitted with the form data.\"\n        },\n        \"attribute\": \"name\",\n        \"reflect\": false,\n        \"defaultValue\": \"this.inputId\"\n      },\n      \"disabled\": {\n        \"type\": \"boolean\",\n        \"mutable\": false,\n        \"complexType\": {\n          \"original\": \"boolean\",\n          \"resolved\": \"boolean\",\n          \"references\": {}\n        },\n        \"required\": false,\n        \"optional\": false,\n        \"docs\": {\n          \"tags\": [],\n          \"text\": \"If `true`, the user cannot interact with the datetime.\"\n        },\n        \"attribute\": \"disabled\",\n        \"reflect\": false,\n        \"defaultValue\": \"false\"\n      },\n      \"readonly\": {\n        \"type\": \"boolean\",\n        \"mutable\": false,\n        \"complexType\": {\n          \"original\": \"boolean\",\n          \"resolved\": \"boolean\",\n          \"references\": {}\n        },\n        \"required\": false,\n        \"optional\": false,\n        \"docs\": {\n          \"tags\": [],\n          \"text\": \"If `true`, the datetime appears normal but is not interactive.\"\n        },\n        \"attribute\": \"readonly\",\n        \"reflect\": false,\n        \"defaultValue\": \"false\"\n      },\n      \"isDateEnabled\": {\n        \"type\": \"unknown\",\n        \"mutable\": false,\n        \"complexType\": {\n          \"original\": \"(dateIsoString: string) => boolean\",\n          \"resolved\": \"((dateIsoString: string) => boolean) | undefined\",\n          \"references\": {}\n        },\n        \"required\": false,\n        \"optional\": true,\n        \"docs\": {\n          \"tags\": [],\n          \"text\": \"Returns if an individual date (calendar day) is enabled or disabled.\\n\\nIf `true`, the day will be enabled/interactive.\\nIf `false`, the day will be disabled/non-interactive.\\n\\nThe function accepts an ISO 8601 date string of a given day.\\nBy default, all days are enabled. Developers can use this function\\nto write custom logic to disable certain days.\\n\\nThe function is called for each rendered calendar day, for the previous, current and next month.\\nCustom implementations should be optimized for performance to avoid jank.\"\n        }\n      },\n      \"min\": {\n        \"type\": \"string\",\n        \"mutable\": true,\n        \"complexType\": {\n          \"original\": \"string\",\n          \"resolved\": \"string | undefined\",\n          \"references\": {}\n        },\n        \"required\": false,\n        \"optional\": true,\n        \"docs\": {\n          \"tags\": [],\n          \"text\": \"The minimum datetime allowed. Value must be a date string\\nfollowing the\\n[ISO 8601 datetime format standard](https://www.w3.org/TR/NOTE-datetime),\\nsuch as `1996-12-19`. The format does not have to be specific to an exact\\ndatetime. For example, the minimum could just be the year, such as `1994`.\\nDefaults to the beginning of the year, 100 years ago from today.\"\n        },\n        \"attribute\": \"min\",\n        \"reflect\": false\n      },\n      \"max\": {\n        \"type\": \"string\",\n        \"mutable\": true,\n        \"complexType\": {\n          \"original\": \"string\",\n          \"resolved\": \"string | undefined\",\n          \"references\": {}\n        },\n        \"required\": false,\n        \"optional\": true,\n        \"docs\": {\n          \"tags\": [],\n          \"text\": \"The maximum datetime allowed. Value must be a date string\\nfollowing the\\n[ISO 8601 datetime format standard](https://www.w3.org/TR/NOTE-datetime),\\n`1996-12-19`. The format does not have to be specific to an exact\\ndatetime. For example, the maximum could just be the year, such as `1994`.\\nDefaults to the end of this year.\"\n        },\n        \"attribute\": \"max\",\n        \"reflect\": false\n      },\n      \"presentation\": {\n        \"type\": \"string\",\n        \"mutable\": false,\n        \"complexType\": {\n          \"original\": \"DatetimePresentation\",\n          \"resolved\": \"\\\"date\\\" | \\\"date-time\\\" | \\\"month\\\" | \\\"month-year\\\" | \\\"time\\\" | \\\"time-date\\\" | \\\"year\\\"\",\n          \"references\": {\n            \"DatetimePresentation\": {\n              \"location\": \"import\",\n              \"path\": \"./datetime-interface\"\n            }\n          }\n        },\n        \"required\": false,\n        \"optional\": false,\n        \"docs\": {\n          \"tags\": [],\n          \"text\": \"Which values you want to select. `'date'` will show\\na calendar picker to select the month, day, and year. `'time'`\\nwill show a time picker to select the hour, minute, and (optionally)\\nAM/PM. `'date-time'` will show the date picker first and time picker second.\\n`'time-date'` will show the time picker first and date picker second.\"\n        },\n        \"attribute\": \"presentation\",\n        \"reflect\": false,\n        \"defaultValue\": \"'date-time'\"\n      },\n      \"cancelText\": {\n        \"type\": \"string\",\n        \"mutable\": false,\n        \"complexType\": {\n          \"original\": \"string\",\n          \"resolved\": \"string\",\n          \"references\": {}\n        },\n        \"required\": false,\n        \"optional\": false,\n        \"docs\": {\n          \"tags\": [],\n          \"text\": \"The text to display on the picker's cancel button.\"\n        },\n        \"attribute\": \"cancel-text\",\n        \"reflect\": false,\n        \"defaultValue\": \"'Cancel'\"\n      },\n      \"doneText\": {\n        \"type\": \"string\",\n        \"mutable\": false,\n        \"complexType\": {\n          \"original\": \"string\",\n          \"resolved\": \"string\",\n          \"references\": {}\n        },\n        \"required\": false,\n        \"optional\": false,\n        \"docs\": {\n          \"tags\": [],\n          \"text\": \"The text to display on the picker's \\\"Done\\\" button.\"\n        },\n        \"attribute\": \"done-text\",\n        \"reflect\": false,\n        \"defaultValue\": \"'Done'\"\n      },\n      \"clearText\": {\n        \"type\": \"string\",\n        \"mutable\": false,\n        \"complexType\": {\n          \"original\": \"string\",\n          \"resolved\": \"string\",\n          \"references\": {}\n        },\n        \"required\": false,\n        \"optional\": false,\n        \"docs\": {\n          \"tags\": [],\n          \"text\": \"The text to display on the picker's \\\"Clear\\\" button.\"\n        },\n        \"attribute\": \"clear-text\",\n        \"reflect\": false,\n        \"defaultValue\": \"'Clear'\"\n      },\n      \"yearValues\": {\n        \"type\": \"any\",\n        \"mutable\": false,\n        \"complexType\": {\n          \"original\": \"number[] | number | string\",\n          \"resolved\": \"number | number[] | string | undefined\",\n          \"references\": {}\n        },\n        \"required\": false,\n        \"optional\": true,\n        \"docs\": {\n          \"tags\": [],\n          \"text\": \"Values used to create the list of selectable years. By default\\nthe year values range between the `min` and `max` datetime inputs. However, to\\ncontrol exactly which years to display, the `yearValues` input can take a number, an array\\nof numbers, or string of comma separated numbers. For example, to show upcoming and\\nrecent leap years, then this input's value would be `yearValues=\\\"2024,2020,2016,2012,2008\\\"`.\"\n        },\n        \"attribute\": \"year-values\",\n        \"reflect\": false\n      },\n      \"monthValues\": {\n        \"type\": \"any\",\n        \"mutable\": false,\n        \"complexType\": {\n          \"original\": \"number[] | number | string\",\n          \"resolved\": \"number | number[] | string | undefined\",\n          \"references\": {}\n        },\n        \"required\": false,\n        \"optional\": true,\n        \"docs\": {\n          \"tags\": [],\n          \"text\": \"Values used to create the list of selectable months. By default\\nthe month values range from `1` to `12`. However, to control exactly which months to\\ndisplay, the `monthValues` input can take a number, an array of numbers, or a string of\\ncomma separated numbers. For example, if only summer months should be shown, then this\\ninput value would be `monthValues=\\\"6,7,8\\\"`. Note that month numbers do *not* have a\\nzero-based index, meaning January's value is `1`, and December's is `12`.\"\n        },\n        \"attribute\": \"month-values\",\n        \"reflect\": false\n      },\n      \"dayValues\": {\n        \"type\": \"any\",\n        \"mutable\": false,\n        \"complexType\": {\n          \"original\": \"number[] | number | string\",\n          \"resolved\": \"number | number[] | string | undefined\",\n          \"references\": {}\n        },\n        \"required\": false,\n        \"optional\": true,\n        \"docs\": {\n          \"tags\": [],\n          \"text\": \"Values used to create the list of selectable days. By default\\nevery day is shown for the given month. However, to control exactly which days of\\nthe month to display, the `dayValues` input can take a number, an array of numbers, or\\na string of comma separated numbers. Note that even if the array days have an invalid\\nnumber for the selected month, like `31` in February, it will correctly not show\\ndays which are not valid for the selected month.\"\n        },\n        \"attribute\": \"day-values\",\n        \"reflect\": false\n      },\n      \"hourValues\": {\n        \"type\": \"any\",\n        \"mutable\": false,\n        \"complexType\": {\n          \"original\": \"number[] | number | string\",\n          \"resolved\": \"number | number[] | string | undefined\",\n          \"references\": {}\n        },\n        \"required\": false,\n        \"optional\": true,\n        \"docs\": {\n          \"tags\": [],\n          \"text\": \"Values used to create the list of selectable hours. By default\\nthe hour values range from `0` to `23` for 24-hour, or `1` to `12` for 12-hour. However,\\nto control exactly which hours to display, the `hourValues` input can take a number, an\\narray of numbers, or a string of comma separated numbers.\"\n        },\n        \"attribute\": \"hour-values\",\n        \"reflect\": false\n      },\n      \"minuteValues\": {\n        \"type\": \"any\",\n        \"mutable\": false,\n        \"complexType\": {\n          \"original\": \"number[] | number | string\",\n          \"resolved\": \"number | number[] | string | undefined\",\n          \"references\": {}\n        },\n        \"required\": false,\n        \"optional\": true,\n        \"docs\": {\n          \"tags\": [],\n          \"text\": \"Values used to create the list of selectable minutes. By default\\nthe minutes range from `0` to `59`. However, to control exactly which minutes to display,\\nthe `minuteValues` input can take a number, an array of numbers, or a string of comma\\nseparated numbers. For example, if the minute selections should only be every 15 minutes,\\nthen this input value would be `minuteValues=\\\"0,15,30,45\\\"`.\"\n        },\n        \"attribute\": \"minute-values\",\n        \"reflect\": false\n      },\n      \"locale\": {\n        \"type\": \"string\",\n        \"mutable\": false,\n        \"complexType\": {\n          \"original\": \"string\",\n          \"resolved\": \"string\",\n          \"references\": {}\n        },\n        \"required\": false,\n        \"optional\": false,\n        \"docs\": {\n          \"tags\": [],\n          \"text\": \"The locale to use for `ion-datetime`. This\\nimpacts month and day name formatting.\\nThe `'default'` value refers to the default\\nlocale set by your device.\"\n        },\n        \"attribute\": \"locale\",\n        \"reflect\": false,\n        \"defaultValue\": \"'default'\"\n      },\n      \"firstDayOfWeek\": {\n        \"type\": \"number\",\n        \"mutable\": false,\n        \"complexType\": {\n          \"original\": \"number\",\n          \"resolved\": \"number\",\n          \"references\": {}\n        },\n        \"required\": false,\n        \"optional\": false,\n        \"docs\": {\n          \"tags\": [],\n          \"text\": \"The first day of the week to use for `ion-datetime`. The\\ndefault value is `0` and represents Sunday.\"\n        },\n        \"attribute\": \"first-day-of-week\",\n        \"reflect\": false,\n        \"defaultValue\": \"0\"\n      },\n      \"titleSelectedDatesFormatter\": {\n        \"type\": \"unknown\",\n        \"mutable\": false,\n        \"complexType\": {\n          \"original\": \"TitleSelectedDatesFormatter\",\n          \"resolved\": \"((selectedDates: string[]) => string) | undefined\",\n          \"references\": {\n            \"TitleSelectedDatesFormatter\": {\n              \"location\": \"import\",\n              \"path\": \"./datetime-interface\"\n            }\n          }\n        },\n        \"required\": false,\n        \"optional\": true,\n        \"docs\": {\n          \"tags\": [],\n          \"text\": \"A callback used to format the header text that shows how many\\ndates are selected. Only used if there are 0 or more than 1\\nselected (i.e. unused for exactly 1). By default, the header\\ntext is set to \\\"numberOfDates days\\\".\"\n        }\n      },\n      \"multiple\": {\n        \"type\": \"boolean\",\n        \"mutable\": false,\n        \"complexType\": {\n          \"original\": \"boolean\",\n          \"resolved\": \"boolean\",\n          \"references\": {}\n        },\n        \"required\": false,\n        \"optional\": false,\n        \"docs\": {\n          \"tags\": [],\n          \"text\": \"If `true`, multiple dates can be selected at once. Only\\napplies to `presentation=\\\"date\\\"` and `preferWheel=\\\"false\\\"`.\"\n        },\n        \"attribute\": \"multiple\",\n        \"reflect\": false,\n        \"defaultValue\": \"false\"\n      },\n      \"highlightedDates\": {\n        \"type\": \"unknown\",\n        \"mutable\": false,\n        \"complexType\": {\n          \"original\": \"DatetimeHighlight[] | DatetimeHighlightCallback\",\n          \"resolved\": \"((dateIsoString: string) => DatetimeHighlightStyle | undefined) | DatetimeHighlight[] | undefined\",\n          \"references\": {\n            \"DatetimeHighlight\": {\n              \"location\": \"import\",\n              \"path\": \"./datetime-interface\"\n            },\n            \"DatetimeHighlightCallback\": {\n              \"location\": \"import\",\n              \"path\": \"./datetime-interface\"\n            }\n          }\n        },\n        \"required\": false,\n        \"optional\": true,\n        \"docs\": {\n          \"tags\": [],\n          \"text\": \"Used to apply custom text and background colors to specific dates.\\n\\nCan be either an array of objects containing ISO strings and colors,\\nor a callback that receives an ISO string and returns the colors.\\n\\nOnly applies to the `date`, `date-time`, and `time-date` presentations,\\nwith `preferWheel=\\\"false\\\"`.\"\n        }\n      },\n      \"value\": {\n        \"type\": \"string\",\n        \"mutable\": true,\n        \"complexType\": {\n          \"original\": \"string | string[] | null\",\n          \"resolved\": \"null | string | string[] | undefined\",\n          \"references\": {}\n        },\n        \"required\": false,\n        \"optional\": true,\n        \"docs\": {\n          \"tags\": [],\n          \"text\": \"The value of the datetime as a valid ISO 8601 datetime string.\\nShould be an array of strings if `multiple=\\\"true\\\"`.\"\n        },\n        \"attribute\": \"value\",\n        \"reflect\": false\n      },\n      \"showDefaultTitle\": {\n        \"type\": \"boolean\",\n        \"mutable\": false,\n        \"complexType\": {\n          \"original\": \"boolean\",\n          \"resolved\": \"boolean\",\n          \"references\": {}\n        },\n        \"required\": false,\n        \"optional\": false,\n        \"docs\": {\n          \"tags\": [],\n          \"text\": \"If `true`, a header will be shown above the calendar\\npicker. This will include both the slotted title, and\\nthe selected date.\"\n        },\n        \"attribute\": \"show-default-title\",\n        \"reflect\": false,\n        \"defaultValue\": \"false\"\n      },\n      \"showDefaultButtons\": {\n        \"type\": \"boolean\",\n        \"mutable\": false,\n        \"complexType\": {\n          \"original\": \"boolean\",\n          \"resolved\": \"boolean\",\n          \"references\": {}\n        },\n        \"required\": false,\n        \"optional\": false,\n        \"docs\": {\n          \"tags\": [],\n          \"text\": \"If `true`, the default \\\"Cancel\\\" and \\\"OK\\\" buttons\\nwill be rendered at the bottom of the `ion-datetime`\\ncomponent. Developers can also use the `button` slot\\nif they want to customize these buttons. If custom\\nbuttons are set in the `button` slot then the\\ndefault buttons will not be rendered.\"\n        },\n        \"attribute\": \"show-default-buttons\",\n        \"reflect\": false,\n        \"defaultValue\": \"false\"\n      },\n      \"showClearButton\": {\n        \"type\": \"boolean\",\n        \"mutable\": false,\n        \"complexType\": {\n          \"original\": \"boolean\",\n          \"resolved\": \"boolean\",\n          \"references\": {}\n        },\n        \"required\": false,\n        \"optional\": false,\n        \"docs\": {\n          \"tags\": [],\n          \"text\": \"If `true`, a \\\"Clear\\\" button will be rendered alongside\\nthe default \\\"Cancel\\\" and \\\"OK\\\" buttons at the bottom of the `ion-datetime`\\ncomponent. Developers can also use the `button` slot\\nif they want to customize these buttons. If custom\\nbuttons are set in the `button` slot then the\\ndefault buttons will not be rendered.\"\n        },\n        \"attribute\": \"show-clear-button\",\n        \"reflect\": false,\n        \"defaultValue\": \"false\"\n      },\n      \"showDefaultTimeLabel\": {\n        \"type\": \"boolean\",\n        \"mutable\": false,\n        \"complexType\": {\n          \"original\": \"boolean\",\n          \"resolved\": \"boolean\",\n          \"references\": {}\n        },\n        \"required\": false,\n        \"optional\": false,\n        \"docs\": {\n          \"tags\": [],\n          \"text\": \"If `true`, the default \\\"Time\\\" label will be rendered\\nfor the time selector of the `ion-datetime` component.\\nDevelopers can also use the `time-label` slot\\nif they want to customize this label. If a custom\\nlabel is set in the `time-label` slot then the\\ndefault label will not be rendered.\"\n        },\n        \"attribute\": \"show-default-time-label\",\n        \"reflect\": false,\n        \"defaultValue\": \"true\"\n      },\n      \"hourCycle\": {\n        \"type\": \"string\",\n        \"mutable\": false,\n        \"complexType\": {\n          \"original\": \"'h23' | 'h12'\",\n          \"resolved\": \"\\\"h12\\\" | \\\"h23\\\" | undefined\",\n          \"references\": {}\n        },\n        \"required\": false,\n        \"optional\": true,\n        \"docs\": {\n          \"tags\": [],\n          \"text\": \"The hour cycle of the `ion-datetime`. If no value is set, this is\\nspecified by the current locale.\"\n        },\n        \"attribute\": \"hour-cycle\",\n        \"reflect\": false\n      },\n      \"size\": {\n        \"type\": \"string\",\n        \"mutable\": false,\n        \"complexType\": {\n          \"original\": \"'cover' | 'fixed'\",\n          \"resolved\": \"\\\"cover\\\" | \\\"fixed\\\"\",\n          \"references\": {}\n        },\n        \"required\": false,\n        \"optional\": false,\n        \"docs\": {\n          \"tags\": [],\n          \"text\": \"If `cover`, the `ion-datetime` will expand to cover the full width of its container.\\nIf `fixed`, the `ion-datetime` will have a fixed width.\"\n        },\n        \"attribute\": \"size\",\n        \"reflect\": false,\n        \"defaultValue\": \"'fixed'\"\n      },\n      \"preferWheel\": {\n        \"type\": \"boolean\",\n        \"mutable\": false,\n        \"complexType\": {\n          \"original\": \"boolean\",\n          \"resolved\": \"boolean\",\n          \"references\": {}\n        },\n        \"required\": false,\n        \"optional\": false,\n        \"docs\": {\n          \"tags\": [],\n          \"text\": \"If `true`, a wheel picker will be rendered instead of a calendar grid\\nwhere possible. If `false`, a calendar grid will be rendered instead of\\na wheel picker where possible.\\n\\nA wheel picker can be rendered instead of a grid when `presentation` is\\none of the following values: `'date'`, `'date-time'`, or `'time-date'`.\\n\\nA wheel picker will always be rendered regardless of\\nthe `preferWheel` value when `presentation` is one of the following values:\\n`'time'`, `'month'`, `'month-year'`, or `'year'`.\"\n        },\n        \"attribute\": \"prefer-wheel\",\n        \"reflect\": false,\n        \"defaultValue\": \"false\"\n      }\n    };\n  }\n  static get states() {\n    return {\n      \"showMonthAndYear\": {},\n      \"activeParts\": {},\n      \"workingParts\": {},\n      \"isPresented\": {},\n      \"isTimePopoverOpen\": {}\n    };\n  }\n  static get events() {\n    return [{\n        \"method\": \"ionCancel\",\n        \"name\": \"ionCancel\",\n        \"bubbles\": true,\n        \"cancelable\": true,\n        \"composed\": true,\n        \"docs\": {\n          \"tags\": [],\n          \"text\": \"Emitted when the datetime selection was cancelled.\"\n        },\n        \"complexType\": {\n          \"original\": \"void\",\n          \"resolved\": \"void\",\n          \"references\": {}\n        }\n      }, {\n        \"method\": \"ionChange\",\n        \"name\": \"ionChange\",\n        \"bubbles\": true,\n        \"cancelable\": true,\n        \"composed\": true,\n        \"docs\": {\n          \"tags\": [],\n          \"text\": \"Emitted when the value (selected date) has changed.\"\n        },\n        \"complexType\": {\n          \"original\": \"DatetimeChangeEventDetail\",\n          \"resolved\": \"DatetimeChangeEventDetail\",\n          \"references\": {\n            \"DatetimeChangeEventDetail\": {\n              \"location\": \"import\",\n              \"path\": \"./datetime-interface\"\n            }\n          }\n        }\n      }, {\n        \"method\": \"ionFocus\",\n        \"name\": \"ionFocus\",\n        \"bubbles\": true,\n        \"cancelable\": true,\n        \"composed\": true,\n        \"docs\": {\n          \"tags\": [],\n          \"text\": \"Emitted when the datetime has focus.\"\n        },\n        \"complexType\": {\n          \"original\": \"void\",\n          \"resolved\": \"void\",\n          \"references\": {}\n        }\n      }, {\n        \"method\": \"ionBlur\",\n        \"name\": \"ionBlur\",\n        \"bubbles\": true,\n        \"cancelable\": true,\n        \"composed\": true,\n        \"docs\": {\n          \"tags\": [],\n          \"text\": \"Emitted when the datetime loses focus.\"\n        },\n        \"complexType\": {\n          \"original\": \"void\",\n          \"resolved\": \"void\",\n          \"references\": {}\n        }\n      }, {\n        \"method\": \"ionStyle\",\n        \"name\": \"ionStyle\",\n        \"bubbles\": true,\n        \"cancelable\": true,\n        \"composed\": true,\n        \"docs\": {\n          \"tags\": [{\n              \"name\": \"internal\",\n              \"text\": undefined\n            }],\n          \"text\": \"Emitted when the styles change.\"\n        },\n        \"complexType\": {\n          \"original\": \"StyleEventDetail\",\n          \"resolved\": \"StyleEventDetail\",\n          \"references\": {\n            \"StyleEventDetail\": {\n              \"location\": \"import\",\n              \"path\": \"../../interface\"\n            }\n          }\n        }\n      }, {\n        \"method\": \"ionRender\",\n        \"name\": \"ionRender\",\n        \"bubbles\": true,\n        \"cancelable\": true,\n        \"composed\": true,\n        \"docs\": {\n          \"tags\": [{\n              \"name\": \"internal\",\n              \"text\": undefined\n            }],\n          \"text\": \"Emitted when componentDidRender is fired.\"\n        },\n        \"complexType\": {\n          \"original\": \"void\",\n          \"resolved\": \"void\",\n          \"references\": {}\n        }\n      }];\n  }\n  static get methods() {\n    return {\n      \"confirm\": {\n        \"complexType\": {\n          \"signature\": \"(closeOverlay?: boolean) => Promise<void>\",\n          \"parameters\": [{\n              \"tags\": [],\n              \"text\": \"\"\n            }],\n          \"references\": {\n            \"Promise\": {\n              \"location\": \"global\"\n            }\n          },\n          \"return\": \"Promise<void>\"\n        },\n        \"docs\": {\n          \"text\": \"Confirms the selected datetime value, updates the\\n`value` property, and optionally closes the popover\\nor modal that the datetime was presented in.\",\n          \"tags\": []\n        }\n      },\n      \"reset\": {\n        \"complexType\": {\n          \"signature\": \"(startDate?: string) => Promise<void>\",\n          \"parameters\": [{\n              \"tags\": [],\n              \"text\": \"\"\n            }],\n          \"references\": {\n            \"Promise\": {\n              \"location\": \"global\"\n            }\n          },\n          \"return\": \"Promise<void>\"\n        },\n        \"docs\": {\n          \"text\": \"Resets the internal state of the datetime but does not update the value.\\nPassing a valid ISO-8601 string will reset the state of the component to the provided date.\\nIf no value is provided, the internal state will be reset to the clamped value of the min, max and today.\",\n          \"tags\": []\n        }\n      },\n      \"cancel\": {\n        \"complexType\": {\n          \"signature\": \"(closeOverlay?: boolean) => Promise<void>\",\n          \"parameters\": [{\n              \"tags\": [],\n              \"text\": \"\"\n            }],\n          \"references\": {\n            \"Promise\": {\n              \"location\": \"global\"\n            }\n          },\n          \"return\": \"Promise<void>\"\n        },\n        \"docs\": {\n          \"text\": \"Emits the ionCancel event and\\noptionally closes the popover\\nor modal that the datetime was\\npresented in.\",\n          \"tags\": []\n        }\n      }\n    };\n  }\n  static get elementRef() { return \"el\"; }\n  static get watchers() {\n    return [{\n        \"propName\": \"disabled\",\n        \"methodName\": \"disabledChanged\"\n      }, {\n        \"propName\": \"min\",\n        \"methodName\": \"minChanged\"\n      }, {\n        \"propName\": \"max\",\n        \"methodName\": \"maxChanged\"\n      }, {\n        \"propName\": \"yearValues\",\n        \"methodName\": \"yearValuesChanged\"\n      }, {\n        \"propName\": \"monthValues\",\n        \"methodName\": \"monthValuesChanged\"\n      }, {\n        \"propName\": \"dayValues\",\n        \"methodName\": \"dayValuesChanged\"\n      }, {\n        \"propName\": \"hourValues\",\n        \"methodName\": \"hourValuesChanged\"\n      }, {\n        \"propName\": \"minuteValues\",\n        \"methodName\": \"minuteValuesChanged\"\n      }, {\n        \"propName\": \"activeParts\",\n        \"methodName\": \"activePartsChanged\"\n      }, {\n        \"propName\": \"value\",\n        \"methodName\": \"valueChanged\"\n      }];\n  }\n}\nlet datetimeIds = 0;\n"],"mappings":"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"}