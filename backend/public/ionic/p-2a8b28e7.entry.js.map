{"version":3,"names":["watchForOptions","containerEl","tagName","onChange","MutationObserver","mutation","mutationList","getSelectedOption","observe","childList","subtree","newOption","forEach","mut","i","addedNodes","length","findCheckedOption","el","nodeType","undefined","options","toUpperCase","Array","from","querySelectorAll","find","o","value","selectIosCss","selectMdCss","Select","constructor","hostRef","this","inputId","selectIds","didInit","isExpanded","disabled","cancelText","okText","name","multiple","interface","interfaceOptions","onClick","ev","setFocus","open","onFocus","ionFocus","emit","onBlur","ionBlur","styleChanged","emitStyle","valueChanged","ionChange","async","updateOverlayOptions","mutationO","forceUpdate","disconnectedCallback","disconnect","componentDidLoad","event","overlay","createOverlay","onDidDismiss","then","ionDismiss","present","indexOfSelected","childOpts","map","indexOf","selectedItem","querySelector","focusElement","interactiveEl","focus","selectInterface","console","warn","openActionSheet","openPopover","openAlert","buttons","createActionSheetButtons","popover","createPopoverOptions","inputType","inputs","createAlertInputs","data","selectValue","actionSheetButtons","option","getOptionValue","copyClasses","classList","filter","cls","join","optClass","OPTION_CLASS","role","isOptionSelected","compareWith","text","textContent","cssClass","handler","push","ionCancel","alertInputs","type","label","checked","popoverOptions","selected","close","mode","getIonMode","showBackdrop","size","item","closest","contains","Object","assign","detail","ionShadowTarget","popoverOpts","alignment","component","componentProps","header","subHeader","message","popoverController","create","actionSheetOpts","actionSheetController","getLabel","labelText","alertOpts","selectedValues","alertController","Promise","resolve","dismiss","findItemLabel","hasValue","getText","selectedText","generateText","focusEl","ionStyle","interactive","select","placeholder","render","labelId","getAriaLabel","renderHiddenInput","parseValue","displayValue","addPlaceholderClass","selectText","selectTextClasses","textPart","displayLabel","h","Host","class","hostContext","part","id","ref","currentValue","compareValue","isArray","some","val","compareOptions","toString","includes","opts","v","textForValue","opt","selectOpt"],"sources":["./node_modules/@ionic/core/dist/collection/utils/watch-options.js","./node_modules/@ionic/core/dist/collection/components/select/select.ios.css?tag=ion-select&mode=ios&encapsulation=shadow","./node_modules/@ionic/core/dist/collection/components/select/select.md.css?tag=ion-select&mode=md&encapsulation=shadow","./node_modules/@ionic/core/dist/collection/components/select/select.js"],"sourcesContent":["/*!\n * (C) Ionic http://ionicframework.com - MIT License\n */\n// TODO(FW-2832): types\nexport const watchForOptions = (containerEl, tagName, onChange) => {\n  if (typeof MutationObserver === 'undefined') {\n    return;\n  }\n  const mutation = new MutationObserver((mutationList) => {\n    onChange(getSelectedOption(mutationList, tagName));\n  });\n  mutation.observe(containerEl, {\n    childList: true,\n    subtree: true,\n  });\n  return mutation;\n};\nconst getSelectedOption = (mutationList, tagName) => {\n  let newOption;\n  mutationList.forEach((mut) => {\n    // eslint-disable-next-line @typescript-eslint/prefer-for-of\n    for (let i = 0; i < mut.addedNodes.length; i++) {\n      newOption = findCheckedOption(mut.addedNodes[i], tagName) || newOption;\n    }\n  });\n  return newOption;\n};\nexport const findCheckedOption = (el, tagName) => {\n  if (el.nodeType !== 1) {\n    return undefined;\n  }\n  const options = el.tagName === tagName.toUpperCase() ? [el] : Array.from(el.querySelectorAll(tagName));\n  return options.find((o) => o.value === el.value);\n};\n",":host {\n  /**\n   * @prop --padding-top: Top padding of the select\n   * @prop --padding-end: Right padding if direction is left-to-right, and left padding if direction is right-to-left of the select\n   * @prop --padding-bottom: Bottom padding of the select\n   * @prop --padding-start: Left padding if direction is left-to-right, and right padding if direction is right-to-left of the select\n   *\n   * @prop --placeholder-color: Color of the select placeholder text\n   * @prop --placeholder-opacity: Opacity of the select placeholder text\n   */\n  --placeholder-color: currentColor;\n  --placeholder-opacity: 0.33;\n  padding-left: var(--padding-start);\n  padding-right: var(--padding-end);\n  padding-top: var(--padding-top);\n  padding-bottom: var(--padding-bottom);\n  display: flex;\n  position: relative;\n  align-items: center;\n  font-family: var(--ion-font-family, inherit);\n  overflow: hidden;\n  z-index: 2;\n}\n@supports (margin-inline-start: 0) or (-webkit-margin-start: 0) {\n  :host {\n    padding-left: unset;\n    padding-right: unset;\n    -webkit-padding-start: var(--padding-start);\n    padding-inline-start: var(--padding-start);\n    -webkit-padding-end: var(--padding-end);\n    padding-inline-end: var(--padding-end);\n  }\n}\n\n:host(.in-item) {\n  position: static;\n  max-width: 45%;\n}\n\n:host(.select-disabled) {\n  opacity: 0.4;\n  pointer-events: none;\n}\n\n:host(.ion-focused) button {\n  border: 2px solid #5e9ed6;\n}\n\n.select-placeholder {\n  color: var(--placeholder-color);\n  opacity: var(--placeholder-opacity);\n}\n\nlabel {\n  left: 0;\n  top: 0;\n  margin-left: 0;\n  margin-right: 0;\n  margin-top: 0;\n  margin-bottom: 0;\n  position: absolute;\n  width: 100%;\n  height: 100%;\n  border: 0;\n  background: transparent;\n  cursor: pointer;\n  appearance: none;\n  outline: none;\n  display: flex;\n  align-items: center;\n  opacity: 0;\n}\n[dir=rtl] label, :host-context([dir=rtl]) label {\n  left: unset;\n  right: unset;\n  right: 0;\n}\n\nlabel::-moz-focus-inner {\n  border: 0;\n}\n\nbutton {\n  position: absolute;\n  top: 0;\n  left: 0;\n  right: 0;\n  bottom: 0;\n  width: 100%;\n  height: 100%;\n  margin: 0;\n  padding: 0;\n  border: 0;\n  outline: 0;\n  clip: rect(0 0 0 0);\n  opacity: 0;\n  overflow: hidden;\n  -webkit-appearance: none;\n  -moz-appearance: none;\n}\n\n.select-icon {\n  position: relative;\n}\n\n.select-text {\n  flex: 1;\n  min-width: 16px;\n  font-size: inherit;\n  text-overflow: ellipsis;\n  white-space: nowrap;\n  overflow: hidden;\n}\n\n.select-icon-inner {\n  left: 5px;\n  top: 50%;\n  margin-top: -2px;\n  position: absolute;\n  width: 0;\n  height: 0;\n  border-top: 5px solid;\n  border-right: 5px solid transparent;\n  border-left: 5px solid transparent;\n  color: currentColor;\n  pointer-events: none;\n}\n[dir=rtl] .select-icon-inner, :host-context([dir=rtl]) .select-icon-inner {\n  left: unset;\n  right: unset;\n  right: 5px;\n}\n\n:host {\n  --padding-top: 10px;\n  --padding-end: 10px;\n  --padding-bottom: 10px;\n  --padding-start: 20px;\n}\n\n.select-icon {\n  width: 12px;\n  height: 18px;\n  opacity: 0.33;\n}",":host {\n  /**\n   * @prop --padding-top: Top padding of the select\n   * @prop --padding-end: Right padding if direction is left-to-right, and left padding if direction is right-to-left of the select\n   * @prop --padding-bottom: Bottom padding of the select\n   * @prop --padding-start: Left padding if direction is left-to-right, and right padding if direction is right-to-left of the select\n   *\n   * @prop --placeholder-color: Color of the select placeholder text\n   * @prop --placeholder-opacity: Opacity of the select placeholder text\n   */\n  --placeholder-color: currentColor;\n  --placeholder-opacity: 0.33;\n  padding-left: var(--padding-start);\n  padding-right: var(--padding-end);\n  padding-top: var(--padding-top);\n  padding-bottom: var(--padding-bottom);\n  display: flex;\n  position: relative;\n  align-items: center;\n  font-family: var(--ion-font-family, inherit);\n  overflow: hidden;\n  z-index: 2;\n}\n@supports (margin-inline-start: 0) or (-webkit-margin-start: 0) {\n  :host {\n    padding-left: unset;\n    padding-right: unset;\n    -webkit-padding-start: var(--padding-start);\n    padding-inline-start: var(--padding-start);\n    -webkit-padding-end: var(--padding-end);\n    padding-inline-end: var(--padding-end);\n  }\n}\n\n:host(.in-item) {\n  position: static;\n  max-width: 45%;\n}\n\n:host(.select-disabled) {\n  opacity: 0.4;\n  pointer-events: none;\n}\n\n:host(.ion-focused) button {\n  border: 2px solid #5e9ed6;\n}\n\n.select-placeholder {\n  color: var(--placeholder-color);\n  opacity: var(--placeholder-opacity);\n}\n\nlabel {\n  left: 0;\n  top: 0;\n  margin-left: 0;\n  margin-right: 0;\n  margin-top: 0;\n  margin-bottom: 0;\n  position: absolute;\n  width: 100%;\n  height: 100%;\n  border: 0;\n  background: transparent;\n  cursor: pointer;\n  appearance: none;\n  outline: none;\n  display: flex;\n  align-items: center;\n  opacity: 0;\n}\n[dir=rtl] label, :host-context([dir=rtl]) label {\n  left: unset;\n  right: unset;\n  right: 0;\n}\n\nlabel::-moz-focus-inner {\n  border: 0;\n}\n\nbutton {\n  position: absolute;\n  top: 0;\n  left: 0;\n  right: 0;\n  bottom: 0;\n  width: 100%;\n  height: 100%;\n  margin: 0;\n  padding: 0;\n  border: 0;\n  outline: 0;\n  clip: rect(0 0 0 0);\n  opacity: 0;\n  overflow: hidden;\n  -webkit-appearance: none;\n  -moz-appearance: none;\n}\n\n.select-icon {\n  position: relative;\n}\n\n.select-text {\n  flex: 1;\n  min-width: 16px;\n  font-size: inherit;\n  text-overflow: ellipsis;\n  white-space: nowrap;\n  overflow: hidden;\n}\n\n.select-icon-inner {\n  left: 5px;\n  top: 50%;\n  margin-top: -2px;\n  position: absolute;\n  width: 0;\n  height: 0;\n  border-top: 5px solid;\n  border-right: 5px solid transparent;\n  border-left: 5px solid transparent;\n  color: currentColor;\n  pointer-events: none;\n}\n[dir=rtl] .select-icon-inner, :host-context([dir=rtl]) .select-icon-inner {\n  left: unset;\n  right: unset;\n  right: 5px;\n}\n\n:host {\n  --padding-top: 10px;\n  --padding-end: 0;\n  --padding-bottom: 10px;\n  --padding-start: 16px;\n}\n\n.select-icon {\n  width: 19px;\n  height: 19px;\n  transition: transform 0.15s cubic-bezier(0.4, 0, 0.2, 1);\n  opacity: 0.55;\n}\n\n/**\n * Adjust the arrow so that it appears in the middle\n * of the item. If the item has fill=\"outline\" then\n * we should adjust the entire ion-select rather than\n * just the outline so the selected value appears centered too.\n */\n:host-context(.item-label-stacked) .select-icon,\n:host-context(.item-label-floating:not(.item-fill-outline)) .select-icon,\n:host-context(.item-label-floating.item-fill-outline) {\n  transform: translate3d(0,  -9px,  0);\n}\n\n:host-context(.item-has-focus) .select-icon {\n  transform: rotate(180deg);\n}\n\n/**\n * Ensure that the translation we did\n * above is preserved when we rotate the select icon.\n */\n:host-context(.item-has-focus.item-label-stacked) .select-icon,\n:host-context(.item-has-focus.item-label-floating:not(.item-fill-outline)) .select-icon {\n  transform: translate3d(0,  -9px,  0) rotate(180deg);\n}\n\n:host-context(ion-item.ion-focused) .select-icon,\n:host-context(.item-has-focus) .select-icon {\n  color: var(--highlight-color-focused);\n  opacity: 1;\n}","/*!\n * (C) Ionic http://ionicframework.com - MIT License\n */\nimport { Host, h, forceUpdate } from '@stencil/core';\nimport { getIonMode } from '../../global/ionic-global';\nimport { findItemLabel, focusElement, getAriaLabel, renderHiddenInput } from '../../utils/helpers';\nimport { actionSheetController, alertController, popoverController } from '../../utils/overlays';\nimport { hostContext } from '../../utils/theme';\nimport { watchForOptions } from '../../utils/watch-options';\n// TODO(FW-2832): types\n/**\n * @virtualProp {\"ios\" | \"md\"} mode - The mode determines which platform styles to use.\n *\n * @part placeholder - The text displayed in the select when there is no value.\n * @part text - The displayed value of the select.\n * @part icon - The select icon container.\n */\nexport class Select {\n  constructor() {\n    this.inputId = `ion-sel-${selectIds++}`;\n    this.didInit = false;\n    this.isExpanded = false;\n    /**\n     * If `true`, the user cannot interact with the select.\n     */\n    this.disabled = false;\n    /**\n     * The text to display on the cancel button.\n     */\n    this.cancelText = 'Cancel';\n    /**\n     * The text to display on the ok button.\n     */\n    this.okText = 'OK';\n    /**\n     * The name of the control, which is submitted with the form data.\n     */\n    this.name = this.inputId;\n    /**\n     * If `true`, the select can accept multiple values.\n     */\n    this.multiple = false;\n    /**\n     * The interface the select should use: `action-sheet`, `popover` or `alert`.\n     */\n    this.interface = 'alert';\n    /**\n     * Any additional options that the `alert`, `action-sheet` or `popover` interface\n     * can take. See the [ion-alert docs](./alert), the\n     * [ion-action-sheet docs](./action-sheet) and the\n     * [ion-popover docs](./popover) for the\n     * create options for each interface.\n     *\n     * Note: `interfaceOptions` will not override `inputs` or `buttons` with the `alert` interface.\n     */\n    this.interfaceOptions = {};\n    this.onClick = (ev) => {\n      this.setFocus();\n      this.open(ev);\n    };\n    this.onFocus = () => {\n      this.ionFocus.emit();\n    };\n    this.onBlur = () => {\n      this.ionBlur.emit();\n    };\n  }\n  styleChanged() {\n    this.emitStyle();\n  }\n  valueChanged() {\n    this.emitStyle();\n    // TODO: FW-1160 - Remove the `didInit` property when ionChange behavior is changed in v7.\n    if (this.didInit) {\n      this.ionChange.emit({\n        value: this.value,\n      });\n    }\n  }\n  async connectedCallback() {\n    this.updateOverlayOptions();\n    this.emitStyle();\n    this.mutationO = watchForOptions(this.el, 'ion-select-option', async () => {\n      this.updateOverlayOptions();\n      /**\n       * We need to re-render the component\n       * because one of the new ion-select-option\n       * elements may match the value. In this case,\n       * the rendered selected text should be updated.\n       */\n      forceUpdate(this);\n    });\n  }\n  disconnectedCallback() {\n    if (this.mutationO) {\n      this.mutationO.disconnect();\n      this.mutationO = undefined;\n    }\n  }\n  componentDidLoad() {\n    this.didInit = true;\n  }\n  /**\n   * Open the select overlay. The overlay is either an alert, action sheet, or popover,\n   * depending on the `interface` property on the `ion-select`.\n   *\n   * @param event The user interface event that called the open.\n   */\n  async open(event) {\n    if (this.disabled || this.isExpanded) {\n      return undefined;\n    }\n    this.isExpanded = true;\n    const overlay = (this.overlay = await this.createOverlay(event));\n    overlay.onDidDismiss().then(() => {\n      this.overlay = undefined;\n      this.isExpanded = false;\n      this.ionDismiss.emit();\n      this.setFocus();\n    });\n    await overlay.present();\n    // focus selected option for popovers\n    if (this.interface === 'popover') {\n      let indexOfSelected = this.childOpts.map((o) => o.value).indexOf(this.value);\n      indexOfSelected = indexOfSelected > -1 ? indexOfSelected : 0; // default to first option if nothing selected\n      const selectedItem = overlay.querySelector(`.select-interface-option:nth-child(${indexOfSelected + 1})`);\n      if (selectedItem) {\n        focusElement(selectedItem);\n        /**\n         * Browsers such as Firefox do not\n         * correctly delegate focus when manually\n         * focusing an element with delegatesFocus.\n         * We work around this by manually focusing\n         * the interactive element.\n         * ion-radio and ion-checkbox are the only\n         * elements that ion-select-popover uses, so\n         * we only need to worry about those two components\n         * when focusing.\n         */\n        const interactiveEl = selectedItem.querySelector('ion-radio, ion-checkbox');\n        if (interactiveEl) {\n          interactiveEl.focus();\n        }\n      }\n    }\n    return overlay;\n  }\n  createOverlay(ev) {\n    let selectInterface = this.interface;\n    if (selectInterface === 'action-sheet' && this.multiple) {\n      console.warn(`Select interface cannot be \"${selectInterface}\" with a multi-value select. Using the \"alert\" interface instead.`);\n      selectInterface = 'alert';\n    }\n    if (selectInterface === 'popover' && !ev) {\n      console.warn(`Select interface cannot be a \"${selectInterface}\" without passing an event. Using the \"alert\" interface instead.`);\n      selectInterface = 'alert';\n    }\n    if (selectInterface === 'action-sheet') {\n      return this.openActionSheet();\n    }\n    if (selectInterface === 'popover') {\n      return this.openPopover(ev);\n    }\n    return this.openAlert();\n  }\n  updateOverlayOptions() {\n    const overlay = this.overlay;\n    if (!overlay) {\n      return;\n    }\n    const childOpts = this.childOpts;\n    const value = this.value;\n    switch (this.interface) {\n      case 'action-sheet':\n        overlay.buttons = this.createActionSheetButtons(childOpts, value);\n        break;\n      case 'popover':\n        const popover = overlay.querySelector('ion-select-popover');\n        if (popover) {\n          popover.options = this.createPopoverOptions(childOpts, value);\n        }\n        break;\n      case 'alert':\n        const inputType = this.multiple ? 'checkbox' : 'radio';\n        overlay.inputs = this.createAlertInputs(childOpts, inputType, value);\n        break;\n    }\n  }\n  createActionSheetButtons(data, selectValue) {\n    const actionSheetButtons = data.map((option) => {\n      const value = getOptionValue(option);\n      // Remove hydrated before copying over classes\n      const copyClasses = Array.from(option.classList)\n        .filter((cls) => cls !== 'hydrated')\n        .join(' ');\n      const optClass = `${OPTION_CLASS} ${copyClasses}`;\n      return {\n        role: isOptionSelected(selectValue, value, this.compareWith) ? 'selected' : '',\n        text: option.textContent,\n        cssClass: optClass,\n        handler: () => {\n          this.value = value;\n        },\n      };\n    });\n    // Add \"cancel\" button\n    actionSheetButtons.push({\n      text: this.cancelText,\n      role: 'cancel',\n      handler: () => {\n        this.ionCancel.emit();\n      },\n    });\n    return actionSheetButtons;\n  }\n  createAlertInputs(data, inputType, selectValue) {\n    const alertInputs = data.map((option) => {\n      const value = getOptionValue(option);\n      // Remove hydrated before copying over classes\n      const copyClasses = Array.from(option.classList)\n        .filter((cls) => cls !== 'hydrated')\n        .join(' ');\n      const optClass = `${OPTION_CLASS} ${copyClasses}`;\n      return {\n        type: inputType,\n        cssClass: optClass,\n        label: option.textContent || '',\n        value,\n        checked: isOptionSelected(selectValue, value, this.compareWith),\n        disabled: option.disabled,\n      };\n    });\n    return alertInputs;\n  }\n  createPopoverOptions(data, selectValue) {\n    const popoverOptions = data.map((option) => {\n      const value = getOptionValue(option);\n      // Remove hydrated before copying over classes\n      const copyClasses = Array.from(option.classList)\n        .filter((cls) => cls !== 'hydrated')\n        .join(' ');\n      const optClass = `${OPTION_CLASS} ${copyClasses}`;\n      return {\n        text: option.textContent || '',\n        cssClass: optClass,\n        value,\n        checked: isOptionSelected(selectValue, value, this.compareWith),\n        disabled: option.disabled,\n        handler: (selected) => {\n          this.value = selected;\n          if (!this.multiple) {\n            this.close();\n          }\n        },\n      };\n    });\n    return popoverOptions;\n  }\n  async openPopover(ev) {\n    const interfaceOptions = this.interfaceOptions;\n    const mode = getIonMode(this);\n    const showBackdrop = mode === 'md' ? false : true;\n    const multiple = this.multiple;\n    const value = this.value;\n    let event = ev;\n    let size = 'auto';\n    const item = this.el.closest('ion-item');\n    // If the select is inside of an item containing a floating\n    // or stacked label then the popover should take up the\n    // full width of the item when it presents\n    if (item && (item.classList.contains('item-label-floating') || item.classList.contains('item-label-stacked'))) {\n      event = Object.assign(Object.assign({}, ev), { detail: {\n          ionShadowTarget: item,\n        } });\n      size = 'cover';\n    }\n    const popoverOpts = Object.assign(Object.assign({ mode,\n      event, alignment: 'center', size,\n      showBackdrop }, interfaceOptions), { component: 'ion-select-popover', cssClass: ['select-popover', interfaceOptions.cssClass], componentProps: {\n        header: interfaceOptions.header,\n        subHeader: interfaceOptions.subHeader,\n        message: interfaceOptions.message,\n        multiple,\n        value,\n        options: this.createPopoverOptions(this.childOpts, value),\n      } });\n    /**\n     * Workaround for Stencil to autodefine\n     * ion-select-popover and ion-popover when\n     * using Custom Elements build.\n     */\n    // eslint-disable-next-line\n    if (false) {\n      // eslint-disable-next-line\n      // @ts-ignore\n      document.createElement('ion-select-popover');\n      document.createElement('ion-popover');\n    }\n    return popoverController.create(popoverOpts);\n  }\n  async openActionSheet() {\n    const mode = getIonMode(this);\n    const interfaceOptions = this.interfaceOptions;\n    const actionSheetOpts = Object.assign(Object.assign({ mode }, interfaceOptions), { buttons: this.createActionSheetButtons(this.childOpts, this.value), cssClass: ['select-action-sheet', interfaceOptions.cssClass] });\n    /**\n     * Workaround for Stencil to autodefine\n     * ion-action-sheet when\n     * using Custom Elements build.\n     */\n    // eslint-disable-next-line\n    if (false) {\n      // eslint-disable-next-line\n      // @ts-ignore\n      document.createElement('ion-action-sheet');\n    }\n    return actionSheetController.create(actionSheetOpts);\n  }\n  async openAlert() {\n    const label = this.getLabel();\n    const labelText = label ? label.textContent : null;\n    const interfaceOptions = this.interfaceOptions;\n    const inputType = this.multiple ? 'checkbox' : 'radio';\n    const mode = getIonMode(this);\n    const alertOpts = Object.assign(Object.assign({ mode }, interfaceOptions), { header: interfaceOptions.header ? interfaceOptions.header : labelText, inputs: this.createAlertInputs(this.childOpts, inputType, this.value), buttons: [\n        {\n          text: this.cancelText,\n          role: 'cancel',\n          handler: () => {\n            this.ionCancel.emit();\n          },\n        },\n        {\n          text: this.okText,\n          handler: (selectedValues) => {\n            this.value = selectedValues;\n          },\n        },\n      ], cssClass: [\n        'select-alert',\n        interfaceOptions.cssClass,\n        this.multiple ? 'multiple-select-alert' : 'single-select-alert',\n      ] });\n    /**\n     * Workaround for Stencil to autodefine\n     * ion-alert when\n     * using Custom Elements build.\n     */\n    // eslint-disable-next-line\n    if (false) {\n      // eslint-disable-next-line\n      // @ts-ignore\n      document.createElement('ion-alert');\n    }\n    return alertController.create(alertOpts);\n  }\n  /**\n   * Close the select interface.\n   */\n  close() {\n    if (!this.overlay) {\n      return Promise.resolve(false);\n    }\n    return this.overlay.dismiss();\n  }\n  getLabel() {\n    return findItemLabel(this.el);\n  }\n  hasValue() {\n    return this.getText() !== '';\n  }\n  get childOpts() {\n    return Array.from(this.el.querySelectorAll('ion-select-option'));\n  }\n  getText() {\n    const selectedText = this.selectedText;\n    if (selectedText != null && selectedText !== '') {\n      return selectedText;\n    }\n    return generateText(this.childOpts, this.value, this.compareWith);\n  }\n  setFocus() {\n    if (this.focusEl) {\n      this.focusEl.focus();\n    }\n  }\n  emitStyle() {\n    this.ionStyle.emit({\n      interactive: true,\n      'interactive-disabled': this.disabled,\n      select: true,\n      'select-disabled': this.disabled,\n      'has-placeholder': this.placeholder !== undefined,\n      'has-value': this.hasValue(),\n      'has-focus': this.isExpanded,\n    });\n  }\n  render() {\n    const { disabled, el, inputId, isExpanded, name, placeholder, value } = this;\n    const mode = getIonMode(this);\n    const { labelText, labelId } = getAriaLabel(el, inputId);\n    renderHiddenInput(true, el, name, parseValue(value), disabled);\n    const displayValue = this.getText();\n    let addPlaceholderClass = false;\n    let selectText = displayValue;\n    if (selectText === '' && placeholder !== undefined) {\n      selectText = placeholder;\n      addPlaceholderClass = true;\n    }\n    const selectTextClasses = {\n      'select-text': true,\n      'select-placeholder': addPlaceholderClass,\n    };\n    const textPart = addPlaceholderClass ? 'placeholder' : 'text';\n    // If there is a label then we need to concatenate it with the\n    // current value (or placeholder) and a comma so it separates\n    // nicely when the screen reader announces it, otherwise just\n    // announce the value / placeholder\n    const displayLabel = labelText !== undefined ? (selectText !== '' ? `${selectText}, ${labelText}` : labelText) : selectText;\n    return (h(Host, { onClick: this.onClick, role: \"button\", \"aria-haspopup\": \"listbox\", \"aria-disabled\": disabled ? 'true' : null, \"aria-label\": displayLabel, class: {\n        [mode]: true,\n        'in-item': hostContext('ion-item', el),\n        'select-disabled': disabled,\n        'select-expanded': isExpanded,\n      } }, h(\"div\", { \"aria-hidden\": \"true\", class: selectTextClasses, part: textPart }, selectText), h(\"div\", { class: \"select-icon\", role: \"presentation\", part: \"icon\" }, h(\"div\", { class: \"select-icon-inner\" })), h(\"label\", { id: labelId }, displayLabel), h(\"button\", { type: \"button\", disabled: disabled, id: inputId, \"aria-labelledby\": labelId, \"aria-haspopup\": \"listbox\", \"aria-expanded\": `${isExpanded}`, onFocus: this.onFocus, onBlur: this.onBlur, ref: (focusEl) => (this.focusEl = focusEl) })));\n  }\n  static get is() { return \"ion-select\"; }\n  static get encapsulation() { return \"shadow\"; }\n  static get originalStyleUrls() {\n    return {\n      \"ios\": [\"select.ios.scss\"],\n      \"md\": [\"select.md.scss\"]\n    };\n  }\n  static get styleUrls() {\n    return {\n      \"ios\": [\"select.ios.css\"],\n      \"md\": [\"select.md.css\"]\n    };\n  }\n  static get properties() {\n    return {\n      \"disabled\": {\n        \"type\": \"boolean\",\n        \"mutable\": false,\n        \"complexType\": {\n          \"original\": \"boolean\",\n          \"resolved\": \"boolean\",\n          \"references\": {}\n        },\n        \"required\": false,\n        \"optional\": false,\n        \"docs\": {\n          \"tags\": [],\n          \"text\": \"If `true`, the user cannot interact with the select.\"\n        },\n        \"attribute\": \"disabled\",\n        \"reflect\": false,\n        \"defaultValue\": \"false\"\n      },\n      \"cancelText\": {\n        \"type\": \"string\",\n        \"mutable\": false,\n        \"complexType\": {\n          \"original\": \"string\",\n          \"resolved\": \"string\",\n          \"references\": {}\n        },\n        \"required\": false,\n        \"optional\": false,\n        \"docs\": {\n          \"tags\": [],\n          \"text\": \"The text to display on the cancel button.\"\n        },\n        \"attribute\": \"cancel-text\",\n        \"reflect\": false,\n        \"defaultValue\": \"'Cancel'\"\n      },\n      \"okText\": {\n        \"type\": \"string\",\n        \"mutable\": false,\n        \"complexType\": {\n          \"original\": \"string\",\n          \"resolved\": \"string\",\n          \"references\": {}\n        },\n        \"required\": false,\n        \"optional\": false,\n        \"docs\": {\n          \"tags\": [],\n          \"text\": \"The text to display on the ok button.\"\n        },\n        \"attribute\": \"ok-text\",\n        \"reflect\": false,\n        \"defaultValue\": \"'OK'\"\n      },\n      \"placeholder\": {\n        \"type\": \"string\",\n        \"mutable\": false,\n        \"complexType\": {\n          \"original\": \"string\",\n          \"resolved\": \"string | undefined\",\n          \"references\": {}\n        },\n        \"required\": false,\n        \"optional\": true,\n        \"docs\": {\n          \"tags\": [],\n          \"text\": \"The text to display when the select is empty.\"\n        },\n        \"attribute\": \"placeholder\",\n        \"reflect\": false\n      },\n      \"name\": {\n        \"type\": \"string\",\n        \"mutable\": false,\n        \"complexType\": {\n          \"original\": \"string\",\n          \"resolved\": \"string\",\n          \"references\": {}\n        },\n        \"required\": false,\n        \"optional\": false,\n        \"docs\": {\n          \"tags\": [],\n          \"text\": \"The name of the control, which is submitted with the form data.\"\n        },\n        \"attribute\": \"name\",\n        \"reflect\": false,\n        \"defaultValue\": \"this.inputId\"\n      },\n      \"selectedText\": {\n        \"type\": \"string\",\n        \"mutable\": false,\n        \"complexType\": {\n          \"original\": \"string | null\",\n          \"resolved\": \"null | string | undefined\",\n          \"references\": {}\n        },\n        \"required\": false,\n        \"optional\": true,\n        \"docs\": {\n          \"tags\": [],\n          \"text\": \"The text to display instead of the selected option's value.\"\n        },\n        \"attribute\": \"selected-text\",\n        \"reflect\": false\n      },\n      \"multiple\": {\n        \"type\": \"boolean\",\n        \"mutable\": false,\n        \"complexType\": {\n          \"original\": \"boolean\",\n          \"resolved\": \"boolean\",\n          \"references\": {}\n        },\n        \"required\": false,\n        \"optional\": false,\n        \"docs\": {\n          \"tags\": [],\n          \"text\": \"If `true`, the select can accept multiple values.\"\n        },\n        \"attribute\": \"multiple\",\n        \"reflect\": false,\n        \"defaultValue\": \"false\"\n      },\n      \"interface\": {\n        \"type\": \"string\",\n        \"mutable\": false,\n        \"complexType\": {\n          \"original\": \"SelectInterface\",\n          \"resolved\": \"\\\"action-sheet\\\" | \\\"alert\\\" | \\\"popover\\\"\",\n          \"references\": {\n            \"SelectInterface\": {\n              \"location\": \"import\",\n              \"path\": \"../../interface\"\n            }\n          }\n        },\n        \"required\": false,\n        \"optional\": false,\n        \"docs\": {\n          \"tags\": [],\n          \"text\": \"The interface the select should use: `action-sheet`, `popover` or `alert`.\"\n        },\n        \"attribute\": \"interface\",\n        \"reflect\": false,\n        \"defaultValue\": \"'alert'\"\n      },\n      \"interfaceOptions\": {\n        \"type\": \"any\",\n        \"mutable\": false,\n        \"complexType\": {\n          \"original\": \"any\",\n          \"resolved\": \"any\",\n          \"references\": {}\n        },\n        \"required\": false,\n        \"optional\": false,\n        \"docs\": {\n          \"tags\": [],\n          \"text\": \"Any additional options that the `alert`, `action-sheet` or `popover` interface\\ncan take. See the [ion-alert docs](./alert), the\\n[ion-action-sheet docs](./action-sheet) and the\\n[ion-popover docs](./popover) for the\\ncreate options for each interface.\\n\\nNote: `interfaceOptions` will not override `inputs` or `buttons` with the `alert` interface.\"\n        },\n        \"attribute\": \"interface-options\",\n        \"reflect\": false,\n        \"defaultValue\": \"{}\"\n      },\n      \"compareWith\": {\n        \"type\": \"string\",\n        \"mutable\": false,\n        \"complexType\": {\n          \"original\": \"string | SelectCompareFn | null\",\n          \"resolved\": \"((currentValue: any, compareValue: any) => boolean) | null | string | undefined\",\n          \"references\": {\n            \"SelectCompareFn\": {\n              \"location\": \"import\",\n              \"path\": \"./select-interface\"\n            }\n          }\n        },\n        \"required\": false,\n        \"optional\": true,\n        \"docs\": {\n          \"tags\": [],\n          \"text\": \"A property name or function used to compare object values\"\n        },\n        \"attribute\": \"compare-with\",\n        \"reflect\": false\n      },\n      \"value\": {\n        \"type\": \"any\",\n        \"mutable\": true,\n        \"complexType\": {\n          \"original\": \"any | null\",\n          \"resolved\": \"any\",\n          \"references\": {}\n        },\n        \"required\": false,\n        \"optional\": true,\n        \"docs\": {\n          \"tags\": [],\n          \"text\": \"the value of the select.\"\n        },\n        \"attribute\": \"value\",\n        \"reflect\": false\n      }\n    };\n  }\n  static get states() {\n    return {\n      \"isExpanded\": {}\n    };\n  }\n  static get events() {\n    return [{\n        \"method\": \"ionChange\",\n        \"name\": \"ionChange\",\n        \"bubbles\": true,\n        \"cancelable\": true,\n        \"composed\": true,\n        \"docs\": {\n          \"tags\": [],\n          \"text\": \"Emitted when the value has changed.\"\n        },\n        \"complexType\": {\n          \"original\": \"SelectChangeEventDetail\",\n          \"resolved\": \"SelectChangeEventDetail<any>\",\n          \"references\": {\n            \"SelectChangeEventDetail\": {\n              \"location\": \"import\",\n              \"path\": \"../../interface\"\n            }\n          }\n        }\n      }, {\n        \"method\": \"ionCancel\",\n        \"name\": \"ionCancel\",\n        \"bubbles\": true,\n        \"cancelable\": true,\n        \"composed\": true,\n        \"docs\": {\n          \"tags\": [],\n          \"text\": \"Emitted when the selection is cancelled.\"\n        },\n        \"complexType\": {\n          \"original\": \"void\",\n          \"resolved\": \"void\",\n          \"references\": {}\n        }\n      }, {\n        \"method\": \"ionDismiss\",\n        \"name\": \"ionDismiss\",\n        \"bubbles\": true,\n        \"cancelable\": true,\n        \"composed\": true,\n        \"docs\": {\n          \"tags\": [],\n          \"text\": \"Emitted when the overlay is dismissed.\"\n        },\n        \"complexType\": {\n          \"original\": \"void\",\n          \"resolved\": \"void\",\n          \"references\": {}\n        }\n      }, {\n        \"method\": \"ionFocus\",\n        \"name\": \"ionFocus\",\n        \"bubbles\": true,\n        \"cancelable\": true,\n        \"composed\": true,\n        \"docs\": {\n          \"tags\": [],\n          \"text\": \"Emitted when the select has focus.\"\n        },\n        \"complexType\": {\n          \"original\": \"void\",\n          \"resolved\": \"void\",\n          \"references\": {}\n        }\n      }, {\n        \"method\": \"ionBlur\",\n        \"name\": \"ionBlur\",\n        \"bubbles\": true,\n        \"cancelable\": true,\n        \"composed\": true,\n        \"docs\": {\n          \"tags\": [],\n          \"text\": \"Emitted when the select loses focus.\"\n        },\n        \"complexType\": {\n          \"original\": \"void\",\n          \"resolved\": \"void\",\n          \"references\": {}\n        }\n      }, {\n        \"method\": \"ionStyle\",\n        \"name\": \"ionStyle\",\n        \"bubbles\": true,\n        \"cancelable\": true,\n        \"composed\": true,\n        \"docs\": {\n          \"tags\": [{\n              \"name\": \"internal\",\n              \"text\": undefined\n            }],\n          \"text\": \"Emitted when the styles change.\"\n        },\n        \"complexType\": {\n          \"original\": \"StyleEventDetail\",\n          \"resolved\": \"StyleEventDetail\",\n          \"references\": {\n            \"StyleEventDetail\": {\n              \"location\": \"import\",\n              \"path\": \"../../interface\"\n            }\n          }\n        }\n      }];\n  }\n  static get methods() {\n    return {\n      \"open\": {\n        \"complexType\": {\n          \"signature\": \"(event?: UIEvent) => Promise<any>\",\n          \"parameters\": [{\n              \"tags\": [{\n                  \"name\": \"param\",\n                  \"text\": \"event The user interface event that called the open.\"\n                }],\n              \"text\": \"The user interface event that called the open.\"\n            }],\n          \"references\": {\n            \"Promise\": {\n              \"location\": \"global\"\n            },\n            \"UIEvent\": {\n              \"location\": \"global\"\n            },\n            \"HTMLElement\": {\n              \"location\": \"global\"\n            }\n          },\n          \"return\": \"Promise<any>\"\n        },\n        \"docs\": {\n          \"text\": \"Open the select overlay. The overlay is either an alert, action sheet, or popover,\\ndepending on the `interface` property on the `ion-select`.\",\n          \"tags\": [{\n              \"name\": \"param\",\n              \"text\": \"event The user interface event that called the open.\"\n            }]\n        }\n      }\n    };\n  }\n  static get elementRef() { return \"el\"; }\n  static get watchers() {\n    return [{\n        \"propName\": \"disabled\",\n        \"methodName\": \"styleChanged\"\n      }, {\n        \"propName\": \"placeholder\",\n        \"methodName\": \"styleChanged\"\n      }, {\n        \"propName\": \"isExpanded\",\n        \"methodName\": \"styleChanged\"\n      }, {\n        \"propName\": \"value\",\n        \"methodName\": \"valueChanged\"\n      }];\n  }\n}\nconst isOptionSelected = (currentValue, compareValue, compareWith) => {\n  if (currentValue === undefined) {\n    return false;\n  }\n  if (Array.isArray(currentValue)) {\n    return currentValue.some((val) => compareOptions(val, compareValue, compareWith));\n  }\n  else {\n    return compareOptions(currentValue, compareValue, compareWith);\n  }\n};\nconst getOptionValue = (el) => {\n  const value = el.value;\n  return value === undefined ? el.textContent || '' : value;\n};\nconst parseValue = (value) => {\n  if (value == null) {\n    return undefined;\n  }\n  if (Array.isArray(value)) {\n    return value.join(',');\n  }\n  return value.toString();\n};\nconst compareOptions = (currentValue, compareValue, compareWith) => {\n  if (typeof compareWith === 'function') {\n    return compareWith(currentValue, compareValue);\n  }\n  else if (typeof compareWith === 'string') {\n    return currentValue[compareWith] === compareValue[compareWith];\n  }\n  else {\n    return Array.isArray(compareValue) ? compareValue.includes(currentValue) : currentValue === compareValue;\n  }\n};\nconst generateText = (opts, value, compareWith) => {\n  if (value === undefined) {\n    return '';\n  }\n  if (Array.isArray(value)) {\n    return value\n      .map((v) => textForValue(opts, v, compareWith))\n      .filter((opt) => opt !== null)\n      .join(', ');\n  }\n  else {\n    return textForValue(opts, value, compareWith) || '';\n  }\n};\nconst textForValue = (opts, value, compareWith) => {\n  const selectOpt = opts.find((opt) => {\n    return compareOptions(value, getOptionValue(opt), compareWith);\n  });\n  return selectOpt ? selectOpt.textContent : null;\n};\nlet selectIds = 0;\nconst OPTION_CLASS = 'select-interface-option';\n"],"mappings":"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"}