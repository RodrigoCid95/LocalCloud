{"version":3,"names":["cloneMap","WeakMap","relocateInput","componentEl","inputEl","shouldRelocate","inputRelativeY","disabledClonedInput","has","addClone","removeClone","isFocused","input","getRootNode","activeElement","parentEl","parentNode","clonedEl","cloneNode","classList","add","tabIndex","disabled","appendChild","set","doc","ownerDocument","tx","dir","style","pointerEvents","transform","clone","get","delete","remove","enableHideCaretOnScroll","scrollEl","scrollHideCaret","shouldHideCaret","onBlur","hideCaret","showCaret","addEventListener","removeEventListener","SKIP_SELECTOR","enableInputBlurring","focused","didScroll","document","onScroll","onFocusin","onTouchend","ev","active","matches","tapped","target","closest","setTimeout","blur","SCROLL_ASSIST_SPEED","getScrollData","contentEl","keyboardHeight","_a","itemEl","calcScrollData","getBoundingClientRect","defaultView","innerHeight","inputRect","contentRect","platformHeight","inputTop","top","inputBottom","bottom","visibleAreaTop","visibleAreaBottom","Math","min","safeAreaTop","safeAreaBottom","distanceToBottom","distanceToTop","desiredScrollAmount","round","scrollAmount","distance","abs","duration","scrollDuration","max","scrollPadding","inputSafeY","enableScrollAssist","footerEl","disableClonedInput","coord","touchStart","pointerCoord","touchEnd","endCoord","hasPointerMoved","jsSetFocus","capture","passive","async","scrollData","focus","raf","click","window","scrollContentTimeout","scrollContent","undefined","clearTimeout","doubleKeyboardEventListener","scrollByPoint","getScrollElement","totalScrollAmount","scrollHeight","clientHeight","scrollTop","type","threshold","startCoord","deltaX","x","deltaY","y","PADDING_TIMER_KEY","enableScrollPadding","setScrollPadding","onFocusout","_b","tagName","parentElement","el","findClosestIonContent","timer","setProperty","INPUT_BLURRING","SCROLL_PADDING","startInputShims","config","platform","isIOS","isAndroid","getNumber","scrollAssist","getBoolean","inputBlurring","inputs","Array","from","querySelectorAll","hideCaretMap","scrollAssistMap","registerInput","Promise","resolve","componentOnReady","inputRoot","shadowRoot","querySelector","rmFn","isDateInput","unregisterInput","fn","detail"],"sources":["./node_modules/@ionic/core/dist/collection/utils/input-shims/hacks/common.js","./node_modules/@ionic/core/dist/collection/utils/input-shims/hacks/hide-caret.js","./node_modules/@ionic/core/dist/collection/utils/input-shims/hacks/input-blurring.js","./node_modules/@ionic/core/dist/collection/utils/input-shims/hacks/scroll-data.js","./node_modules/@ionic/core/dist/collection/utils/input-shims/hacks/scroll-assist.js","./node_modules/@ionic/core/dist/collection/utils/input-shims/hacks/scroll-padding.js","./node_modules/@ionic/core/dist/collection/utils/input-shims/input-shims.js"],"sourcesContent":["/*!\n * (C) Ionic http://ionicframework.com - MIT License\n */\nconst cloneMap = new WeakMap();\nexport const relocateInput = (componentEl, inputEl, shouldRelocate, inputRelativeY = 0, disabledClonedInput = false) => {\n  if (cloneMap.has(componentEl) === shouldRelocate) {\n    return;\n  }\n  if (shouldRelocate) {\n    addClone(componentEl, inputEl, inputRelativeY, disabledClonedInput);\n  }\n  else {\n    removeClone(componentEl, inputEl);\n  }\n};\n// TODO(FW-2832): type\nexport const isFocused = (input) => {\n  return input === input.getRootNode().activeElement;\n};\nconst addClone = (componentEl, inputEl, inputRelativeY, disabledClonedInput = false) => {\n  // this allows for the actual input to receive the focus from\n  // the user's touch event, but before it receives focus, it\n  // moves the actual input to a location that will not screw\n  // up the app's layout, and does not allow the native browser\n  // to attempt to scroll the input into place (messing up headers/footers)\n  // the cloned input fills the area of where native input should be\n  // while the native input fakes out the browser by relocating itself\n  // before it receives the actual focus event\n  // We hide the focused input (with the visible caret) invisible by making it scale(0),\n  const parentEl = inputEl.parentNode;\n  // DOM WRITES\n  const clonedEl = inputEl.cloneNode(false);\n  clonedEl.classList.add('cloned-input');\n  clonedEl.tabIndex = -1;\n  /**\n   * Making the cloned input disabled prevents\n   * Chrome for Android from still scrolling\n   * the entire page since this cloned input\n   * will briefly be hidden by the keyboard\n   * even though it is not focused.\n   *\n   * This is not needed on iOS. While this\n   * does not cause functional issues on iOS,\n   * the input still appears slightly dimmed even\n   * if we set opacity: 1.\n   */\n  if (disabledClonedInput) {\n    clonedEl.disabled = true;\n  }\n  parentEl.appendChild(clonedEl);\n  cloneMap.set(componentEl, clonedEl);\n  const doc = componentEl.ownerDocument;\n  const tx = doc.dir === 'rtl' ? 9999 : -9999;\n  componentEl.style.pointerEvents = 'none';\n  inputEl.style.transform = `translate3d(${tx}px,${inputRelativeY}px,0) scale(0)`;\n};\nconst removeClone = (componentEl, inputEl) => {\n  const clone = cloneMap.get(componentEl);\n  if (clone) {\n    cloneMap.delete(componentEl);\n    clone.remove();\n  }\n  componentEl.style.pointerEvents = '';\n  inputEl.style.transform = '';\n};\n","/*!\n * (C) Ionic http://ionicframework.com - MIT License\n */\nimport { addEventListener, removeEventListener } from '../../helpers';\nimport { isFocused, relocateInput } from './common';\nexport const enableHideCaretOnScroll = (componentEl, inputEl, scrollEl) => {\n  if (!scrollEl || !inputEl) {\n    return () => {\n      return;\n    };\n  }\n  const scrollHideCaret = (shouldHideCaret) => {\n    if (isFocused(inputEl)) {\n      relocateInput(componentEl, inputEl, shouldHideCaret);\n    }\n  };\n  const onBlur = () => relocateInput(componentEl, inputEl, false);\n  const hideCaret = () => scrollHideCaret(true);\n  const showCaret = () => scrollHideCaret(false);\n  addEventListener(scrollEl, 'ionScrollStart', hideCaret);\n  addEventListener(scrollEl, 'ionScrollEnd', showCaret);\n  inputEl.addEventListener('blur', onBlur);\n  return () => {\n    removeEventListener(scrollEl, 'ionScrollStart', hideCaret);\n    removeEventListener(scrollEl, 'ionScrollEnd', showCaret);\n    inputEl.removeEventListener('blur', onBlur);\n  };\n};\n","/*!\n * (C) Ionic http://ionicframework.com - MIT License\n */\nimport { addEventListener, removeEventListener } from '../../helpers';\nconst SKIP_SELECTOR = 'input, textarea, [no-blur], [contenteditable]';\nexport const enableInputBlurring = () => {\n  let focused = true;\n  let didScroll = false;\n  const doc = document;\n  const onScroll = () => {\n    didScroll = true;\n  };\n  const onFocusin = () => {\n    focused = true;\n  };\n  const onTouchend = (ev) => {\n    // if app did scroll return early\n    if (didScroll) {\n      didScroll = false;\n      return;\n    }\n    const active = doc.activeElement;\n    if (!active) {\n      return;\n    }\n    // only blur if the active element is a text-input or a textarea\n    if (active.matches(SKIP_SELECTOR)) {\n      return;\n    }\n    // if the selected target is the active element, do not blur\n    const tapped = ev.target;\n    if (tapped === active) {\n      return;\n    }\n    if (tapped.matches(SKIP_SELECTOR) || tapped.closest(SKIP_SELECTOR)) {\n      return;\n    }\n    focused = false;\n    // TODO FW-2796: find a better way, why 50ms?\n    setTimeout(() => {\n      if (!focused) {\n        active.blur();\n      }\n    }, 50);\n  };\n  addEventListener(doc, 'ionScrollStart', onScroll);\n  doc.addEventListener('focusin', onFocusin, true);\n  doc.addEventListener('touchend', onTouchend, false);\n  return () => {\n    removeEventListener(doc, 'ionScrollStart', onScroll, true);\n    doc.removeEventListener('focusin', onFocusin, true);\n    doc.removeEventListener('touchend', onTouchend, false);\n  };\n};\n","/*!\n * (C) Ionic http://ionicframework.com - MIT License\n */\nconst SCROLL_ASSIST_SPEED = 0.3;\nexport const getScrollData = (componentEl, contentEl, keyboardHeight) => {\n  var _a;\n  const itemEl = (_a = componentEl.closest('ion-item,[ion-item]')) !== null && _a !== void 0 ? _a : componentEl;\n  return calcScrollData(itemEl.getBoundingClientRect(), contentEl.getBoundingClientRect(), keyboardHeight, componentEl.ownerDocument.defaultView.innerHeight // TODO(FW-2832): type\n  );\n};\nconst calcScrollData = (inputRect, contentRect, keyboardHeight, platformHeight) => {\n  // compute input's Y values relative to the body\n  const inputTop = inputRect.top;\n  const inputBottom = inputRect.bottom;\n  // compute visible area\n  const visibleAreaTop = contentRect.top;\n  const visibleAreaBottom = Math.min(contentRect.bottom, platformHeight - keyboardHeight);\n  // compute safe area\n  const safeAreaTop = visibleAreaTop + 15;\n  const safeAreaBottom = visibleAreaBottom * 0.75;\n  // figure out if each edge of the input is within the safe area\n  const distanceToBottom = safeAreaBottom - inputBottom;\n  const distanceToTop = safeAreaTop - inputTop;\n  // desiredScrollAmount is the negated distance to the safe area according to our calculations.\n  const desiredScrollAmount = Math.round(distanceToBottom < 0 ? -distanceToBottom : distanceToTop > 0 ? -distanceToTop : 0);\n  // our calculations make some assumptions that aren't always true, like the keyboard being closed when an input\n  // gets focus, so make sure we don't scroll the input above the visible area\n  const scrollAmount = Math.min(desiredScrollAmount, inputTop - visibleAreaTop);\n  const distance = Math.abs(scrollAmount);\n  const duration = distance / SCROLL_ASSIST_SPEED;\n  const scrollDuration = Math.min(400, Math.max(150, duration));\n  return {\n    scrollAmount,\n    scrollDuration,\n    scrollPadding: keyboardHeight,\n    inputSafeY: -(inputTop - safeAreaTop) + 4,\n  };\n};\n","/*!\n * (C) Ionic http://ionicframework.com - MIT License\n */\nimport { getScrollElement, scrollByPoint } from '../../content';\nimport { pointerCoord, raf } from '../../helpers';\nimport { isFocused, relocateInput } from './common';\nimport { getScrollData } from './scroll-data';\nexport const enableScrollAssist = (componentEl, inputEl, contentEl, footerEl, keyboardHeight, disableClonedInput = false) => {\n  let coord;\n  const touchStart = (ev) => {\n    coord = pointerCoord(ev);\n  };\n  const touchEnd = (ev) => {\n    // input cover touchend/mouseup\n    if (!coord) {\n      return;\n    }\n    // get where the touchend/mouseup ended\n    const endCoord = pointerCoord(ev);\n    // focus this input if the pointer hasn't moved XX pixels\n    // and the input doesn't already have focus\n    if (!hasPointerMoved(6, coord, endCoord) && !isFocused(inputEl)) {\n      // begin the input focus process\n      jsSetFocus(componentEl, inputEl, contentEl, footerEl, keyboardHeight, disableClonedInput);\n    }\n  };\n  componentEl.addEventListener('touchstart', touchStart, { capture: true, passive: true });\n  componentEl.addEventListener('touchend', touchEnd, true);\n  return () => {\n    componentEl.removeEventListener('touchstart', touchStart, true);\n    componentEl.removeEventListener('touchend', touchEnd, true);\n  };\n};\nconst jsSetFocus = async (componentEl, inputEl, contentEl, footerEl, keyboardHeight, disableClonedInput = false) => {\n  if (!contentEl && !footerEl) {\n    return;\n  }\n  const scrollData = getScrollData(componentEl, (contentEl || footerEl), keyboardHeight);\n  if (contentEl && Math.abs(scrollData.scrollAmount) < 4) {\n    // the text input is in a safe position that doesn't\n    // require it to be scrolled into view, just set focus now\n    inputEl.focus();\n    return;\n  }\n  // temporarily move the focus to the focus holder so the browser\n  // doesn't freak out while it's trying to get the input in place\n  // at this point the native text input still does not have focus\n  relocateInput(componentEl, inputEl, true, scrollData.inputSafeY, disableClonedInput);\n  inputEl.focus();\n  /**\n   * Relocating/Focusing input causes the\n   * click event to be cancelled, so\n   * manually fire one here.\n   */\n  raf(() => componentEl.click());\n  if (typeof window !== 'undefined') {\n    let scrollContentTimeout;\n    const scrollContent = async () => {\n      // clean up listeners and timeouts\n      if (scrollContentTimeout !== undefined) {\n        clearTimeout(scrollContentTimeout);\n      }\n      window.removeEventListener('ionKeyboardDidShow', doubleKeyboardEventListener);\n      window.removeEventListener('ionKeyboardDidShow', scrollContent);\n      // scroll the input into place\n      if (contentEl) {\n        await scrollByPoint(contentEl, 0, scrollData.scrollAmount, scrollData.scrollDuration);\n      }\n      // the scroll view is in the correct position now\n      // give the native text input focus\n      relocateInput(componentEl, inputEl, false, scrollData.inputSafeY);\n      // ensure this is the focused input\n      inputEl.focus();\n    };\n    const doubleKeyboardEventListener = () => {\n      window.removeEventListener('ionKeyboardDidShow', doubleKeyboardEventListener);\n      window.addEventListener('ionKeyboardDidShow', scrollContent);\n    };\n    if (contentEl) {\n      const scrollEl = await getScrollElement(contentEl);\n      /**\n       * scrollData will only consider the amount we need\n       * to scroll in order to properly bring the input\n       * into view. It will not consider the amount\n       * we can scroll in the content element.\n       * As a result, scrollData may request a greater\n       * scroll position than is currently available\n       * in the DOM. If this is the case, we need to\n       * wait for the webview to resize/the keyboard\n       * to show in order for additional scroll\n       * bandwidth to become available.\n       */\n      const totalScrollAmount = scrollEl.scrollHeight - scrollEl.clientHeight;\n      if (scrollData.scrollAmount > totalScrollAmount - scrollEl.scrollTop) {\n        /**\n         * On iOS devices, the system will show a \"Passwords\" bar above the keyboard\n         * after the initial keyboard is shown. This prevents the webview from resizing\n         * until the \"Passwords\" bar is shown, so we need to wait for that to happen first.\n         */\n        if (inputEl.type === 'password') {\n          // Add 50px to account for the \"Passwords\" bar\n          scrollData.scrollAmount += 50;\n          window.addEventListener('ionKeyboardDidShow', doubleKeyboardEventListener);\n        }\n        else {\n          window.addEventListener('ionKeyboardDidShow', scrollContent);\n        }\n        /**\n         * This should only fire in 2 instances:\n         * 1. The app is very slow.\n         * 2. The app is running in a browser on an old OS\n         * that does not support Ionic Keyboard Events\n         */\n        scrollContentTimeout = setTimeout(scrollContent, 1000);\n        return;\n      }\n    }\n    scrollContent();\n  }\n};\nconst hasPointerMoved = (threshold, startCoord, endCoord) => {\n  if (startCoord && endCoord) {\n    const deltaX = startCoord.x - endCoord.x;\n    const deltaY = startCoord.y - endCoord.y;\n    const distance = deltaX * deltaX + deltaY * deltaY;\n    return distance > threshold * threshold;\n  }\n  return false;\n};\n","/*!\n * (C) Ionic http://ionicframework.com - MIT License\n */\nimport { findClosestIonContent } from '../../content';\nconst PADDING_TIMER_KEY = '$ionPaddingTimer';\nexport const enableScrollPadding = (keyboardHeight) => {\n  const doc = document;\n  // TODO(FW-2832): types\n  const onFocusin = (ev) => {\n    setScrollPadding(ev.target, keyboardHeight);\n  };\n  const onFocusout = (ev) => {\n    setScrollPadding(ev.target, 0);\n  };\n  doc.addEventListener('focusin', onFocusin);\n  doc.addEventListener('focusout', onFocusout);\n  return () => {\n    doc.removeEventListener('focusin', onFocusin);\n    doc.removeEventListener('focusout', onFocusout);\n  };\n};\nconst setScrollPadding = (input, keyboardHeight) => {\n  var _a, _b;\n  if (input.tagName !== 'INPUT') {\n    return;\n  }\n  if (input.parentElement && input.parentElement.tagName === 'ION-INPUT') {\n    return;\n  }\n  if (((_b = (_a = input.parentElement) === null || _a === void 0 ? void 0 : _a.parentElement) === null || _b === void 0 ? void 0 : _b.tagName) === 'ION-SEARCHBAR') {\n    return;\n  }\n  const el = findClosestIonContent(input);\n  if (el === null) {\n    return;\n  }\n  const timer = el[PADDING_TIMER_KEY];\n  if (timer) {\n    clearTimeout(timer);\n  }\n  if (keyboardHeight > 0) {\n    el.style.setProperty('--keyboard-offset', `${keyboardHeight}px`);\n  }\n  else {\n    el[PADDING_TIMER_KEY] = setTimeout(() => {\n      el.style.setProperty('--keyboard-offset', '0px');\n    }, 120);\n  }\n};\n","/*!\n * (C) Ionic http://ionicframework.com - MIT License\n */\nimport { findClosestIonContent } from '../content';\nimport { componentOnReady } from '../helpers';\nimport { enableHideCaretOnScroll } from './hacks/hide-caret';\nimport { enableInputBlurring } from './hacks/input-blurring';\nimport { enableScrollAssist } from './hacks/scroll-assist';\nimport { enableScrollPadding } from './hacks/scroll-padding';\nconst INPUT_BLURRING = true;\nconst SCROLL_ASSIST = true;\nconst SCROLL_PADDING = true;\nconst HIDE_CARET = true;\nexport const startInputShims = (config, platform) => {\n  const doc = document;\n  const isIOS = platform === 'ios';\n  const isAndroid = platform === 'android';\n  /**\n   * Hide Caret and Input Blurring are needed on iOS.\n   * Scroll Assist and Scroll Padding are needed on iOS and Android\n   * with Chrome web browser (not Chrome webview).\n   */\n  const keyboardHeight = config.getNumber('keyboardHeight', 290);\n  const scrollAssist = config.getBoolean('scrollAssist', true);\n  const hideCaret = config.getBoolean('hideCaretOnScroll', isIOS);\n  const inputBlurring = config.getBoolean('inputBlurring', isIOS);\n  const scrollPadding = config.getBoolean('scrollPadding', true);\n  const inputs = Array.from(doc.querySelectorAll('ion-input, ion-textarea'));\n  const hideCaretMap = new WeakMap();\n  const scrollAssistMap = new WeakMap();\n  const registerInput = async (componentEl) => {\n    await new Promise((resolve) => componentOnReady(componentEl, resolve));\n    const inputRoot = componentEl.shadowRoot || componentEl;\n    const inputEl = inputRoot.querySelector('input') || inputRoot.querySelector('textarea');\n    const scrollEl = findClosestIonContent(componentEl);\n    const footerEl = !scrollEl ? componentEl.closest('ion-footer') : null;\n    if (!inputEl) {\n      return;\n    }\n    if (HIDE_CARET && !!scrollEl && hideCaret && !hideCaretMap.has(componentEl)) {\n      const rmFn = enableHideCaretOnScroll(componentEl, inputEl, scrollEl);\n      hideCaretMap.set(componentEl, rmFn);\n    }\n    /**\n     * date/datetime-locale inputs on mobile devices show date picker\n     * overlays instead of keyboards. As a result, scroll assist is\n     * not needed. This also works around a bug in iOS <16 where\n     * scroll assist causes the browser to lock up. See FW-1997.\n     */\n    const isDateInput = inputEl.type === 'date' || inputEl.type === 'datetime-local';\n    if (SCROLL_ASSIST &&\n      !isDateInput &&\n      (!!scrollEl || !!footerEl) &&\n      scrollAssist &&\n      !scrollAssistMap.has(componentEl)) {\n      const rmFn = enableScrollAssist(componentEl, inputEl, scrollEl, footerEl, keyboardHeight, isAndroid);\n      scrollAssistMap.set(componentEl, rmFn);\n    }\n  };\n  const unregisterInput = (componentEl) => {\n    if (HIDE_CARET && hideCaret) {\n      const fn = hideCaretMap.get(componentEl);\n      if (fn) {\n        fn();\n      }\n      hideCaretMap.delete(componentEl);\n    }\n    if (SCROLL_ASSIST && scrollAssist) {\n      const fn = scrollAssistMap.get(componentEl);\n      if (fn) {\n        fn();\n      }\n      scrollAssistMap.delete(componentEl);\n    }\n  };\n  if (inputBlurring && INPUT_BLURRING) {\n    enableInputBlurring();\n  }\n  if (scrollPadding && SCROLL_PADDING) {\n    enableScrollPadding(keyboardHeight);\n  }\n  // Input might be already loaded in the DOM before ion-device-hacks did.\n  // At this point we need to look for all of the inputs not registered yet\n  // and register them.\n  for (const input of inputs) {\n    registerInput(input);\n  }\n  // TODO(FW-2832): types\n  doc.addEventListener('ionInputDidLoad', ((ev) => {\n    registerInput(ev.detail);\n  }));\n  doc.addEventListener('ionInputDidUnload', ((ev) => {\n    unregisterInput(ev.detail);\n  }));\n};\n"],"mappings":"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"}